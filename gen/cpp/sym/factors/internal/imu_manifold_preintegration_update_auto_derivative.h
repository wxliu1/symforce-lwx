// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/rot3.h>

namespace sym {

/**
 * Alternative to ImuManifoldPreintegrationUpdate that uses auto-derivatives. Exists only to
 * help verify correctness of ImuManifoldPreintegrationUpdate. Should have the same output.
 * Since this function is more expensive, there is no reason to use it instead.
 *
 * An internal helper function to update a set of preintegrated IMU measurements with a new pair of
 * gyroscope and accelerometer measurements. Returns the updated preintegrated measurements.
 *
 * NOTE: If you are interested in this function, you should likely be using the
 * ``IntegrateMeasurement`` method of the ``PreintegratedImuMeasurements`` class located in
 * ``symforce/slam/imu_preintegration/preintegrated_imu_measurements.h``.
 *
 * When integrating the first measurement, DR should be the identity, Dv, Dp, covariance, and the
 * derivatives w.r.t. to bias should all be 0.
 *
 * Args:
 *     DR: Preintegrated change in orientation
 *     Dv: Preintegrated change in velocity
 *     Dp: Preintegrated change in position
 *     covariance: Covariance [DR, Dv, Dp] in local coordinates of mean
 *     DR_D_gyro_bias: Derivative of DR w.r.t. gyro_bias
 *     Dv_D_accel_bias: Derivative of Dv w.r.t. accel_bias
 *     Dv_D_gyro_bias: Derivative of Dv w.r.t. gyro_bias
 *     Dp_D_accel_bias: Derivative of Dp w.r.t. accel_bias
 *     Dp_D_gyro_bias: Derivative of Dp w.r.t. gyro_bias
 *     accel_bias: Initial guess for the accelerometer measurement bias
 *     gyro_bias: Initial guess for the gyroscope measurement bias
 *     accel_cov_diagonal: The diagonal of the covariance of the accelerometer measurement
 *     gyro_cov_diagonal: The diagonal of the covariance of the gyroscope measurement
 *     accel_measurement: The accelerometer measurement
 *     gyro_measurement: The gyroscope measurement
 *     dt: The time between the new measurements and the last
 *     epsilon: epsilon for numerical stability
 *
 * Returns:
 *     T.Tuple[sf.Rot3, sf.V3, sf.V3, sf.M99, sf.M33, sf.M33, sf.M33, sf.M33, sf.M33]:
 *         new_DR,
 *         new_Dv,
 *         new_Dp,
 *         new_covariance,
 *         new_DR_D_gyro_bias,
 *         new_Dv_D_accel_bias,
 *         new_Dv_D_gyro_bias,
 *         new_Dp_D_accel_bias
 *         new_Dp_D_gyro_bias,
 */
template <typename Scalar>
void ImuManifoldPreintegrationUpdateAutoDerivative(
    const sym::Rot3<Scalar>& DR, const Eigen::Matrix<Scalar, 3, 1>& Dv,
    const Eigen::Matrix<Scalar, 3, 1>& Dp, const Eigen::Matrix<Scalar, 9, 9>& covariance,
    const Eigen::Matrix<Scalar, 3, 3>& DR_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dv_D_accel_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dv_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dp_D_accel_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dp_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 1>& accel_bias, const Eigen::Matrix<Scalar, 3, 1>& gyro_bias,
    const Eigen::Matrix<Scalar, 3, 1>& accel_cov_diagonal,
    const Eigen::Matrix<Scalar, 3, 1>& gyro_cov_diagonal,
    const Eigen::Matrix<Scalar, 3, 1>& accel_measurement,
    const Eigen::Matrix<Scalar, 3, 1>& gyro_measurement, const Scalar dt, const Scalar epsilon,
    sym::Rot3<Scalar>* const new_DR = nullptr, Eigen::Matrix<Scalar, 3, 1>* const new_Dv = nullptr,
    Eigen::Matrix<Scalar, 3, 1>* const new_Dp = nullptr,
    Eigen::Matrix<Scalar, 9, 9>* const new_covariance = nullptr,
    Eigen::Matrix<Scalar, 3, 3>* const new_DR_D_gyro_bias = nullptr,
    Eigen::Matrix<Scalar, 3, 3>* const new_Dv_D_accel_bias = nullptr,
    Eigen::Matrix<Scalar, 3, 3>* const new_Dv_D_gyro_bias = nullptr,
    Eigen::Matrix<Scalar, 3, 3>* const new_Dp_D_accel_bias = nullptr,
    Eigen::Matrix<Scalar, 3, 3>* const new_Dp_D_gyro_bias = nullptr) {
  // Total ops: 1702

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DR = DR.Data();

  // Intermediate terms (447)
  const Scalar _tmp0 = -gyro_bias(0, 0) + gyro_measurement(0, 0);
  const Scalar _tmp1 = std::pow(dt, Scalar(2));
  const Scalar _tmp2 = -gyro_bias(2, 0) + gyro_measurement(2, 0);
  const Scalar _tmp3 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -gyro_bias(1, 0) + gyro_measurement(1, 0);
  const Scalar _tmp5 = std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = std::pow(_tmp0, Scalar(2));
  const Scalar _tmp7 = _tmp1 * _tmp3 + _tmp1 * _tmp5 + _tmp1 * _tmp6 + std::pow(epsilon, Scalar(2));
  const Scalar _tmp8 = std::sqrt(_tmp7);
  const Scalar _tmp9 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp10 = std::sin(_tmp9);
  const Scalar _tmp11 = _DR[3] * _tmp10;
  const Scalar _tmp12 = Scalar(1.0) / (_tmp8);
  const Scalar _tmp13 = _tmp12 * dt;
  const Scalar _tmp14 = _tmp11 * _tmp13;
  const Scalar _tmp15 = _tmp0 * _tmp14;
  const Scalar _tmp16 = _tmp10 * _tmp13;
  const Scalar _tmp17 = _DR[1] * _tmp16;
  const Scalar _tmp18 = _tmp17 * _tmp2;
  const Scalar _tmp19 = _DR[2] * _tmp16;
  const Scalar _tmp20 = _tmp19 * _tmp4;
  const Scalar _tmp21 = std::cos(_tmp9);
  const Scalar _tmp22 = _DR[0] * _tmp21;
  const Scalar _tmp23 = _tmp15 + _tmp18 - _tmp20 + _tmp22;
  const Scalar _tmp24 = _DR[0] * _tmp16;
  const Scalar _tmp25 = _tmp2 * _tmp24;
  const Scalar _tmp26 = _tmp14 * _tmp4;
  const Scalar _tmp27 = _tmp0 * _tmp19;
  const Scalar _tmp28 = _DR[1] * _tmp21;
  const Scalar _tmp29 = -_tmp25 + _tmp26 + _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp24 * _tmp4;
  const Scalar _tmp31 = _tmp14 * _tmp2;
  const Scalar _tmp32 = _tmp0 * _tmp17;
  const Scalar _tmp33 = _DR[2] * _tmp21;
  const Scalar _tmp34 = _tmp30 + _tmp31 - _tmp32 + _tmp33;
  const Scalar _tmp35 = _DR[3] * _tmp21;
  const Scalar _tmp36 = _tmp0 * _tmp24;
  const Scalar _tmp37 = _tmp17 * _tmp4;
  const Scalar _tmp38 = _tmp19 * _tmp2;
  const Scalar _tmp39 = _tmp35 - _tmp36 - _tmp37 - _tmp38;
  const Scalar _tmp40 = std::pow(_DR[2], Scalar(2));
  const Scalar _tmp41 = -2 * _tmp40;
  const Scalar _tmp42 = std::pow(_DR[1], Scalar(2));
  const Scalar _tmp43 = 1 - 2 * _tmp42;
  const Scalar _tmp44 = _tmp41 + _tmp43;
  const Scalar _tmp45 = -accel_bias(0, 0) + accel_measurement(0, 0);
  const Scalar _tmp46 = 2 * _DR[1];
  const Scalar _tmp47 = _DR[0] * _tmp46;
  const Scalar _tmp48 = 2 * _DR[2] * _DR[3];
  const Scalar _tmp49 = -_tmp48;
  const Scalar _tmp50 = _tmp47 + _tmp49;
  const Scalar _tmp51 = -accel_bias(1, 0) + accel_measurement(1, 0);
  const Scalar _tmp52 = _DR[3] * _tmp46;
  const Scalar _tmp53 = 2 * _DR[0];
  const Scalar _tmp54 = _DR[2] * _tmp53;
  const Scalar _tmp55 = _tmp52 + _tmp54;
  const Scalar _tmp56 = -accel_bias(2, 0) + accel_measurement(2, 0);
  const Scalar _tmp57 = _tmp44 * _tmp45 + _tmp50 * _tmp51 + _tmp55 * _tmp56;
  const Scalar _tmp58 = std::pow(_DR[0], Scalar(2));
  const Scalar _tmp59 = -2 * _tmp58;
  const Scalar _tmp60 = _tmp41 + _tmp59 + 1;
  const Scalar _tmp61 = _tmp47 + _tmp48;
  const Scalar _tmp62 = _DR[3] * _tmp53;
  const Scalar _tmp63 = -_tmp62;
  const Scalar _tmp64 = _DR[2] * _tmp46;
  const Scalar _tmp65 = _tmp63 + _tmp64;
  const Scalar _tmp66 = _tmp45 * _tmp61 + _tmp51 * _tmp60 + _tmp56 * _tmp65;
  const Scalar _tmp67 = _tmp43 + _tmp59;
  const Scalar _tmp68 = -_tmp52;
  const Scalar _tmp69 = _tmp54 + _tmp68;
  const Scalar _tmp70 = _tmp62 + _tmp64;
  const Scalar _tmp71 = _tmp45 * _tmp69 + _tmp51 * _tmp70 + _tmp56 * _tmp67;
  const Scalar _tmp72 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp73 = _tmp12 * _tmp72;
  const Scalar _tmp74 = _tmp10 * _tmp73;
  const Scalar _tmp75 = _tmp2 * _tmp74;
  const Scalar _tmp76 = _DR[0] * _tmp75;
  const Scalar _tmp77 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp78 = [&]() {
    const Scalar base = dt;
    return base * base * base;
  }();
  const Scalar _tmp79 = _tmp78 / _tmp7;
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = _tmp3 * _tmp80;
  const Scalar _tmp82 = _tmp78 / (_tmp7 * std::sqrt(_tmp7));
  const Scalar _tmp83 = _tmp10 * _tmp82;
  const Scalar _tmp84 = _DR[1] * _tmp83;
  const Scalar _tmp85 = _tmp3 * _tmp84;
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp87 = _tmp79 * _tmp86;
  const Scalar _tmp88 = _tmp2 * _tmp87;
  const Scalar _tmp89 = _tmp0 * _tmp88;
  const Scalar _tmp90 = _tmp11 * _tmp82;
  const Scalar _tmp91 = _tmp2 * _tmp90;
  const Scalar _tmp92 = _tmp0 * _tmp91;
  const Scalar _tmp93 = _tmp89 - _tmp92;
  const Scalar _tmp94 = _DR[2] * _tmp83;
  const Scalar _tmp95 = _tmp2 * _tmp94;
  const Scalar _tmp96 = _tmp4 * _tmp95;
  const Scalar _tmp97 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp98 = _tmp79 * _tmp97;
  const Scalar _tmp99 = _tmp2 * _tmp4;
  const Scalar _tmp100 = _tmp98 * _tmp99;
  const Scalar _tmp101 = -_tmp100 + _tmp96;
  const Scalar _tmp102 = _tmp101 + _tmp17 - _tmp76 + _tmp81 - _tmp85 + _tmp93;
  const Scalar _tmp103 = 2 * _tmp39;
  const Scalar _tmp104 = -_tmp24;
  const Scalar _tmp105 = _DR[1] * _tmp75;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp107 = _tmp106 * _tmp79;
  const Scalar _tmp108 = _tmp107 * _tmp3;
  const Scalar _tmp109 = _tmp3 * _tmp83;
  const Scalar _tmp110 = _DR[0] * _tmp109;
  const Scalar _tmp111 = _tmp0 * _tmp95;
  const Scalar _tmp112 = _tmp0 * _tmp2;
  const Scalar _tmp113 = _tmp112 * _tmp98;
  const Scalar _tmp114 = -_tmp111 + _tmp113;
  const Scalar _tmp115 = _tmp4 * _tmp88;
  const Scalar _tmp116 = _tmp4 * _tmp91;
  const Scalar _tmp117 = _tmp115 - _tmp116;
  const Scalar _tmp118 = _tmp104 - _tmp105 - _tmp108 + _tmp110 + _tmp114 + _tmp117;
  const Scalar _tmp119 = 2 * _tmp34;
  const Scalar _tmp120 = _DR[2] * _tmp75;
  const Scalar _tmp121 = _tmp3 * _tmp87;
  const Scalar _tmp122 = _tmp3 * _tmp90;
  const Scalar _tmp123 = _tmp2 * _tmp84;
  const Scalar _tmp124 = _tmp0 * _tmp123;
  const Scalar _tmp125 = _tmp112 * _tmp80;
  const Scalar _tmp126 = _tmp124 - _tmp125;
  const Scalar _tmp127 = _tmp107 * _tmp99;
  const Scalar _tmp128 = _DR[0] * _tmp83;
  const Scalar _tmp129 = _tmp128 * _tmp2;
  const Scalar _tmp130 = _tmp129 * _tmp4;
  const Scalar _tmp131 = _tmp127 - _tmp130;
  const Scalar _tmp132 = -_tmp120 + _tmp121 - _tmp122 + _tmp126 + _tmp131 + _tmp14;
  const Scalar _tmp133 = 2 * _tmp29;
  const Scalar _tmp134 = -_tmp19;
  const Scalar _tmp135 = _tmp11 * _tmp73;
  const Scalar _tmp136 = _tmp135 * _tmp2;
  const Scalar _tmp137 = _tmp3 * _tmp98;
  const Scalar _tmp138 = _DR[2] * _tmp109;
  const Scalar _tmp139 = _tmp123 * _tmp4;
  const Scalar _tmp140 = _tmp80 * _tmp99;
  const Scalar _tmp141 = _tmp139 - _tmp140;
  const Scalar _tmp142 = _tmp107 * _tmp112;
  const Scalar _tmp143 = _tmp0 * _tmp129;
  const Scalar _tmp144 = -_tmp142 + _tmp143;
  const Scalar _tmp145 = _tmp134 - _tmp136 - _tmp137 + _tmp138 + _tmp141 + _tmp144;
  const Scalar _tmp146 = 2 * _tmp23;
  const Scalar _tmp147 =
      _tmp102 * _tmp103 + _tmp118 * _tmp119 - _tmp132 * _tmp133 - _tmp145 * _tmp146;
  const Scalar _tmp148 = Scalar(1.0) / (dt);
  const Scalar _tmp149 = _tmp148 * gyro_cov_diagonal(2, 0);
  const Scalar _tmp150 = -Scalar(1) / Scalar(2) * _tmp25;
  const Scalar _tmp151 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp152 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp153 = -_tmp152;
  const Scalar _tmp154 = -_tmp77;
  const Scalar _tmp155 = _tmp150 + _tmp151 + _tmp153 + _tmp154;
  const Scalar _tmp156 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp157 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp158 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp159 = -_tmp156 + _tmp157 + _tmp158 + _tmp86;
  const Scalar _tmp160 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp161 = -_tmp106;
  const Scalar _tmp162 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp163 = -Scalar(1) / Scalar(2) * _tmp20;
  const Scalar _tmp164 = -_tmp162 + _tmp163;
  const Scalar _tmp165 = _tmp160 + _tmp161 + _tmp164;
  const Scalar _tmp166 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp167 = -_tmp166;
  const Scalar _tmp168 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp169 = -Scalar(1) / Scalar(2) * _tmp32;
  const Scalar _tmp170 = -_tmp168 + _tmp169;
  const Scalar _tmp171 = _tmp167 + _tmp170 + _tmp97;
  const Scalar _tmp172 =
      _tmp103 * _tmp159 + _tmp119 * _tmp171 - _tmp133 * _tmp155 - _tmp146 * _tmp165;
  const Scalar _tmp173 = -_tmp97;
  const Scalar _tmp174 = _tmp166 + _tmp170 + _tmp173;
  const Scalar _tmp175 = -_tmp160;
  const Scalar _tmp176 = _tmp106 + _tmp164 + _tmp175;
  const Scalar _tmp177 = _tmp150 - _tmp151;
  const Scalar _tmp178 = _tmp152 + _tmp154 + _tmp177;
  const Scalar _tmp179 = _tmp156 + _tmp86;
  const Scalar _tmp180 = -_tmp157 + _tmp158 + _tmp179;
  const Scalar _tmp181 =
      _tmp103 * _tmp174 + _tmp119 * _tmp180 - _tmp133 * _tmp176 - _tmp146 * _tmp178;
  const Scalar _tmp182 = _tmp167 + _tmp168 + _tmp169 + _tmp173;
  const Scalar _tmp183 = _tmp157 - _tmp158 + _tmp179;
  const Scalar _tmp184 = _tmp153 + _tmp177 + _tmp77;
  const Scalar _tmp185 = _tmp161 + _tmp162 + _tmp163 + _tmp175;
  const Scalar _tmp186 =
      _tmp103 * _tmp184 + _tmp119 * _tmp185 - _tmp133 * _tmp183 - _tmp146 * _tmp182;
  const Scalar _tmp187 = _tmp0 * _tmp135;
  const Scalar _tmp188 = _tmp107 * _tmp6;
  const Scalar _tmp189 = _tmp128 * _tmp6;
  const Scalar _tmp190 = _tmp0 * _tmp4;
  const Scalar _tmp191 = _tmp190 * _tmp84;
  const Scalar _tmp192 = _tmp190 * _tmp80;
  const Scalar _tmp193 = _tmp191 - _tmp192;
  const Scalar _tmp194 = _tmp111 - _tmp113;
  const Scalar _tmp195 = _tmp104 - _tmp187 - _tmp188 + _tmp189 + _tmp193 + _tmp194;
  const Scalar _tmp196 = _DR[2] * _tmp74;
  const Scalar _tmp197 = _tmp0 * _tmp196;
  const Scalar _tmp198 = _tmp6 * _tmp80;
  const Scalar _tmp199 = _tmp6 * _tmp84;
  const Scalar _tmp200 = -_tmp17;
  const Scalar _tmp201 = _tmp107 * _tmp190;
  const Scalar _tmp202 = _tmp128 * _tmp190;
  const Scalar _tmp203 = _tmp201 - _tmp202;
  const Scalar _tmp204 = -_tmp197 - _tmp198 + _tmp199 + _tmp200 + _tmp203 + _tmp93;
  const Scalar _tmp205 = _DR[1] * _tmp74;
  const Scalar _tmp206 = _tmp0 * _tmp205;
  const Scalar _tmp207 = _tmp6 * _tmp98;
  const Scalar _tmp208 = _tmp6 * _tmp94;
  const Scalar _tmp209 = _tmp190 * _tmp87;
  const Scalar _tmp210 = _tmp190 * _tmp90;
  const Scalar _tmp211 = _tmp209 - _tmp210;
  const Scalar _tmp212 = _tmp144 + _tmp19 - _tmp206 + _tmp207 - _tmp208 + _tmp211;
  const Scalar _tmp213 = _DR[0] * _tmp74;
  const Scalar _tmp214 = _tmp0 * _tmp213;
  const Scalar _tmp215 = _tmp6 * _tmp87;
  const Scalar _tmp216 = _tmp6 * _tmp90;
  const Scalar _tmp217 = -_tmp124 + _tmp125;
  const Scalar _tmp218 = _tmp190 * _tmp94;
  const Scalar _tmp219 = _tmp190 * _tmp98;
  const Scalar _tmp220 = _tmp218 - _tmp219;
  const Scalar _tmp221 = _tmp14 - _tmp214 + _tmp215 - _tmp216 + _tmp217 + _tmp220;
  const Scalar _tmp222 =
      _tmp103 * _tmp221 + _tmp119 * _tmp212 - _tmp133 * _tmp204 - _tmp146 * _tmp195;
  const Scalar _tmp223 = _tmp148 * gyro_cov_diagonal(0, 0);
  const Scalar _tmp224 = _tmp205 * _tmp4;
  const Scalar _tmp225 = _tmp5 * _tmp87;
  const Scalar _tmp226 = _tmp5 * _tmp90;
  const Scalar _tmp227 = -_tmp127 + _tmp130;
  const Scalar _tmp228 = -_tmp218 + _tmp219;
  const Scalar _tmp229 = _tmp14 - _tmp224 + _tmp225 - _tmp226 + _tmp227 + _tmp228;
  const Scalar _tmp230 = _tmp196 * _tmp4;
  const Scalar _tmp231 = _tmp107 * _tmp5;
  const Scalar _tmp232 = _tmp128 * _tmp5;
  const Scalar _tmp233 = _tmp117 + _tmp193 - _tmp230 + _tmp231 - _tmp232 + _tmp24;
  const Scalar _tmp234 = _tmp135 * _tmp4;
  const Scalar _tmp235 = _tmp5 * _tmp80;
  const Scalar _tmp236 = _tmp5 * _tmp84;
  const Scalar _tmp237 = -_tmp201 + _tmp202;
  const Scalar _tmp238 = _tmp101 + _tmp200 - _tmp234 - _tmp235 + _tmp236 + _tmp237;
  const Scalar _tmp239 = _tmp213 * _tmp4;
  const Scalar _tmp240 = _tmp5 * _tmp98;
  const Scalar _tmp241 = _tmp5 * _tmp94;
  const Scalar _tmp242 = -_tmp139 + _tmp140;
  const Scalar _tmp243 = _tmp134 + _tmp211 - _tmp239 - _tmp240 + _tmp241 + _tmp242;
  const Scalar _tmp244 =
      _tmp103 * _tmp243 + _tmp119 * _tmp229 - _tmp133 * _tmp233 - _tmp146 * _tmp238;
  const Scalar _tmp245 = _tmp148 * gyro_cov_diagonal(1, 0);
  const Scalar _tmp246 =
      _tmp103 * _tmp212 - _tmp119 * _tmp221 - _tmp133 * _tmp195 + _tmp146 * _tmp204;
  const Scalar _tmp247 =
      _tmp103 * _tmp229 - _tmp119 * _tmp243 - _tmp133 * _tmp238 + _tmp146 * _tmp233;
  const Scalar _tmp248 = _tmp244 * _tmp245;
  const Scalar _tmp249 =
      _tmp103 * _tmp171 - _tmp119 * _tmp159 - _tmp133 * _tmp165 + _tmp146 * _tmp155;
  const Scalar _tmp250 =
      _tmp103 * _tmp185 - _tmp119 * _tmp184 - _tmp133 * _tmp182 + _tmp146 * _tmp183;
  const Scalar _tmp251 =
      _tmp103 * _tmp180 - _tmp119 * _tmp174 - _tmp133 * _tmp178 + _tmp146 * _tmp176;
  const Scalar _tmp252 =
      _tmp249 * covariance(1, 0) + _tmp250 * covariance(2, 1) + _tmp251 * covariance(1, 1);
  const Scalar _tmp253 =
      _tmp249 * covariance(0, 0) + _tmp250 * covariance(2, 0) + _tmp251 * covariance(1, 0);
  const Scalar _tmp254 =
      _tmp249 * covariance(2, 0) + _tmp250 * covariance(2, 2) + _tmp251 * covariance(2, 1);
  const Scalar _tmp255 =
      -_tmp102 * _tmp119 + _tmp103 * _tmp118 + _tmp132 * _tmp146 - _tmp133 * _tmp145;
  const Scalar _tmp256 = _tmp147 * _tmp149 * _tmp255 + _tmp172 * _tmp253 + _tmp181 * _tmp252 +
                         _tmp186 * _tmp254 + _tmp222 * _tmp223 * _tmp246 + _tmp247 * _tmp248;
  const Scalar _tmp257 =
      _tmp102 * _tmp133 + _tmp103 * _tmp132 - _tmp118 * _tmp146 - _tmp119 * _tmp145;
  const Scalar _tmp258 = _tmp149 * _tmp257;
  const Scalar _tmp259 =
      _tmp103 * _tmp176 - _tmp119 * _tmp178 + _tmp133 * _tmp174 - _tmp146 * _tmp180;
  const Scalar _tmp260 =
      _tmp103 * _tmp183 - _tmp119 * _tmp182 + _tmp133 * _tmp184 - _tmp146 * _tmp185;
  const Scalar _tmp261 =
      _tmp103 * _tmp155 - _tmp119 * _tmp165 + _tmp133 * _tmp159 - _tmp146 * _tmp171;
  const Scalar _tmp262 =
      _tmp259 * covariance(1, 0) + _tmp260 * covariance(2, 0) + _tmp261 * covariance(0, 0);
  const Scalar _tmp263 =
      _tmp259 * covariance(2, 1) + _tmp260 * covariance(2, 2) + _tmp261 * covariance(2, 0);
  const Scalar _tmp264 =
      _tmp259 * covariance(1, 1) + _tmp260 * covariance(2, 1) + _tmp261 * covariance(1, 0);
  const Scalar _tmp265 =
      _tmp103 * _tmp204 - _tmp119 * _tmp195 + _tmp133 * _tmp221 - _tmp146 * _tmp212;
  const Scalar _tmp266 = _tmp223 * _tmp265;
  const Scalar _tmp267 =
      _tmp103 * _tmp233 - _tmp119 * _tmp238 + _tmp133 * _tmp243 - _tmp146 * _tmp229;
  const Scalar _tmp268 = _tmp147 * _tmp258 + _tmp172 * _tmp262 + _tmp181 * _tmp264 +
                         _tmp186 * _tmp263 + _tmp222 * _tmp266 + _tmp248 * _tmp267;
  const Scalar _tmp269 = -_tmp58;
  const Scalar _tmp270 = std::pow(_DR[3], Scalar(2));
  const Scalar _tmp271 = -_tmp270;
  const Scalar _tmp272 = _tmp45 * _tmp50 + _tmp51 * (_tmp269 + _tmp271 + _tmp40 + _tmp42);
  const Scalar _tmp273 = _tmp272 * dt;
  const Scalar _tmp274 = -_tmp42;
  const Scalar _tmp275 = -_tmp40;
  const Scalar _tmp276 = -_tmp54;
  const Scalar _tmp277 =
      _tmp45 * (_tmp276 + _tmp68) + _tmp56 * (_tmp270 + _tmp274 + _tmp275 + _tmp58);
  const Scalar _tmp278 = _tmp277 * dt;
  const Scalar _tmp279 = -_tmp47;
  const Scalar _tmp280 = _tmp51 * _tmp55 + _tmp56 * (_tmp279 + _tmp48);
  const Scalar _tmp281 = _tmp280 * dt;
  const Scalar _tmp282 = _tmp273 * covariance(2, 2) + _tmp278 * covariance(2, 1) +
                         _tmp281 * covariance(2, 0) + covariance(3, 2);
  const Scalar _tmp283 = _tmp273 * covariance(2, 1) + _tmp278 * covariance(1, 1) +
                         _tmp281 * covariance(1, 0) + covariance(3, 1);
  const Scalar _tmp284 = _tmp273 * covariance(2, 0) + _tmp278 * covariance(1, 0) +
                         _tmp281 * covariance(0, 0) + covariance(3, 0);
  const Scalar _tmp285 = _tmp172 * _tmp284 + _tmp181 * _tmp283 + _tmp186 * _tmp282;
  const Scalar _tmp286 = -_tmp64;
  const Scalar _tmp287 = _tmp45 * (_tmp286 + _tmp62) + _tmp56 * _tmp61;
  const Scalar _tmp288 = _tmp287 * dt;
  const Scalar _tmp289 = _tmp271 + _tmp58;
  const Scalar _tmp290 = _tmp274 + _tmp40;
  const Scalar _tmp291 = _tmp51 * _tmp65 + _tmp56 * (_tmp289 + _tmp290);
  const Scalar _tmp292 = _tmp291 * dt;
  const Scalar _tmp293 = _tmp275 + _tmp42;
  const Scalar _tmp294 = _tmp269 + _tmp270;
  const Scalar _tmp295 = _tmp45 * (_tmp293 + _tmp294) + _tmp51 * (_tmp279 + _tmp49);
  const Scalar _tmp296 = _tmp295 * dt;
  const Scalar _tmp297 = _tmp288 * covariance(2, 1) + _tmp292 * covariance(2, 0) +
                         _tmp296 * covariance(2, 2) + covariance(4, 2);
  const Scalar _tmp298 = _tmp288 * covariance(1, 0) + _tmp292 * covariance(0, 0) +
                         _tmp296 * covariance(2, 0) + covariance(4, 0);
  const Scalar _tmp299 = _tmp288 * covariance(1, 1) + _tmp292 * covariance(1, 0) +
                         _tmp296 * covariance(2, 1) + covariance(4, 1);
  const Scalar _tmp300 = _tmp172 * _tmp298 + _tmp181 * _tmp299 + _tmp186 * _tmp297;
  const Scalar _tmp301 = _tmp45 * _tmp70 + _tmp51 * (_tmp276 + _tmp52);
  const Scalar _tmp302 = _tmp301 * dt;
  const Scalar _tmp303 = _tmp51 * (_tmp290 + _tmp294) + _tmp56 * (_tmp286 + _tmp63);
  const Scalar _tmp304 = _tmp303 * dt;
  const Scalar _tmp305 = _tmp45 * (_tmp289 + _tmp293) + _tmp56 * _tmp69;
  const Scalar _tmp306 = _tmp305 * dt;
  const Scalar _tmp307 = _tmp302 * covariance(2, 1) + _tmp304 * covariance(1, 0) +
                         _tmp306 * covariance(1, 1) + covariance(5, 1);
  const Scalar _tmp308 = _tmp302 * covariance(2, 2) + _tmp304 * covariance(2, 0) +
                         _tmp306 * covariance(2, 1) + covariance(5, 2);
  const Scalar _tmp309 = _tmp302 * covariance(2, 0) + _tmp304 * covariance(0, 0) +
                         _tmp306 * covariance(1, 0) + covariance(5, 0);
  const Scalar _tmp310 = _tmp172 * _tmp309 + _tmp181 * _tmp307 + _tmp186 * _tmp308;
  const Scalar _tmp311 = covariance(3, 0) * dt;
  const Scalar _tmp312 = _tmp272 * _tmp72;
  const Scalar _tmp313 = _tmp277 * _tmp72;
  const Scalar _tmp314 = _tmp280 * _tmp72;
  const Scalar _tmp315 = _tmp311 + _tmp312 * covariance(2, 0) + _tmp313 * covariance(1, 0) +
                         _tmp314 * covariance(0, 0) + covariance(6, 0);
  const Scalar _tmp316 = covariance(3, 2) * dt;
  const Scalar _tmp317 = _tmp312 * covariance(2, 2) + _tmp313 * covariance(2, 1) +
                         _tmp314 * covariance(2, 0) + _tmp316 + covariance(6, 2);
  const Scalar _tmp318 = covariance(3, 1) * dt;
  const Scalar _tmp319 = _tmp312 * covariance(2, 1) + _tmp313 * covariance(1, 1) +
                         _tmp314 * covariance(1, 0) + _tmp318 + covariance(6, 1);
  const Scalar _tmp320 = _tmp172 * _tmp315 + _tmp181 * _tmp319 + _tmp186 * _tmp317;
  const Scalar _tmp321 = covariance(4, 0) * dt;
  const Scalar _tmp322 = _tmp287 * _tmp72;
  const Scalar _tmp323 = _tmp291 * _tmp72;
  const Scalar _tmp324 = _tmp295 * _tmp72;
  const Scalar _tmp325 = _tmp321 + _tmp322 * covariance(1, 0) + _tmp323 * covariance(0, 0) +
                         _tmp324 * covariance(2, 0) + covariance(7, 0);
  const Scalar _tmp326 = covariance(4, 2) * dt;
  const Scalar _tmp327 = _tmp322 * covariance(2, 1) + _tmp323 * covariance(2, 0) +
                         _tmp324 * covariance(2, 2) + _tmp326 + covariance(7, 2);
  const Scalar _tmp328 = covariance(4, 1) * dt;
  const Scalar _tmp329 = _tmp322 * covariance(1, 1) + _tmp323 * covariance(1, 0) +
                         _tmp324 * covariance(2, 1) + _tmp328 + covariance(7, 1);
  const Scalar _tmp330 = _tmp172 * _tmp325 + _tmp181 * _tmp329 + _tmp186 * _tmp327;
  const Scalar _tmp331 = covariance(5, 2) * dt;
  const Scalar _tmp332 = _tmp301 * _tmp72;
  const Scalar _tmp333 = _tmp303 * _tmp72;
  const Scalar _tmp334 = _tmp305 * _tmp72;
  const Scalar _tmp335 = _tmp331 + _tmp332 * covariance(2, 2) + _tmp333 * covariance(2, 0) +
                         _tmp334 * covariance(2, 1) + covariance(8, 2);
  const Scalar _tmp336 = covariance(5, 0) * dt;
  const Scalar _tmp337 = _tmp332 * covariance(2, 0) + _tmp333 * covariance(0, 0) +
                         _tmp334 * covariance(1, 0) + _tmp336 + covariance(8, 0);
  const Scalar _tmp338 = covariance(5, 1) * dt;
  const Scalar _tmp339 = _tmp332 * covariance(2, 1) + _tmp333 * covariance(1, 0) +
                         _tmp334 * covariance(1, 1) + _tmp338 + covariance(8, 1);
  const Scalar _tmp340 = _tmp172 * _tmp337 + _tmp181 * _tmp339 + _tmp186 * _tmp335;
  const Scalar _tmp341 = _tmp245 * _tmp247 * _tmp267 + _tmp246 * _tmp266 + _tmp249 * _tmp262 +
                         _tmp250 * _tmp263 + _tmp251 * _tmp264 + _tmp255 * _tmp258;
  const Scalar _tmp342 = _tmp249 * _tmp284 + _tmp250 * _tmp282 + _tmp251 * _tmp283;
  const Scalar _tmp343 = _tmp249 * _tmp298 + _tmp250 * _tmp297 + _tmp251 * _tmp299;
  const Scalar _tmp344 = _tmp249 * _tmp309 + _tmp250 * _tmp308 + _tmp251 * _tmp307;
  const Scalar _tmp345 = _tmp249 * _tmp315 + _tmp250 * _tmp317 + _tmp251 * _tmp319;
  const Scalar _tmp346 = _tmp249 * _tmp325 + _tmp250 * _tmp327 + _tmp251 * _tmp329;
  const Scalar _tmp347 = _tmp249 * _tmp337 + _tmp250 * _tmp335 + _tmp251 * _tmp339;
  const Scalar _tmp348 = _tmp259 * _tmp283 + _tmp260 * _tmp282 + _tmp261 * _tmp284;
  const Scalar _tmp349 = _tmp259 * _tmp299 + _tmp260 * _tmp297 + _tmp261 * _tmp298;
  const Scalar _tmp350 = _tmp259 * _tmp307 + _tmp260 * _tmp308 + _tmp261 * _tmp309;
  const Scalar _tmp351 = _tmp259 * _tmp319 + _tmp260 * _tmp317 + _tmp261 * _tmp315;
  const Scalar _tmp352 = _tmp259 * _tmp329 + _tmp260 * _tmp327 + _tmp261 * _tmp325;
  const Scalar _tmp353 = _tmp259 * _tmp339 + _tmp260 * _tmp335 + _tmp261 * _tmp337;
  const Scalar _tmp354 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp355 = accel_cov_diagonal(2, 0) * dt;
  const Scalar _tmp356 = std::pow(_tmp50, Scalar(2));
  const Scalar _tmp357 = accel_cov_diagonal(1, 0) * dt;
  const Scalar _tmp358 = std::pow(_tmp44, Scalar(2));
  const Scalar _tmp359 = accel_cov_diagonal(0, 0) * dt;
  const Scalar _tmp360 = _tmp55 * dt;
  const Scalar _tmp361 = _tmp65 * accel_cov_diagonal(2, 0);
  const Scalar _tmp362 = _tmp60 * dt;
  const Scalar _tmp363 = _tmp50 * accel_cov_diagonal(1, 0);
  const Scalar _tmp364 = _tmp44 * dt;
  const Scalar _tmp365 = _tmp364 * accel_cov_diagonal(0, 0);
  const Scalar _tmp366 = _tmp273 * _tmp297 + _tmp278 * _tmp299 + _tmp281 * _tmp298 +
                         _tmp287 * _tmp318 + _tmp291 * _tmp311 + _tmp295 * _tmp316 +
                         _tmp360 * _tmp361 + _tmp362 * _tmp363 + _tmp365 * _tmp61 +
                         covariance(4, 3);
  const Scalar _tmp367 = _tmp50 * dt;
  const Scalar _tmp368 = _tmp70 * accel_cov_diagonal(1, 0);
  const Scalar _tmp369 = _tmp67 * dt;
  const Scalar _tmp370 = _tmp369 * accel_cov_diagonal(2, 0);
  const Scalar _tmp371 = _tmp273 * _tmp308 + _tmp278 * _tmp307 + _tmp281 * _tmp309 +
                         _tmp301 * _tmp316 + _tmp303 * _tmp311 + _tmp305 * _tmp318 +
                         _tmp365 * _tmp69 + _tmp367 * _tmp368 + _tmp370 * _tmp55 + covariance(5, 3);
  const Scalar _tmp372 = _tmp354 * accel_cov_diagonal(2, 0);
  const Scalar _tmp373 = _tmp356 * accel_cov_diagonal(1, 0);
  const Scalar _tmp374 = _tmp358 * accel_cov_diagonal(0, 0);
  const Scalar _tmp375 = _tmp312 * covariance(3, 2) + _tmp313 * covariance(3, 1) +
                         _tmp314 * covariance(3, 0) + covariance(3, 3) * dt + covariance(6, 3);
  const Scalar _tmp376 = _tmp273 * _tmp317 + _tmp278 * _tmp319 + _tmp281 * _tmp315 +
                         _tmp372 * _tmp72 + _tmp373 * _tmp72 + _tmp374 * _tmp72 + _tmp375;
  const Scalar _tmp377 = _tmp329 * dt;
  const Scalar _tmp378 = covariance(4, 3) * dt;
  const Scalar _tmp379 = _tmp322 * covariance(3, 1) + _tmp323 * covariance(3, 0) +
                         _tmp324 * covariance(3, 2) + _tmp378 + covariance(7, 3);
  const Scalar _tmp380 = _tmp55 * _tmp72;
  const Scalar _tmp381 = _tmp60 * _tmp72;
  const Scalar _tmp382 = _tmp44 * _tmp72;
  const Scalar _tmp383 = _tmp61 * accel_cov_diagonal(0, 0);
  const Scalar _tmp384 = _tmp361 * _tmp380 + _tmp363 * _tmp381 + _tmp382 * _tmp383;
  const Scalar _tmp385 =
      _tmp273 * _tmp327 + _tmp277 * _tmp377 + _tmp281 * _tmp325 + _tmp379 + _tmp384;
  const Scalar _tmp386 = covariance(5, 3) * dt;
  const Scalar _tmp387 = _tmp332 * covariance(3, 2) + _tmp333 * covariance(3, 0) +
                         _tmp334 * covariance(3, 1) + _tmp386 + covariance(8, 3);
  const Scalar _tmp388 = _tmp50 * _tmp72;
  const Scalar _tmp389 = _tmp69 * accel_cov_diagonal(0, 0);
  const Scalar _tmp390 = _tmp67 * _tmp72;
  const Scalar _tmp391 = _tmp55 * accel_cov_diagonal(2, 0);
  const Scalar _tmp392 = _tmp368 * _tmp388 + _tmp382 * _tmp389 + _tmp390 * _tmp391;
  const Scalar _tmp393 =
      _tmp273 * _tmp335 + _tmp278 * _tmp339 + _tmp281 * _tmp337 + _tmp387 + _tmp392;
  const Scalar _tmp394 = std::pow(_tmp61, Scalar(2));
  const Scalar _tmp395 = std::pow(_tmp60, Scalar(2));
  const Scalar _tmp396 = std::pow(_tmp65, Scalar(2));
  const Scalar _tmp397 = _tmp69 * dt;
  const Scalar _tmp398 = _tmp288 * _tmp307 + _tmp292 * _tmp309 + _tmp296 * _tmp308 +
                         _tmp301 * _tmp326 + _tmp303 * _tmp321 + _tmp305 * _tmp328 +
                         _tmp362 * _tmp368 + _tmp370 * _tmp65 + _tmp383 * _tmp397 +
                         covariance(5, 4);
  const Scalar _tmp399 = _tmp288 * _tmp319 + _tmp292 * _tmp315 + _tmp296 * _tmp317 +
                         _tmp312 * covariance(4, 2) + _tmp313 * covariance(4, 1) +
                         _tmp314 * covariance(4, 0) + _tmp378 + _tmp384 + covariance(6, 4);
  const Scalar _tmp400 = _tmp394 * accel_cov_diagonal(0, 0);
  const Scalar _tmp401 = _tmp395 * accel_cov_diagonal(1, 0);
  const Scalar _tmp402 = _tmp396 * accel_cov_diagonal(2, 0);
  const Scalar _tmp403 = _tmp322 * covariance(4, 1) + _tmp323 * covariance(4, 0) +
                         _tmp324 * covariance(4, 2) + covariance(4, 4) * dt + covariance(7, 4);
  const Scalar _tmp404 = _tmp288 * _tmp329 + _tmp292 * _tmp325 + _tmp296 * _tmp327 +
                         _tmp400 * _tmp72 + _tmp401 * _tmp72 + _tmp402 * _tmp72 + _tmp403;
  const Scalar _tmp405 = covariance(5, 4) * dt;
  const Scalar _tmp406 = _tmp332 * covariance(4, 2) + _tmp333 * covariance(4, 0) +
                         _tmp334 * covariance(4, 1) + _tmp405 + covariance(8, 4);
  const Scalar _tmp407 = _tmp61 * _tmp72;
  const Scalar _tmp408 = _tmp361 * _tmp390 + _tmp368 * _tmp381 + _tmp389 * _tmp407;
  const Scalar _tmp409 =
      _tmp288 * _tmp339 + _tmp292 * _tmp337 + _tmp296 * _tmp335 + _tmp406 + _tmp408;
  const Scalar _tmp410 = std::pow(_tmp69, Scalar(2));
  const Scalar _tmp411 = std::pow(_tmp67, Scalar(2));
  const Scalar _tmp412 = std::pow(_tmp70, Scalar(2));
  const Scalar _tmp413 = _tmp302 * _tmp317 + _tmp304 * _tmp315 + _tmp306 * _tmp319 +
                         _tmp312 * covariance(5, 2) + _tmp313 * covariance(5, 1) +
                         _tmp314 * covariance(5, 0) + _tmp386 + _tmp392 + covariance(6, 5);
  const Scalar _tmp414 = _tmp302 * _tmp327 + _tmp304 * _tmp325 + _tmp305 * _tmp377 +
                         _tmp322 * covariance(5, 1) + _tmp323 * covariance(5, 0) +
                         _tmp324 * covariance(5, 2) + _tmp405 + _tmp408 + covariance(7, 5);
  const Scalar _tmp415 = _tmp410 * accel_cov_diagonal(0, 0);
  const Scalar _tmp416 = _tmp411 * accel_cov_diagonal(2, 0);
  const Scalar _tmp417 = _tmp412 * accel_cov_diagonal(1, 0);
  const Scalar _tmp418 = _tmp332 * covariance(5, 2) + _tmp333 * covariance(5, 0) +
                         _tmp334 * covariance(5, 1) + covariance(5, 5) * dt + covariance(8, 5);
  const Scalar _tmp419 = _tmp302 * _tmp335 + _tmp304 * _tmp337 + _tmp306 * _tmp339 +
                         _tmp415 * _tmp72 + _tmp416 * _tmp72 + _tmp417 * _tmp72 + _tmp418;
  const Scalar _tmp420 = (Scalar(1) / Scalar(4)) * _tmp78;
  const Scalar _tmp421 = _tmp420 * _tmp60;
  const Scalar _tmp422 = _tmp383 * _tmp420;
  const Scalar _tmp423 = _tmp312 * _tmp327 + _tmp313 * _tmp329 + _tmp314 * _tmp325 +
                         _tmp322 * covariance(6, 1) + _tmp323 * covariance(6, 0) +
                         _tmp324 * covariance(6, 2) + _tmp361 * _tmp420 * _tmp55 +
                         _tmp363 * _tmp421 + _tmp379 * dt + _tmp422 * _tmp44 +
                         covariance(6, 4) * dt + covariance(7, 6);
  const Scalar _tmp424 = _tmp420 * _tmp67;
  const Scalar _tmp425 = _tmp312 * _tmp335 + _tmp313 * _tmp339 + _tmp314 * _tmp337 +
                         _tmp332 * covariance(6, 2) + _tmp333 * covariance(6, 0) +
                         _tmp334 * covariance(6, 1) + _tmp368 * _tmp420 * _tmp50 + _tmp387 * dt +
                         _tmp389 * _tmp420 * _tmp44 + _tmp391 * _tmp424 + covariance(6, 5) * dt +
                         covariance(8, 6);
  const Scalar _tmp426 = _tmp337 * _tmp72;
  const Scalar _tmp427 = _tmp291 * _tmp426 + _tmp322 * _tmp339 + _tmp324 * _tmp335 +
                         _tmp332 * covariance(7, 2) + _tmp333 * covariance(7, 0) +
                         _tmp334 * covariance(7, 1) + _tmp361 * _tmp424 + _tmp368 * _tmp421 +
                         _tmp406 * dt + _tmp422 * _tmp69 + covariance(7, 5) * dt + covariance(8, 7);
  const Scalar _tmp428 = -_tmp191 + _tmp192;
  const Scalar _tmp429 = _tmp114 + _tmp187 + _tmp188 - _tmp189 + _tmp24 + _tmp428;
  const Scalar _tmp430 = -_tmp89 + _tmp92;
  const Scalar _tmp431 = _tmp17 + _tmp197 + _tmp198 - _tmp199 + _tmp237 + _tmp430;
  const Scalar _tmp432 = -_tmp209 + _tmp210;
  const Scalar _tmp433 = _tmp142 - _tmp143;
  const Scalar _tmp434 = _tmp134 + _tmp206 - _tmp207 + _tmp208 + _tmp432 + _tmp433;
  const Scalar _tmp435 = -_tmp14;
  const Scalar _tmp436 = _tmp126 + _tmp214 - _tmp215 + _tmp216 + _tmp228 + _tmp435;
  const Scalar _tmp437 = _tmp131 + _tmp220 + _tmp224 - _tmp225 + _tmp226 + _tmp435;
  const Scalar _tmp438 = -_tmp115 + _tmp116;
  const Scalar _tmp439 = _tmp104 + _tmp230 - _tmp231 + _tmp232 + _tmp428 + _tmp438;
  const Scalar _tmp440 = _tmp100 - _tmp96;
  const Scalar _tmp441 = _tmp17 + _tmp203 + _tmp234 + _tmp235 - _tmp236 + _tmp440;
  const Scalar _tmp442 = _tmp141 + _tmp19 + _tmp239 + _tmp240 - _tmp241 + _tmp432;
  const Scalar _tmp443 = _tmp200 + _tmp430 + _tmp440 + _tmp76 - _tmp81 + _tmp85;
  const Scalar _tmp444 = _tmp105 + _tmp108 - _tmp110 + _tmp194 + _tmp24 + _tmp438;
  const Scalar _tmp445 = _tmp120 - _tmp121 + _tmp122 + _tmp217 + _tmp227 + _tmp435;
  const Scalar _tmp446 = _tmp136 + _tmp137 - _tmp138 + _tmp19 + _tmp242 + _tmp433;

  // Output terms (9)
  if (new_DR != nullptr) {
    Eigen::Matrix<Scalar, 4, 1> _new_DR;

    _new_DR[0] = _tmp23;
    _new_DR[1] = _tmp29;
    _new_DR[2] = _tmp34;
    _new_DR[3] = _tmp39;

    *new_DR = sym::Rot3<Scalar>(_new_DR);
  }

  if (new_Dv != nullptr) {
    Eigen::Matrix<Scalar, 3, 1>& _new_Dv = (*new_Dv);

    _new_Dv(0, 0) = Dv(0, 0) + _tmp57 * dt;
    _new_Dv(1, 0) = Dv(1, 0) + _tmp66 * dt;
    _new_Dv(2, 0) = Dv(2, 0) + _tmp71 * dt;
  }

  if (new_Dp != nullptr) {
    Eigen::Matrix<Scalar, 3, 1>& _new_Dp = (*new_Dp);

    _new_Dp(0, 0) = Dp(0, 0) + Dv(0, 0) * dt + _tmp57 * _tmp72;
    _new_Dp(1, 0) = Dp(1, 0) + Dv(1, 0) * dt + _tmp66 * _tmp72;
    _new_Dp(2, 0) = Dp(2, 0) + Dv(2, 0) * dt + _tmp71 * _tmp72;
  }

  if (new_covariance != nullptr) {
    Eigen::Matrix<Scalar, 9, 9>& _new_covariance = (*new_covariance);

    _new_covariance(0, 0) =
        std::pow(_tmp147, Scalar(2)) * _tmp149 +
        _tmp172 *
            (_tmp172 * covariance(0, 0) + _tmp181 * covariance(1, 0) + _tmp186 * covariance(2, 0)) +
        _tmp181 *
            (_tmp172 * covariance(1, 0) + _tmp181 * covariance(1, 1) + _tmp186 * covariance(2, 1)) +
        _tmp186 *
            (_tmp172 * covariance(2, 0) + _tmp181 * covariance(2, 1) + _tmp186 * covariance(2, 2)) +
        std::pow(_tmp222, Scalar(2)) * _tmp223 + std::pow(_tmp244, Scalar(2)) * _tmp245;
    _new_covariance(1, 0) = _tmp256;
    _new_covariance(2, 0) = _tmp268;
    _new_covariance(3, 0) = _tmp285;
    _new_covariance(4, 0) = _tmp300;
    _new_covariance(5, 0) = _tmp310;
    _new_covariance(6, 0) = _tmp320;
    _new_covariance(7, 0) = _tmp330;
    _new_covariance(8, 0) = _tmp340;
    _new_covariance(0, 1) = _tmp256;
    _new_covariance(1, 1) = _tmp149 * std::pow(_tmp255, Scalar(2)) +
                            _tmp223 * std::pow(_tmp246, Scalar(2)) +
                            _tmp245 * std::pow(_tmp247, Scalar(2)) + _tmp249 * _tmp253 +
                            _tmp250 * _tmp254 + _tmp251 * _tmp252;
    _new_covariance(2, 1) = _tmp341;
    _new_covariance(3, 1) = _tmp342;
    _new_covariance(4, 1) = _tmp343;
    _new_covariance(5, 1) = _tmp344;
    _new_covariance(6, 1) = _tmp345;
    _new_covariance(7, 1) = _tmp346;
    _new_covariance(8, 1) = _tmp347;
    _new_covariance(0, 2) = _tmp268;
    _new_covariance(1, 2) = _tmp341;
    _new_covariance(2, 2) = _tmp149 * std::pow(_tmp257, Scalar(2)) +
                            _tmp223 * std::pow(_tmp265, Scalar(2)) +
                            _tmp245 * std::pow(_tmp267, Scalar(2)) + _tmp259 * _tmp264 +
                            _tmp260 * _tmp263 + _tmp261 * _tmp262;
    _new_covariance(3, 2) = _tmp348;
    _new_covariance(4, 2) = _tmp349;
    _new_covariance(5, 2) = _tmp350;
    _new_covariance(6, 2) = _tmp351;
    _new_covariance(7, 2) = _tmp352;
    _new_covariance(8, 2) = _tmp353;
    _new_covariance(0, 3) = _tmp285;
    _new_covariance(1, 3) = _tmp342;
    _new_covariance(2, 3) = _tmp348;
    _new_covariance(3, 3) = _tmp272 * _tmp316 + _tmp273 * _tmp282 + _tmp277 * _tmp318 +
                            _tmp278 * _tmp283 + _tmp280 * _tmp311 + _tmp281 * _tmp284 +
                            _tmp354 * _tmp355 + _tmp356 * _tmp357 + _tmp358 * _tmp359 +
                            covariance(3, 3);
    _new_covariance(4, 3) = _tmp366;
    _new_covariance(5, 3) = _tmp371;
    _new_covariance(6, 3) = _tmp376;
    _new_covariance(7, 3) = _tmp385;
    _new_covariance(8, 3) = _tmp393;
    _new_covariance(0, 4) = _tmp300;
    _new_covariance(1, 4) = _tmp343;
    _new_covariance(2, 4) = _tmp349;
    _new_covariance(3, 4) = _tmp366;
    _new_covariance(4, 4) = _tmp287 * _tmp328 + _tmp288 * _tmp299 + _tmp291 * _tmp321 +
                            _tmp292 * _tmp298 + _tmp295 * _tmp326 + _tmp296 * _tmp297 +
                            _tmp355 * _tmp396 + _tmp357 * _tmp395 + _tmp359 * _tmp394 +
                            covariance(4, 4);
    _new_covariance(5, 4) = _tmp398;
    _new_covariance(6, 4) = _tmp399;
    _new_covariance(7, 4) = _tmp404;
    _new_covariance(8, 4) = _tmp409;
    _new_covariance(0, 5) = _tmp310;
    _new_covariance(1, 5) = _tmp344;
    _new_covariance(2, 5) = _tmp350;
    _new_covariance(3, 5) = _tmp371;
    _new_covariance(4, 5) = _tmp398;
    _new_covariance(5, 5) = _tmp301 * _tmp331 + _tmp302 * _tmp308 + _tmp303 * _tmp336 +
                            _tmp304 * _tmp309 + _tmp305 * _tmp338 + _tmp306 * _tmp307 +
                            _tmp355 * _tmp411 + _tmp357 * _tmp412 + _tmp359 * _tmp410 +
                            covariance(5, 5);
    _new_covariance(6, 5) = _tmp413;
    _new_covariance(7, 5) = _tmp414;
    _new_covariance(8, 5) = _tmp419;
    _new_covariance(0, 6) = _tmp320;
    _new_covariance(1, 6) = _tmp345;
    _new_covariance(2, 6) = _tmp351;
    _new_covariance(3, 6) = _tmp376;
    _new_covariance(4, 6) = _tmp399;
    _new_covariance(5, 6) = _tmp413;
    _new_covariance(6, 6) = _tmp312 * _tmp317 + _tmp312 * covariance(6, 2) + _tmp313 * _tmp319 +
                            _tmp313 * covariance(6, 1) + _tmp314 * _tmp315 +
                            _tmp314 * covariance(6, 0) + _tmp372 * _tmp420 + _tmp373 * _tmp420 +
                            _tmp374 * _tmp420 + _tmp375 * dt + covariance(6, 3) * dt +
                            covariance(6, 6);
    _new_covariance(7, 6) = _tmp423;
    _new_covariance(8, 6) = _tmp425;
    _new_covariance(0, 7) = _tmp330;
    _new_covariance(1, 7) = _tmp346;
    _new_covariance(2, 7) = _tmp352;
    _new_covariance(3, 7) = _tmp385;
    _new_covariance(4, 7) = _tmp404;
    _new_covariance(5, 7) = _tmp414;
    _new_covariance(6, 7) = _tmp423;
    _new_covariance(7, 7) = _tmp322 * _tmp329 + _tmp322 * covariance(7, 1) + _tmp323 * _tmp325 +
                            _tmp323 * covariance(7, 0) + _tmp324 * _tmp327 +
                            _tmp324 * covariance(7, 2) + _tmp400 * _tmp420 + _tmp401 * _tmp420 +
                            _tmp402 * _tmp420 + _tmp403 * dt + covariance(7, 4) * dt +
                            covariance(7, 7);
    _new_covariance(8, 7) = _tmp427;
    _new_covariance(0, 8) = _tmp340;
    _new_covariance(1, 8) = _tmp347;
    _new_covariance(2, 8) = _tmp353;
    _new_covariance(3, 8) = _tmp393;
    _new_covariance(4, 8) = _tmp409;
    _new_covariance(5, 8) = _tmp419;
    _new_covariance(6, 8) = _tmp425;
    _new_covariance(7, 8) = _tmp427;
    _new_covariance(8, 8) = _tmp303 * _tmp426 + _tmp332 * _tmp335 + _tmp332 * covariance(8, 2) +
                            _tmp333 * covariance(8, 0) + _tmp334 * _tmp339 +
                            _tmp334 * covariance(8, 1) + _tmp415 * _tmp420 + _tmp416 * _tmp420 +
                            _tmp417 * _tmp420 + _tmp418 * dt + covariance(8, 5) * dt +
                            covariance(8, 8);
  }

  if (new_DR_D_gyro_bias != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _new_DR_D_gyro_bias = (*new_DR_D_gyro_bias);

    _new_DR_D_gyro_bias(0, 0) = DR_D_gyro_bias(0, 0) * _tmp172 + DR_D_gyro_bias(1, 0) * _tmp181 +
                                DR_D_gyro_bias(2, 0) * _tmp186 + _tmp103 * _tmp436 +
                                _tmp119 * _tmp434 - _tmp133 * _tmp431 - _tmp146 * _tmp429;
    _new_DR_D_gyro_bias(1, 0) = DR_D_gyro_bias(0, 0) * _tmp249 + DR_D_gyro_bias(1, 0) * _tmp251 +
                                DR_D_gyro_bias(2, 0) * _tmp250 + _tmp103 * _tmp434 -
                                _tmp119 * _tmp436 - _tmp133 * _tmp429 + _tmp146 * _tmp431;
    _new_DR_D_gyro_bias(2, 0) = DR_D_gyro_bias(0, 0) * _tmp261 + DR_D_gyro_bias(1, 0) * _tmp259 +
                                DR_D_gyro_bias(2, 0) * _tmp260 + _tmp103 * _tmp431 -
                                _tmp119 * _tmp429 + _tmp133 * _tmp436 - _tmp146 * _tmp434;
    _new_DR_D_gyro_bias(0, 1) = DR_D_gyro_bias(0, 1) * _tmp172 + DR_D_gyro_bias(1, 1) * _tmp181 +
                                DR_D_gyro_bias(2, 1) * _tmp186 + _tmp103 * _tmp442 +
                                _tmp119 * _tmp437 - _tmp133 * _tmp439 - _tmp146 * _tmp441;
    _new_DR_D_gyro_bias(1, 1) = DR_D_gyro_bias(0, 1) * _tmp249 + DR_D_gyro_bias(1, 1) * _tmp251 +
                                DR_D_gyro_bias(2, 1) * _tmp250 + _tmp103 * _tmp437 -
                                _tmp119 * _tmp442 - _tmp133 * _tmp441 + _tmp146 * _tmp439;
    _new_DR_D_gyro_bias(2, 1) = DR_D_gyro_bias(0, 1) * _tmp261 + DR_D_gyro_bias(1, 1) * _tmp259 +
                                DR_D_gyro_bias(2, 1) * _tmp260 + _tmp103 * _tmp439 -
                                _tmp119 * _tmp441 + _tmp133 * _tmp442 - _tmp146 * _tmp437;
    _new_DR_D_gyro_bias(0, 2) = DR_D_gyro_bias(0, 2) * _tmp172 + DR_D_gyro_bias(1, 2) * _tmp181 +
                                DR_D_gyro_bias(2, 2) * _tmp186 + _tmp103 * _tmp443 +
                                _tmp119 * _tmp444 - _tmp133 * _tmp445 - _tmp146 * _tmp446;
    _new_DR_D_gyro_bias(1, 2) = DR_D_gyro_bias(0, 2) * _tmp249 + DR_D_gyro_bias(1, 2) * _tmp251 +
                                DR_D_gyro_bias(2, 2) * _tmp250 + _tmp103 * _tmp444 -
                                _tmp119 * _tmp443 - _tmp133 * _tmp446 + _tmp146 * _tmp445;
    _new_DR_D_gyro_bias(2, 2) = DR_D_gyro_bias(0, 2) * _tmp261 + DR_D_gyro_bias(1, 2) * _tmp259 +
                                DR_D_gyro_bias(2, 2) * _tmp260 + _tmp103 * _tmp445 -
                                _tmp119 * _tmp446 + _tmp133 * _tmp443 - _tmp146 * _tmp444;
  }

  if (new_Dv_D_accel_bias != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _new_Dv_D_accel_bias = (*new_Dv_D_accel_bias);

    _new_Dv_D_accel_bias(0, 0) = Dv_D_accel_bias(0, 0) - _tmp364;
    _new_Dv_D_accel_bias(1, 0) = Dv_D_accel_bias(1, 0) - _tmp61 * dt;
    _new_Dv_D_accel_bias(2, 0) = Dv_D_accel_bias(2, 0) - _tmp397;
    _new_Dv_D_accel_bias(0, 1) = Dv_D_accel_bias(0, 1) - _tmp367;
    _new_Dv_D_accel_bias(1, 1) = Dv_D_accel_bias(1, 1) - _tmp362;
    _new_Dv_D_accel_bias(2, 1) = Dv_D_accel_bias(2, 1) - _tmp70 * dt;
    _new_Dv_D_accel_bias(0, 2) = Dv_D_accel_bias(0, 2) - _tmp360;
    _new_Dv_D_accel_bias(1, 2) = Dv_D_accel_bias(1, 2) - _tmp65 * dt;
    _new_Dv_D_accel_bias(2, 2) = Dv_D_accel_bias(2, 2) - _tmp369;
  }

  if (new_Dv_D_gyro_bias != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _new_Dv_D_gyro_bias = (*new_Dv_D_gyro_bias);

    _new_Dv_D_gyro_bias(0, 0) = DR_D_gyro_bias(0, 0) * _tmp281 + DR_D_gyro_bias(1, 0) * _tmp278 +
                                DR_D_gyro_bias(2, 0) * _tmp273 + Dv_D_gyro_bias(0, 0);
    _new_Dv_D_gyro_bias(1, 0) = DR_D_gyro_bias(0, 0) * _tmp292 + DR_D_gyro_bias(1, 0) * _tmp288 +
                                DR_D_gyro_bias(2, 0) * _tmp296 + Dv_D_gyro_bias(1, 0);
    _new_Dv_D_gyro_bias(2, 0) = DR_D_gyro_bias(0, 0) * _tmp304 + DR_D_gyro_bias(1, 0) * _tmp306 +
                                DR_D_gyro_bias(2, 0) * _tmp302 + Dv_D_gyro_bias(2, 0);
    _new_Dv_D_gyro_bias(0, 1) = DR_D_gyro_bias(0, 1) * _tmp281 + DR_D_gyro_bias(1, 1) * _tmp278 +
                                DR_D_gyro_bias(2, 1) * _tmp273 + Dv_D_gyro_bias(0, 1);
    _new_Dv_D_gyro_bias(1, 1) = DR_D_gyro_bias(0, 1) * _tmp292 + DR_D_gyro_bias(1, 1) * _tmp288 +
                                DR_D_gyro_bias(2, 1) * _tmp296 + Dv_D_gyro_bias(1, 1);
    _new_Dv_D_gyro_bias(2, 1) = DR_D_gyro_bias(0, 1) * _tmp304 + DR_D_gyro_bias(1, 1) * _tmp306 +
                                DR_D_gyro_bias(2, 1) * _tmp302 + Dv_D_gyro_bias(2, 1);
    _new_Dv_D_gyro_bias(0, 2) = DR_D_gyro_bias(0, 2) * _tmp281 + DR_D_gyro_bias(1, 2) * _tmp278 +
                                DR_D_gyro_bias(2, 2) * _tmp273 + Dv_D_gyro_bias(0, 2);
    _new_Dv_D_gyro_bias(1, 2) = DR_D_gyro_bias(0, 2) * _tmp292 + DR_D_gyro_bias(1, 2) * _tmp288 +
                                DR_D_gyro_bias(2, 2) * _tmp296 + Dv_D_gyro_bias(1, 2);
    _new_Dv_D_gyro_bias(2, 2) = DR_D_gyro_bias(0, 2) * _tmp304 + DR_D_gyro_bias(1, 2) * _tmp306 +
                                DR_D_gyro_bias(2, 2) * _tmp302 + Dv_D_gyro_bias(2, 2);
  }

  if (new_Dp_D_accel_bias != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _new_Dp_D_accel_bias = (*new_Dp_D_accel_bias);

    _new_Dp_D_accel_bias(0, 0) = Dp_D_accel_bias(0, 0) + Dv_D_accel_bias(0, 0) * dt - _tmp382;
    _new_Dp_D_accel_bias(1, 0) = Dp_D_accel_bias(1, 0) + Dv_D_accel_bias(1, 0) * dt - _tmp407;
    _new_Dp_D_accel_bias(2, 0) =
        Dp_D_accel_bias(2, 0) + Dv_D_accel_bias(2, 0) * dt - _tmp69 * _tmp72;
    _new_Dp_D_accel_bias(0, 1) = Dp_D_accel_bias(0, 1) + Dv_D_accel_bias(0, 1) * dt - _tmp388;
    _new_Dp_D_accel_bias(1, 1) = Dp_D_accel_bias(1, 1) + Dv_D_accel_bias(1, 1) * dt - _tmp381;
    _new_Dp_D_accel_bias(2, 1) =
        Dp_D_accel_bias(2, 1) + Dv_D_accel_bias(2, 1) * dt - _tmp70 * _tmp72;
    _new_Dp_D_accel_bias(0, 2) = Dp_D_accel_bias(0, 2) + Dv_D_accel_bias(0, 2) * dt - _tmp380;
    _new_Dp_D_accel_bias(1, 2) =
        Dp_D_accel_bias(1, 2) + Dv_D_accel_bias(1, 2) * dt - _tmp65 * _tmp72;
    _new_Dp_D_accel_bias(2, 2) = Dp_D_accel_bias(2, 2) + Dv_D_accel_bias(2, 2) * dt - _tmp390;
  }

  if (new_Dp_D_gyro_bias != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _new_Dp_D_gyro_bias = (*new_Dp_D_gyro_bias);

    _new_Dp_D_gyro_bias(0, 0) = DR_D_gyro_bias(0, 0) * _tmp314 + DR_D_gyro_bias(1, 0) * _tmp313 +
                                DR_D_gyro_bias(2, 0) * _tmp312 + Dp_D_gyro_bias(0, 0) +
                                Dv_D_gyro_bias(0, 0) * dt;
    _new_Dp_D_gyro_bias(1, 0) = DR_D_gyro_bias(0, 0) * _tmp323 + DR_D_gyro_bias(1, 0) * _tmp322 +
                                DR_D_gyro_bias(2, 0) * _tmp324 + Dp_D_gyro_bias(1, 0) +
                                Dv_D_gyro_bias(1, 0) * dt;
    _new_Dp_D_gyro_bias(2, 0) = DR_D_gyro_bias(0, 0) * _tmp333 + DR_D_gyro_bias(1, 0) * _tmp334 +
                                DR_D_gyro_bias(2, 0) * _tmp332 + Dp_D_gyro_bias(2, 0) +
                                Dv_D_gyro_bias(2, 0) * dt;
    _new_Dp_D_gyro_bias(0, 1) = DR_D_gyro_bias(0, 1) * _tmp314 + DR_D_gyro_bias(1, 1) * _tmp313 +
                                DR_D_gyro_bias(2, 1) * _tmp312 + Dp_D_gyro_bias(0, 1) +
                                Dv_D_gyro_bias(0, 1) * dt;
    _new_Dp_D_gyro_bias(1, 1) = DR_D_gyro_bias(0, 1) * _tmp323 + DR_D_gyro_bias(1, 1) * _tmp322 +
                                DR_D_gyro_bias(2, 1) * _tmp324 + Dp_D_gyro_bias(1, 1) +
                                Dv_D_gyro_bias(1, 1) * dt;
    _new_Dp_D_gyro_bias(2, 1) = DR_D_gyro_bias(0, 1) * _tmp333 + DR_D_gyro_bias(1, 1) * _tmp334 +
                                DR_D_gyro_bias(2, 1) * _tmp332 + Dp_D_gyro_bias(2, 1) +
                                Dv_D_gyro_bias(2, 1) * dt;
    _new_Dp_D_gyro_bias(0, 2) = DR_D_gyro_bias(0, 2) * _tmp314 + DR_D_gyro_bias(1, 2) * _tmp313 +
                                DR_D_gyro_bias(2, 2) * _tmp312 + Dp_D_gyro_bias(0, 2) +
                                Dv_D_gyro_bias(0, 2) * dt;
    _new_Dp_D_gyro_bias(1, 2) = DR_D_gyro_bias(0, 2) * _tmp323 + DR_D_gyro_bias(1, 2) * _tmp322 +
                                DR_D_gyro_bias(2, 2) * _tmp324 + Dp_D_gyro_bias(1, 2) +
                                Dv_D_gyro_bias(1, 2) * dt;
    _new_Dp_D_gyro_bias(2, 2) = DR_D_gyro_bias(0, 2) * _tmp333 + DR_D_gyro_bias(1, 2) * _tmp334 +
                                DR_D_gyro_bias(2, 2) * _tmp332 + Dp_D_gyro_bias(2, 2) +
                                Dv_D_gyro_bias(2, 2) * dt;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
