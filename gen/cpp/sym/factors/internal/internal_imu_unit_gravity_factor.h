// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>
#include <sym/rot3.h>
#include <sym/unit3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: internal_imu_unit_gravity_residual
 *
 * Args:
 *     pose_i: Pose3
 *     vel_i: Matrix31
 *     pose_j: Pose3
 *     vel_j: Matrix31
 *     accel_bias_i: Matrix31
 *     gyro_bias_i: Matrix31
 *     DR: Rot3
 *     Dv: Matrix31
 *     Dp: Matrix31
 *     sqrt_info: Matrix99
 *     DR_D_gyro_bias: Matrix33
 *     Dv_D_accel_bias: Matrix33
 *     Dv_D_gyro_bias: Matrix33
 *     Dp_D_accel_bias: Matrix33
 *     Dp_D_gyro_bias: Matrix33
 *     accel_bias_hat: Matrix31
 *     gyro_bias_hat: Matrix31
 *     gravity_direction: Unit3
 *     gravity_norm: Scalar
 *     dt: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix91
 *     jacobian: (9x26) jacobian of res wrt args pose_i (6), vel_i (3), pose_j (6), vel_j (3),
 *               accel_bias_i (3), gyro_bias_i (3), gravity_direction (2)
 *     hessian: (26x26) Gauss-Newton hessian for args pose_i (6), vel_i (3), pose_j (6), vel_j (3),
 *              accel_bias_i (3), gyro_bias_i (3), gravity_direction (2)
 *     rhs: (26x1) Gauss-Newton rhs for args pose_i (6), vel_i (3), pose_j (6), vel_j (3),
 *          accel_bias_i (3), gyro_bias_i (3), gravity_direction (2)
 */
template <typename Scalar>
void InternalImuUnitGravityFactor(
    const sym::Pose3<Scalar>& pose_i, const Eigen::Matrix<Scalar, 3, 1>& vel_i,
    const sym::Pose3<Scalar>& pose_j, const Eigen::Matrix<Scalar, 3, 1>& vel_j,
    const Eigen::Matrix<Scalar, 3, 1>& accel_bias_i, const Eigen::Matrix<Scalar, 3, 1>& gyro_bias_i,
    const sym::Rot3<Scalar>& DR, const Eigen::Matrix<Scalar, 3, 1>& Dv,
    const Eigen::Matrix<Scalar, 3, 1>& Dp, const Eigen::Matrix<Scalar, 9, 9>& sqrt_info,
    const Eigen::Matrix<Scalar, 3, 3>& DR_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dv_D_accel_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dv_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dp_D_accel_bias,
    const Eigen::Matrix<Scalar, 3, 3>& Dp_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 1>& accel_bias_hat,
    const Eigen::Matrix<Scalar, 3, 1>& gyro_bias_hat, const sym::Unit3<Scalar>& gravity_direction,
    const Scalar gravity_norm, const Scalar dt, const Scalar epsilon,
    Eigen::Matrix<Scalar, 9, 1>* const res = nullptr,
    Eigen::Matrix<Scalar, 9, 26>* const jacobian = nullptr,
    Eigen::Matrix<Scalar, 26, 26>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 6662

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _pose_i = pose_i.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _pose_j = pose_j.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _DR = DR.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _gravity_direction = gravity_direction.Data();

  // Intermediate terms (850)
  const Scalar _tmp0 = -gyro_bias_hat(0, 0) + gyro_bias_i(0, 0);
  const Scalar _tmp1 = -gyro_bias_hat(2, 0) + gyro_bias_i(2, 0);
  const Scalar _tmp2 = -gyro_bias_hat(1, 0) + gyro_bias_i(1, 0);
  const Scalar _tmp3 =
      DR_D_gyro_bias(2, 0) * _tmp0 + DR_D_gyro_bias(2, 1) * _tmp2 + DR_D_gyro_bias(2, 2) * _tmp1;
  const Scalar _tmp4 =
      DR_D_gyro_bias(0, 0) * _tmp0 + DR_D_gyro_bias(0, 1) * _tmp2 + DR_D_gyro_bias(0, 2) * _tmp1;
  const Scalar _tmp5 =
      DR_D_gyro_bias(1, 0) * _tmp0 + DR_D_gyro_bias(1, 1) * _tmp2 + DR_D_gyro_bias(1, 2) * _tmp1;
  const Scalar _tmp6 = std::pow(_tmp3, Scalar(2)) + std::pow(_tmp4, Scalar(2)) +
                       std::pow(_tmp5, Scalar(2)) + std::pow(epsilon, Scalar(2));
  const Scalar _tmp7 = std::sqrt(_tmp6);
  const Scalar _tmp8 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp9 = std::cos(_tmp8);
  const Scalar _tmp10 = _DR[0] * _tmp9;
  const Scalar _tmp11 = std::sin(_tmp8);
  const Scalar _tmp12 = _tmp11 / _tmp7;
  const Scalar _tmp13 = _DR[2] * _tmp12;
  const Scalar _tmp14 = _DR[3] * _tmp12;
  const Scalar _tmp15 = _DR[1] * _tmp12;
  const Scalar _tmp16 = _tmp10 - _tmp13 * _tmp5 + _tmp14 * _tmp4 + _tmp15 * _tmp3;
  const Scalar _tmp17 = _pose_i[0] * _tmp16;
  const Scalar _tmp18 = _DR[1] * _tmp9;
  const Scalar _tmp19 = _DR[0] * _tmp12;
  const Scalar _tmp20 = _tmp13 * _tmp4 + _tmp14 * _tmp5 + _tmp18 - _tmp19 * _tmp3;
  const Scalar _tmp21 = _pose_i[1] * _tmp20;
  const Scalar _tmp22 = _DR[2] * _tmp9;
  const Scalar _tmp23 = _tmp14 * _tmp3 - _tmp15 * _tmp4 + _tmp19 * _tmp5 + _tmp22;
  const Scalar _tmp24 = _pose_i[2] * _tmp23;
  const Scalar _tmp25 = _DR[3] * _tmp9;
  const Scalar _tmp26 = -_tmp13 * _tmp3 - _tmp15 * _tmp5 - _tmp19 * _tmp4 + _tmp25;
  const Scalar _tmp27 = _pose_i[3] * _tmp26;
  const Scalar _tmp28 = -_tmp17 - _tmp21 - _tmp24 + _tmp27;
  const Scalar _tmp29 = _pose_j[0] * _tmp28;
  const Scalar _tmp30 = _pose_i[3] * _tmp16;
  const Scalar _tmp31 = _pose_i[0] * _tmp26;
  const Scalar _tmp32 = _pose_i[2] * _tmp20;
  const Scalar _tmp33 = _pose_i[1] * _tmp23;
  const Scalar _tmp34 = -_tmp30 - _tmp31 + _tmp32 - _tmp33;
  const Scalar _tmp35 = _pose_j[3] * _tmp34;
  const Scalar _tmp36 = _pose_i[2] * _tmp16;
  const Scalar _tmp37 = _pose_i[1] * _tmp26;
  const Scalar _tmp38 = _pose_i[3] * _tmp20;
  const Scalar _tmp39 = _pose_i[0] * _tmp23;
  const Scalar _tmp40 = -_tmp36 - _tmp37 - _tmp38 + _tmp39;
  const Scalar _tmp41 = _pose_j[2] * _tmp40;
  const Scalar _tmp42 = _pose_i[1] * _tmp16;
  const Scalar _tmp43 = _pose_i[2] * _tmp26;
  const Scalar _tmp44 = _pose_i[0] * _tmp20;
  const Scalar _tmp45 = _pose_i[3] * _tmp23;
  const Scalar _tmp46 = _tmp42 - _tmp43 - _tmp44 - _tmp45;
  const Scalar _tmp47 = _pose_j[1] * _tmp46;
  const Scalar _tmp48 = _tmp29 + _tmp35 + _tmp41 - _tmp47;
  const Scalar _tmp49 = _pose_j[0] * _tmp34;
  const Scalar _tmp50 = _pose_j[1] * _tmp40;
  const Scalar _tmp51 = _pose_j[2] * _tmp46;
  const Scalar _tmp52 = _tmp49 + _tmp50 + _tmp51;
  const Scalar _tmp53 = _pose_j[3] * _tmp28;
  const Scalar _tmp54 =
      2 * std::min<Scalar>(0, (((-_tmp52 + _tmp53) > 0) - ((-_tmp52 + _tmp53) < 0))) + 1;
  const Scalar _tmp55 = 2 * _tmp54;
  const Scalar _tmp56 = -_tmp53;
  const Scalar _tmp57 = 1 - epsilon;
  const Scalar _tmp58 = std::min<Scalar>(_tmp57, std::fabs(_tmp52 + _tmp56));
  const Scalar _tmp59 = std::acos(_tmp58) / std::sqrt(Scalar(1 - std::pow(_tmp58, Scalar(2))));
  const Scalar _tmp60 = _tmp55 * _tmp59;
  const Scalar _tmp61 = _tmp48 * _tmp60;
  const Scalar _tmp62 = _tmp61 * sqrt_info(0, 0);
  const Scalar _tmp63 = _pose_j[1] * _tmp28;
  const Scalar _tmp64 = _pose_j[2] * _tmp34;
  const Scalar _tmp65 = _pose_j[3] * _tmp40;
  const Scalar _tmp66 = _pose_j[0] * _tmp46;
  const Scalar _tmp67 = _tmp63 - _tmp64 + _tmp65 + _tmp66;
  const Scalar _tmp68 = _tmp60 * _tmp67;
  const Scalar _tmp69 = _tmp61 * sqrt_info(1, 0) + _tmp68 * sqrt_info(1, 1);
  const Scalar _tmp70 = _pose_j[2] * _tmp28;
  const Scalar _tmp71 = _pose_j[1] * _tmp34;
  const Scalar _tmp72 = _pose_j[0] * _tmp40;
  const Scalar _tmp73 = _pose_j[3] * _tmp46;
  const Scalar _tmp74 = _tmp70 + _tmp71 - _tmp72 + _tmp73;
  const Scalar _tmp75 = _tmp55 * sqrt_info(2, 2);
  const Scalar _tmp76 =
      _tmp59 * _tmp74 * _tmp75 + _tmp61 * sqrt_info(2, 0) + _tmp68 * sqrt_info(2, 1);
  const Scalar _tmp77 = -accel_bias_hat(0, 0) + accel_bias_i(0, 0);
  const Scalar _tmp78 = -accel_bias_hat(1, 0) + accel_bias_i(1, 0);
  const Scalar _tmp79 = -accel_bias_hat(2, 0) + accel_bias_i(2, 0);
  const Scalar _tmp80 = std::pow(_pose_i[1], Scalar(2));
  const Scalar _tmp81 = -2 * _tmp80;
  const Scalar _tmp82 = std::pow(_pose_i[2], Scalar(2));
  const Scalar _tmp83 = 1 - 2 * _tmp82;
  const Scalar _tmp84 = _tmp81 + _tmp83;
  const Scalar _tmp85 = 2 * _gravity_direction[1];
  const Scalar _tmp86 = _gravity_direction[3] * _tmp85;
  const Scalar _tmp87 = 2 * _gravity_direction[0] * _gravity_direction[2];
  const Scalar _tmp88 = _tmp86 + _tmp87;
  const Scalar _tmp89 = dt * gravity_norm;
  const Scalar _tmp90 = -_tmp88 * _tmp89 - vel_i(0, 0) + vel_j(0, 0);
  const Scalar _tmp91 = 2 * _pose_i[1];
  const Scalar _tmp92 = _pose_i[3] * _tmp91;
  const Scalar _tmp93 = -_tmp92;
  const Scalar _tmp94 = 2 * _pose_i[2];
  const Scalar _tmp95 = _pose_i[0] * _tmp94;
  const Scalar _tmp96 = _tmp93 + _tmp95;
  const Scalar _tmp97 = std::pow(_gravity_direction[0], Scalar(2));
  const Scalar _tmp98 = std::pow(_gravity_direction[1], Scalar(2));
  const Scalar _tmp99 = -2 * _tmp97 - 2 * _tmp98 + 1;
  const Scalar _tmp100 = -_tmp89 * _tmp99 - vel_i(2, 0) + vel_j(2, 0);
  const Scalar _tmp101 = _pose_i[3] * _tmp94;
  const Scalar _tmp102 = _pose_i[0] * _tmp91;
  const Scalar _tmp103 = _tmp101 + _tmp102;
  const Scalar _tmp104 = 2 * _gravity_direction[3];
  const Scalar _tmp105 = _gravity_direction[0] * _tmp104;
  const Scalar _tmp106 = _gravity_direction[2] * _tmp85;
  const Scalar _tmp107 = -_tmp105 + _tmp106;
  const Scalar _tmp108 = -_tmp107 * _tmp89 - vel_i(1, 0) + vel_j(1, 0);
  const Scalar _tmp109 = _tmp100 * _tmp96 + _tmp103 * _tmp108;
  const Scalar _tmp110 = -Dv(0, 0) - Dv_D_accel_bias(0, 0) * _tmp77 -
                         Dv_D_accel_bias(0, 1) * _tmp78 - Dv_D_accel_bias(0, 2) * _tmp79 -
                         Dv_D_gyro_bias(0, 0) * _tmp0 - Dv_D_gyro_bias(0, 1) * _tmp2 -
                         Dv_D_gyro_bias(0, 2) * _tmp1 + _tmp109 + _tmp84 * _tmp90;
  const Scalar _tmp111 = _tmp60 * _tmp74;
  const Scalar _tmp112 = _tmp110 * sqrt_info(3, 3) + _tmp111 * sqrt_info(3, 2) +
                         _tmp61 * sqrt_info(3, 0) + _tmp68 * sqrt_info(3, 1);
  const Scalar _tmp113 = std::pow(_pose_i[0], Scalar(2));
  const Scalar _tmp114 = -2 * _tmp113;
  const Scalar _tmp115 = _tmp114 + _tmp83;
  const Scalar _tmp116 = 2 * _pose_i[0] * _pose_i[3];
  const Scalar _tmp117 = _pose_i[1] * _tmp94;
  const Scalar _tmp118 = _tmp116 + _tmp117;
  const Scalar _tmp119 = -_tmp101;
  const Scalar _tmp120 = _tmp102 + _tmp119;
  const Scalar _tmp121 = _tmp100 * _tmp118 + _tmp120 * _tmp90;
  const Scalar _tmp122 = -Dv(1, 0) - Dv_D_accel_bias(1, 0) * _tmp77 -
                         Dv_D_accel_bias(1, 1) * _tmp78 - Dv_D_accel_bias(1, 2) * _tmp79 -
                         Dv_D_gyro_bias(1, 0) * _tmp0 - Dv_D_gyro_bias(1, 1) * _tmp2 -
                         Dv_D_gyro_bias(1, 2) * _tmp1 + _tmp108 * _tmp115 + _tmp121;
  const Scalar _tmp123 = _tmp110 * sqrt_info(4, 3) + _tmp111 * sqrt_info(4, 2) +
                         _tmp122 * sqrt_info(4, 4) + _tmp61 * sqrt_info(4, 0) +
                         _tmp68 * sqrt_info(4, 1);
  const Scalar _tmp124 = _tmp114 + _tmp81 + 1;
  const Scalar _tmp125 = -_tmp116;
  const Scalar _tmp126 = _tmp117 + _tmp125;
  const Scalar _tmp127 = _tmp92 + _tmp95;
  const Scalar _tmp128 = _tmp108 * _tmp126 + _tmp127 * _tmp90;
  const Scalar _tmp129 = -Dv(2, 0) - Dv_D_accel_bias(2, 0) * _tmp77 -
                         Dv_D_accel_bias(2, 1) * _tmp78 - Dv_D_accel_bias(2, 2) * _tmp79 -
                         Dv_D_gyro_bias(2, 0) * _tmp0 - Dv_D_gyro_bias(2, 1) * _tmp2 -
                         Dv_D_gyro_bias(2, 2) * _tmp1 + _tmp100 * _tmp124 + _tmp128;
  const Scalar _tmp130 = _tmp110 * sqrt_info(5, 3) + _tmp111 * sqrt_info(5, 2) +
                         _tmp122 * sqrt_info(5, 4) + _tmp129 * sqrt_info(5, 5) +
                         _tmp61 * sqrt_info(5, 0) + _tmp68 * sqrt_info(5, 1);
  const Scalar _tmp131 = (Scalar(1) / Scalar(2)) * std::pow(dt, Scalar(2)) * gravity_norm;
  const Scalar _tmp132 = -_pose_i[4] + _pose_j[4] - _tmp131 * _tmp88 - dt * vel_i(0, 0);
  const Scalar _tmp133 = -_pose_i[5] + _pose_j[5] - _tmp107 * _tmp131 - dt * vel_i(1, 0);
  const Scalar _tmp134 = -_pose_i[6] + _pose_j[6] - _tmp131 * _tmp99 - dt * vel_i(2, 0);
  const Scalar _tmp135 = _tmp103 * _tmp133 + _tmp134 * _tmp96;
  const Scalar _tmp136 = -Dp(0, 0) - Dp_D_accel_bias(0, 0) * _tmp77 -
                         Dp_D_accel_bias(0, 1) * _tmp78 - Dp_D_accel_bias(0, 2) * _tmp79 -
                         Dp_D_gyro_bias(0, 0) * _tmp0 - Dp_D_gyro_bias(0, 1) * _tmp2 -
                         Dp_D_gyro_bias(0, 2) * _tmp1 + _tmp132 * _tmp84 + _tmp135;
  const Scalar _tmp137 = _tmp110 * sqrt_info(6, 3) + _tmp111 * sqrt_info(6, 2) +
                         _tmp122 * sqrt_info(6, 4) + _tmp129 * sqrt_info(6, 5) +
                         _tmp136 * sqrt_info(6, 6) + _tmp61 * sqrt_info(6, 0) +
                         _tmp68 * sqrt_info(6, 1);
  const Scalar _tmp138 = _tmp118 * _tmp134 + _tmp120 * _tmp132;
  const Scalar _tmp139 = -Dp(1, 0) - Dp_D_accel_bias(1, 0) * _tmp77 -
                         Dp_D_accel_bias(1, 1) * _tmp78 - Dp_D_accel_bias(1, 2) * _tmp79 -
                         Dp_D_gyro_bias(1, 0) * _tmp0 - Dp_D_gyro_bias(1, 1) * _tmp2 -
                         Dp_D_gyro_bias(1, 2) * _tmp1 + _tmp115 * _tmp133 + _tmp138;
  const Scalar _tmp140 = _tmp110 * sqrt_info(7, 3) + _tmp111 * sqrt_info(7, 2) +
                         _tmp122 * sqrt_info(7, 4) + _tmp129 * sqrt_info(7, 5) +
                         _tmp136 * sqrt_info(7, 6) + _tmp139 * sqrt_info(7, 7) +
                         _tmp61 * sqrt_info(7, 0) + _tmp68 * sqrt_info(7, 1);
  const Scalar _tmp141 = _tmp126 * _tmp133 + _tmp127 * _tmp132;
  const Scalar _tmp142 = _tmp48 * sqrt_info(8, 0);
  const Scalar _tmp143 =
      _tmp110 * sqrt_info(8, 3) + _tmp111 * sqrt_info(8, 2) + _tmp122 * sqrt_info(8, 4) +
      _tmp129 * sqrt_info(8, 5) + _tmp136 * sqrt_info(8, 6) + _tmp139 * sqrt_info(8, 7) +
      _tmp142 * _tmp60 + _tmp68 * sqrt_info(8, 1) +
      sqrt_info(8, 8) * (-Dp(2, 0) - Dp_D_accel_bias(2, 0) * _tmp77 -
                         Dp_D_accel_bias(2, 1) * _tmp78 - Dp_D_accel_bias(2, 2) * _tmp79 -
                         Dp_D_gyro_bias(2, 0) * _tmp0 - Dp_D_gyro_bias(2, 1) * _tmp2 -
                         Dp_D_gyro_bias(2, 2) * _tmp1 + _tmp124 * _tmp134 + _tmp141);
  const Scalar _tmp144 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp145 = (Scalar(1) / Scalar(2)) * _tmp39;
  const Scalar _tmp146 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp147 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp148 = _tmp146 - _tmp147;
  const Scalar _tmp149 = _tmp144 + _tmp145 + _tmp148;
  const Scalar _tmp150 = (Scalar(1) / Scalar(2)) * _tmp43;
  const Scalar _tmp151 = -_tmp150;
  const Scalar _tmp152 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp153 = (Scalar(1) / Scalar(2)) * _tmp42;
  const Scalar _tmp154 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp155 = _tmp153 + _tmp154;
  const Scalar _tmp156 = _tmp151 + _tmp152 + _tmp155;
  const Scalar _tmp157 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp158 = -_tmp157;
  const Scalar _tmp159 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp160 = -_tmp159;
  const Scalar _tmp161 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp162 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp163 = _tmp158 + _tmp160 - _tmp161 + _tmp162;
  const Scalar _tmp164 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp165 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp166 = -_tmp165;
  const Scalar _tmp167 = -Scalar(1) / Scalar(2) * _tmp27;
  const Scalar _tmp168 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp169 = _tmp167 - _tmp168;
  const Scalar _tmp170 = _tmp164 + _tmp166 + _tmp169;
  const Scalar _tmp171 = -_tmp49 - _tmp50 - _tmp51 + _tmp53;
  const Scalar _tmp172 = std::fabs(_tmp171);
  const Scalar _tmp173 = std::min<Scalar>(_tmp172, _tmp57);
  const Scalar _tmp174 = std::acos(_tmp173);
  const Scalar _tmp175 = 1 - std::pow(_tmp173, Scalar(2));
  const Scalar _tmp176 = _tmp174 / std::sqrt(_tmp175);
  const Scalar _tmp177 = _tmp176 * _tmp55;
  const Scalar _tmp178 = _tmp177 * (_pose_j[0] * _tmp163 - _pose_j[1] * _tmp149 +
                                    _pose_j[2] * _tmp156 + _pose_j[3] * _tmp170);
  const Scalar _tmp179 = _tmp54 * ((((-_tmp172 + _tmp57) > 0) - ((-_tmp172 + _tmp57) < 0)) + 1);
  const Scalar _tmp180 = _tmp179 / _tmp175;
  const Scalar _tmp181 = _tmp180 * _tmp48;
  const Scalar _tmp182 = (((_tmp171) > 0) - ((_tmp171) < 0));
  const Scalar _tmp183 =
      -_pose_j[0] * _tmp170 - _pose_j[1] * _tmp156 - _pose_j[2] * _tmp149 + _pose_j[3] * _tmp163;
  const Scalar _tmp184 = _tmp182 * _tmp183;
  const Scalar _tmp185 = _tmp181 * _tmp184;
  const Scalar _tmp186 = _tmp173 * _tmp174 * _tmp179 / (_tmp175 * std::sqrt(_tmp175));
  const Scalar _tmp187 = _tmp184 * _tmp186;
  const Scalar _tmp188 = _tmp48 * sqrt_info(0, 0);
  const Scalar _tmp189 = _tmp178 * sqrt_info(0, 0) - _tmp185 * sqrt_info(0, 0) + _tmp187 * _tmp188;
  const Scalar _tmp190 = _tmp67 * sqrt_info(1, 1);
  const Scalar _tmp191 = _tmp177 * (_pose_j[0] * _tmp149 + _pose_j[1] * _tmp163 -
                                    _pose_j[2] * _tmp170 + _pose_j[3] * _tmp156);
  const Scalar _tmp192 = _tmp181 * sqrt_info(1, 0);
  const Scalar _tmp193 = _tmp180 * _tmp67;
  const Scalar _tmp194 = _tmp193 * sqrt_info(1, 1);
  const Scalar _tmp195 = _tmp48 * sqrt_info(1, 0);
  const Scalar _tmp196 = _tmp178 * sqrt_info(1, 0) - _tmp184 * _tmp192 - _tmp184 * _tmp194 +
                         _tmp187 * _tmp190 + _tmp187 * _tmp195 + _tmp191 * sqrt_info(1, 1);
  const Scalar _tmp197 = _tmp187 * _tmp67;
  const Scalar _tmp198 =
      -_pose_j[0] * _tmp156 + _pose_j[1] * _tmp170 + _pose_j[2] * _tmp163 + _pose_j[3] * _tmp149;
  const Scalar _tmp199 = _tmp176 * _tmp75;
  const Scalar _tmp200 = _tmp180 * _tmp182;
  const Scalar _tmp201 = _tmp183 * _tmp200;
  const Scalar _tmp202 = _tmp201 * _tmp74;
  const Scalar _tmp203 = _tmp184 * _tmp193;
  const Scalar _tmp204 = _tmp74 * sqrt_info(2, 2);
  const Scalar _tmp205 = _tmp48 * sqrt_info(2, 0);
  const Scalar _tmp206 = _tmp178 * sqrt_info(2, 0) - _tmp185 * sqrt_info(2, 0) + _tmp187 * _tmp204 +
                         _tmp187 * _tmp205 + _tmp191 * sqrt_info(2, 1) + _tmp197 * sqrt_info(2, 1) +
                         _tmp198 * _tmp199 - _tmp202 * sqrt_info(2, 2) - _tmp203 * sqrt_info(2, 1);
  const Scalar _tmp207 = _tmp177 * _tmp198;
  const Scalar _tmp208 = _tmp48 * sqrt_info(3, 0);
  const Scalar _tmp209 = _tmp74 * sqrt_info(3, 2);
  const Scalar _tmp210 = _tmp193 * sqrt_info(3, 1);
  const Scalar _tmp211 = _tmp186 * _tmp209;
  const Scalar _tmp212 = _tmp178 * sqrt_info(3, 0) - _tmp184 * _tmp210 + _tmp184 * _tmp211 +
                         _tmp187 * _tmp208 + _tmp191 * sqrt_info(3, 1) + _tmp197 * sqrt_info(3, 1) -
                         _tmp201 * _tmp208 - _tmp201 * _tmp209 + _tmp207 * sqrt_info(3, 2);
  const Scalar _tmp213 = _tmp181 * sqrt_info(4, 0);
  const Scalar _tmp214 = -_tmp113;
  const Scalar _tmp215 = -_tmp80;
  const Scalar _tmp216 = std::pow(_pose_i[3], Scalar(2));
  const Scalar _tmp217 = _tmp214 + _tmp215 + _tmp216 + _tmp82;
  const Scalar _tmp218 = _tmp100 * _tmp217 + _tmp128;
  const Scalar _tmp219 = _tmp186 * _tmp74;
  const Scalar _tmp220 = _tmp219 * sqrt_info(4, 2);
  const Scalar _tmp221 = _tmp48 * sqrt_info(4, 0);
  const Scalar _tmp222 = _tmp178 * sqrt_info(4, 0) - _tmp184 * _tmp213 + _tmp184 * _tmp220 +
                         _tmp187 * _tmp221 + _tmp191 * sqrt_info(4, 1) + _tmp197 * sqrt_info(4, 1) -
                         _tmp202 * sqrt_info(4, 2) - _tmp203 * sqrt_info(4, 1) +
                         _tmp207 * sqrt_info(4, 2) + _tmp218 * sqrt_info(4, 4);
  const Scalar _tmp223 = _tmp67 * sqrt_info(5, 1);
  const Scalar _tmp224 = -_tmp117;
  const Scalar _tmp225 = _tmp125 + _tmp224;
  const Scalar _tmp226 = -_tmp216;
  const Scalar _tmp227 = _tmp226 + _tmp82;
  const Scalar _tmp228 = _tmp113 + _tmp215;
  const Scalar _tmp229 = _tmp227 + _tmp228;
  const Scalar _tmp230 = -_tmp102;
  const Scalar _tmp231 = _tmp101 + _tmp230;
  const Scalar _tmp232 = _tmp100 * _tmp225 + _tmp108 * _tmp229 + _tmp231 * _tmp90;
  const Scalar _tmp233 = _tmp193 * sqrt_info(5, 1);
  const Scalar _tmp234 = _tmp219 * sqrt_info(5, 2);
  const Scalar _tmp235 = _tmp48 * sqrt_info(5, 0);
  const Scalar _tmp236 = _tmp178 * sqrt_info(5, 0) - _tmp184 * _tmp233 + _tmp184 * _tmp234 -
                         _tmp185 * sqrt_info(5, 0) + _tmp187 * _tmp223 + _tmp187 * _tmp235 +
                         _tmp191 * sqrt_info(5, 1) - _tmp202 * sqrt_info(5, 2) +
                         _tmp207 * sqrt_info(5, 2) + _tmp218 * sqrt_info(5, 4) +
                         _tmp232 * sqrt_info(5, 5);
  const Scalar _tmp237 = _tmp74 * sqrt_info(6, 2);
  const Scalar _tmp238 = _tmp193 * sqrt_info(6, 1);
  const Scalar _tmp239 = _tmp48 * sqrt_info(6, 0);
  const Scalar _tmp240 = _tmp178 * sqrt_info(6, 0) - _tmp184 * _tmp238 - _tmp185 * sqrt_info(6, 0) +
                         _tmp187 * _tmp237 + _tmp187 * _tmp239 + _tmp191 * sqrt_info(6, 1) +
                         _tmp197 * sqrt_info(6, 1) - _tmp201 * _tmp237 + _tmp207 * sqrt_info(6, 2) +
                         _tmp218 * sqrt_info(6, 4) + _tmp232 * sqrt_info(6, 5);
  const Scalar _tmp241 = _tmp177 * sqrt_info(7, 2);
  const Scalar _tmp242 = _tmp193 * sqrt_info(7, 1);
  const Scalar _tmp243 = _tmp182 * _tmp242;
  const Scalar _tmp244 = _tmp219 * sqrt_info(7, 2);
  const Scalar _tmp245 = _tmp48 * sqrt_info(7, 0);
  const Scalar _tmp246 = _tmp134 * _tmp217 + _tmp141;
  const Scalar _tmp247 = _tmp178 * sqrt_info(7, 0) - _tmp183 * _tmp243 + _tmp184 * _tmp244 -
                         _tmp185 * sqrt_info(7, 0) + _tmp187 * _tmp245 + _tmp191 * sqrt_info(7, 1) +
                         _tmp197 * sqrt_info(7, 1) + _tmp198 * _tmp241 - _tmp202 * sqrt_info(7, 2) +
                         _tmp218 * sqrt_info(7, 4) + _tmp232 * sqrt_info(7, 5) +
                         _tmp246 * sqrt_info(7, 7);
  const Scalar _tmp248 = _tmp74 * sqrt_info(8, 2);
  const Scalar _tmp249 =
      _tmp142 * _tmp187 - _tmp142 * _tmp201 + _tmp178 * sqrt_info(8, 0) + _tmp187 * _tmp248 +
      _tmp191 * sqrt_info(8, 1) + _tmp197 * sqrt_info(8, 1) - _tmp201 * _tmp248 -
      _tmp203 * sqrt_info(8, 1) + _tmp207 * sqrt_info(8, 2) + _tmp218 * sqrt_info(8, 4) +
      _tmp232 * sqrt_info(8, 5) + _tmp246 * sqrt_info(8, 7) +
      sqrt_info(8, 8) * (_tmp132 * _tmp231 + _tmp133 * _tmp229 + _tmp134 * _tmp225);
  const Scalar _tmp250 = -_tmp144;
  const Scalar _tmp251 = -_tmp145 + _tmp148 + _tmp250;
  const Scalar _tmp252 = -_tmp152;
  const Scalar _tmp253 = _tmp150 + _tmp155 + _tmp252;
  const Scalar _tmp254 = _tmp161 + _tmp162;
  const Scalar _tmp255 = _tmp157 + _tmp160 + _tmp254;
  const Scalar _tmp256 = -_tmp164;
  const Scalar _tmp257 = _tmp165 + _tmp169 + _tmp256;
  const Scalar _tmp258 =
      -_pose_j[0] * _tmp253 - _pose_j[1] * _tmp257 - _pose_j[2] * _tmp255 + _pose_j[3] * _tmp251;
  const Scalar _tmp259 = _tmp182 * _tmp258;
  const Scalar _tmp260 = _tmp181 * _tmp259;
  const Scalar _tmp261 =
      _pose_j[0] * _tmp251 - _pose_j[1] * _tmp255 + _pose_j[2] * _tmp257 + _pose_j[3] * _tmp253;
  const Scalar _tmp262 = _tmp177 * _tmp261;
  const Scalar _tmp263 = _tmp186 * _tmp259;
  const Scalar _tmp264 = _tmp263 * _tmp48;
  const Scalar _tmp265 =
      -_tmp260 * sqrt_info(0, 0) + _tmp262 * sqrt_info(0, 0) + _tmp264 * sqrt_info(0, 0);
  const Scalar _tmp266 =
      _pose_j[0] * _tmp255 + _pose_j[1] * _tmp251 - _pose_j[2] * _tmp253 + _pose_j[3] * _tmp257;
  const Scalar _tmp267 = _tmp177 * _tmp266;
  const Scalar _tmp268 = _tmp190 * _tmp263 - _tmp192 * _tmp259 - _tmp194 * _tmp259 +
                         _tmp195 * _tmp263 + _tmp262 * sqrt_info(1, 0) + _tmp267 * sqrt_info(1, 1);
  const Scalar _tmp269 = _tmp193 * _tmp259;
  const Scalar _tmp270 =
      -_pose_j[0] * _tmp257 + _pose_j[1] * _tmp253 + _pose_j[2] * _tmp251 + _pose_j[3] * _tmp255;
  const Scalar _tmp271 = _tmp263 * _tmp67;
  const Scalar _tmp272 = _tmp177 * sqrt_info(2, 0);
  const Scalar _tmp273 = _tmp180 * _tmp259;
  const Scalar _tmp274 = _tmp273 * _tmp74;
  const Scalar _tmp275 = _tmp199 * _tmp270 + _tmp204 * _tmp263 - _tmp260 * sqrt_info(2, 0) +
                         _tmp261 * _tmp272 + _tmp264 * sqrt_info(2, 0) + _tmp267 * sqrt_info(2, 1) -
                         _tmp269 * sqrt_info(2, 1) + _tmp271 * sqrt_info(2, 1) -
                         _tmp274 * sqrt_info(2, 2);
  const Scalar _tmp276 = _tmp177 * _tmp270;
  const Scalar _tmp277 = _tmp186 * _tmp208;
  const Scalar _tmp278 = _tmp177 * sqrt_info(3, 1);
  const Scalar _tmp279 = -_tmp82;
  const Scalar _tmp280 = _tmp113 + _tmp226 + _tmp279 + _tmp80;
  const Scalar _tmp281 = _tmp116 + _tmp224;
  const Scalar _tmp282 = -_tmp95;
  const Scalar _tmp283 = _tmp282 + _tmp93;
  const Scalar _tmp284 = _tmp100 * _tmp280 + _tmp108 * _tmp281 + _tmp283 * _tmp90;
  const Scalar _tmp285 = -_tmp208 * _tmp273 - _tmp209 * _tmp273 - _tmp210 * _tmp259 +
                         _tmp211 * _tmp259 + _tmp259 * _tmp277 + _tmp262 * sqrt_info(3, 0) +
                         _tmp266 * _tmp278 + _tmp271 * sqrt_info(3, 1) + _tmp276 * sqrt_info(3, 2) +
                         _tmp284 * sqrt_info(3, 3);
  const Scalar _tmp286 = _tmp67 * sqrt_info(4, 1);
  const Scalar _tmp287 = -_tmp213 * _tmp259 + _tmp220 * _tmp259 + _tmp262 * sqrt_info(4, 0) +
                         _tmp263 * _tmp286 + _tmp264 * sqrt_info(4, 0) + _tmp267 * sqrt_info(4, 1) -
                         _tmp269 * sqrt_info(4, 1) - _tmp274 * sqrt_info(4, 2) +
                         _tmp276 * sqrt_info(4, 2) + _tmp284 * sqrt_info(4, 3);
  const Scalar _tmp288 = _tmp216 + _tmp279;
  const Scalar _tmp289 = _tmp228 + _tmp288;
  const Scalar _tmp290 = _tmp109 + _tmp289 * _tmp90;
  const Scalar _tmp291 = _tmp177 * sqrt_info(5, 0);
  const Scalar _tmp292 = _tmp223 * _tmp263 + _tmp234 * _tmp259 - _tmp260 * sqrt_info(5, 0) +
                         _tmp261 * _tmp291 + _tmp264 * sqrt_info(5, 0) + _tmp267 * sqrt_info(5, 1) -
                         _tmp269 * sqrt_info(5, 1) - _tmp274 * sqrt_info(5, 2) +
                         _tmp276 * sqrt_info(5, 2) + _tmp284 * sqrt_info(5, 3) +
                         _tmp290 * sqrt_info(5, 5);
  const Scalar _tmp293 = _tmp177 * sqrt_info(6, 1);
  const Scalar _tmp294 = _tmp132 * _tmp283 + _tmp133 * _tmp281 + _tmp134 * _tmp280;
  const Scalar _tmp295 = _tmp237 * _tmp263 - _tmp238 * _tmp259 + _tmp239 * _tmp263 -
                         _tmp260 * sqrt_info(6, 0) + _tmp262 * sqrt_info(6, 0) + _tmp266 * _tmp293 +
                         _tmp271 * sqrt_info(6, 1) - _tmp274 * sqrt_info(6, 2) +
                         _tmp276 * sqrt_info(6, 2) + _tmp284 * sqrt_info(6, 3) +
                         _tmp290 * sqrt_info(6, 5) + _tmp294 * sqrt_info(6, 6);
  const Scalar _tmp296 = _tmp241 * _tmp270 - _tmp243 * _tmp258 + _tmp244 * _tmp259 +
                         _tmp245 * _tmp263 - _tmp260 * sqrt_info(7, 0) + _tmp262 * sqrt_info(7, 0) +
                         _tmp267 * sqrt_info(7, 1) + _tmp271 * sqrt_info(7, 1) -
                         _tmp274 * sqrt_info(7, 2) + _tmp284 * sqrt_info(7, 3) +
                         _tmp290 * sqrt_info(7, 5) + _tmp294 * sqrt_info(7, 6);
  const Scalar _tmp297 = _tmp142 * _tmp263 - _tmp142 * _tmp273 + _tmp248 * _tmp263 -
                         _tmp248 * _tmp273 + _tmp262 * sqrt_info(8, 0) + _tmp267 * sqrt_info(8, 1) -
                         _tmp269 * sqrt_info(8, 1) + _tmp271 * sqrt_info(8, 1) +
                         _tmp276 * sqrt_info(8, 2) + _tmp284 * sqrt_info(8, 3) +
                         _tmp290 * sqrt_info(8, 5) + _tmp294 * sqrt_info(8, 6) +
                         sqrt_info(8, 8) * (_tmp132 * _tmp289 + _tmp135);
  const Scalar _tmp298 = _tmp145 + _tmp146 + _tmp147 + _tmp250;
  const Scalar _tmp299 = _tmp151 - _tmp153 + _tmp154 + _tmp252;
  const Scalar _tmp300 = _tmp158 + _tmp159 + _tmp254;
  const Scalar _tmp301 = _tmp166 + _tmp167 + _tmp168 + _tmp256;
  const Scalar _tmp302 =
      -_pose_j[0] * _tmp298 - _pose_j[1] * _tmp300 - _pose_j[2] * _tmp301 + _pose_j[3] * _tmp299;
  const Scalar _tmp303 = _tmp182 * _tmp302;
  const Scalar _tmp304 = _tmp186 * _tmp303;
  const Scalar _tmp305 = _tmp181 * _tmp303;
  const Scalar _tmp306 = _tmp177 * (_pose_j[0] * _tmp299 - _pose_j[1] * _tmp301 +
                                    _pose_j[2] * _tmp300 + _pose_j[3] * _tmp298);
  const Scalar _tmp307 = _tmp188 * _tmp304 - _tmp305 * sqrt_info(0, 0) + _tmp306 * sqrt_info(0, 0);
  const Scalar _tmp308 = _tmp177 * (_pose_j[0] * _tmp301 + _pose_j[1] * _tmp299 -
                                    _pose_j[2] * _tmp298 + _pose_j[3] * _tmp300);
  const Scalar _tmp309 = _tmp190 * _tmp304 - _tmp192 * _tmp303 - _tmp194 * _tmp303 +
                         _tmp195 * _tmp304 + _tmp306 * sqrt_info(1, 0) + _tmp308 * sqrt_info(1, 1);
  const Scalar _tmp310 = _tmp304 * _tmp67;
  const Scalar _tmp311 = _tmp200 * _tmp302;
  const Scalar _tmp312 = _tmp193 * _tmp303;
  const Scalar _tmp313 =
      -_pose_j[0] * _tmp300 + _pose_j[1] * _tmp298 + _pose_j[2] * _tmp299 + _pose_j[3] * _tmp301;
  const Scalar _tmp314 = _tmp199 * _tmp313 + _tmp204 * _tmp304 - _tmp204 * _tmp311 +
                         _tmp205 * _tmp304 - _tmp305 * sqrt_info(2, 0) + _tmp306 * sqrt_info(2, 0) +
                         _tmp308 * sqrt_info(2, 1) + _tmp310 * sqrt_info(2, 1) -
                         _tmp312 * sqrt_info(2, 1);
  const Scalar _tmp315 = _tmp214 + _tmp80;
  const Scalar _tmp316 = _tmp288 + _tmp315;
  const Scalar _tmp317 = _tmp108 * _tmp316 + _tmp121;
  const Scalar _tmp318 = _tmp177 * _tmp313;
  const Scalar _tmp319 = _tmp208 * _tmp304 - _tmp208 * _tmp311 - _tmp209 * _tmp311 -
                         _tmp210 * _tmp303 + _tmp211 * _tmp303 + _tmp306 * sqrt_info(3, 0) +
                         _tmp308 * sqrt_info(3, 1) + _tmp310 * sqrt_info(3, 1) +
                         _tmp317 * sqrt_info(3, 3) + _tmp318 * sqrt_info(3, 2);
  const Scalar _tmp320 = _tmp282 + _tmp92;
  const Scalar _tmp321 = _tmp119 + _tmp230;
  const Scalar _tmp322 = _tmp227 + _tmp315;
  const Scalar _tmp323 = _tmp100 * _tmp320 + _tmp108 * _tmp321 + _tmp322 * _tmp90;
  const Scalar _tmp324 = _tmp311 * _tmp74;
  const Scalar _tmp325 = -_tmp213 * _tmp303 + _tmp220 * _tmp303 + _tmp221 * _tmp304 +
                         _tmp306 * sqrt_info(4, 0) + _tmp308 * sqrt_info(4, 1) +
                         _tmp310 * sqrt_info(4, 1) - _tmp312 * sqrt_info(4, 1) +
                         _tmp317 * sqrt_info(4, 3) + _tmp318 * sqrt_info(4, 2) +
                         _tmp323 * sqrt_info(4, 4) - _tmp324 * sqrt_info(4, 2);
  const Scalar _tmp326 = _tmp223 * _tmp304 - _tmp233 * _tmp303 + _tmp234 * _tmp303 +
                         _tmp235 * _tmp304 - _tmp305 * sqrt_info(5, 0) + _tmp306 * sqrt_info(5, 0) +
                         _tmp308 * sqrt_info(5, 1) + _tmp317 * sqrt_info(5, 3) +
                         _tmp318 * sqrt_info(5, 2) + _tmp323 * sqrt_info(5, 4) -
                         _tmp324 * sqrt_info(5, 2);
  const Scalar _tmp327 = _tmp133 * _tmp316 + _tmp138;
  const Scalar _tmp328 = _tmp237 * _tmp304 - _tmp237 * _tmp311 - _tmp238 * _tmp303 +
                         _tmp239 * _tmp304 - _tmp305 * sqrt_info(6, 0) + _tmp306 * sqrt_info(6, 0) +
                         _tmp308 * sqrt_info(6, 1) + _tmp310 * sqrt_info(6, 1) +
                         _tmp317 * sqrt_info(6, 3) + _tmp318 * sqrt_info(6, 2) +
                         _tmp323 * sqrt_info(6, 4) + _tmp327 * sqrt_info(6, 6);
  const Scalar _tmp329 = _tmp132 * _tmp322 + _tmp133 * _tmp321 + _tmp134 * _tmp320;
  const Scalar _tmp330 =
      _tmp241 * _tmp313 - _tmp243 * _tmp302 + _tmp244 * _tmp303 + _tmp245 * _tmp304 -
      _tmp305 * sqrt_info(7, 0) + _tmp306 * sqrt_info(7, 0) + _tmp308 * sqrt_info(7, 1) +
      _tmp310 * sqrt_info(7, 1) + _tmp317 * sqrt_info(7, 3) + _tmp323 * sqrt_info(7, 4) -
      _tmp324 * sqrt_info(7, 2) + _tmp327 * sqrt_info(7, 6) + _tmp329 * sqrt_info(7, 7);
  const Scalar _tmp331 =
      _tmp142 * _tmp304 - _tmp142 * _tmp311 + _tmp248 * _tmp304 - _tmp248 * _tmp311 +
      _tmp306 * sqrt_info(8, 0) + _tmp308 * sqrt_info(8, 1) + _tmp310 * sqrt_info(8, 1) -
      _tmp312 * sqrt_info(8, 1) + _tmp317 * sqrt_info(8, 3) + _tmp318 * sqrt_info(8, 2) +
      _tmp323 * sqrt_info(8, 4) + _tmp327 * sqrt_info(8, 6) + _tmp329 * sqrt_info(8, 7);
  const Scalar _tmp332 = _tmp84 * sqrt_info(6, 6);
  const Scalar _tmp333 = _tmp120 * sqrt_info(7, 7);
  const Scalar _tmp334 = _tmp84 * sqrt_info(7, 6);
  const Scalar _tmp335 = -_tmp333 - _tmp334;
  const Scalar _tmp336 = _tmp120 * sqrt_info(8, 7);
  const Scalar _tmp337 = _tmp84 * sqrt_info(8, 6);
  const Scalar _tmp338 = _tmp127 * sqrt_info(8, 8);
  const Scalar _tmp339 = -_tmp336 - _tmp337 - _tmp338;
  const Scalar _tmp340 = _tmp103 * sqrt_info(6, 6);
  const Scalar _tmp341 = _tmp103 * sqrt_info(7, 6);
  const Scalar _tmp342 = _tmp115 * sqrt_info(7, 7);
  const Scalar _tmp343 = -_tmp341 - _tmp342;
  const Scalar _tmp344 = _tmp126 * sqrt_info(8, 8);
  const Scalar _tmp345 = _tmp103 * sqrt_info(8, 6);
  const Scalar _tmp346 = _tmp115 * sqrt_info(8, 7);
  const Scalar _tmp347 = -_tmp344 - _tmp345 - _tmp346;
  const Scalar _tmp348 = _tmp96 * sqrt_info(6, 6);
  const Scalar _tmp349 = _tmp118 * sqrt_info(7, 7);
  const Scalar _tmp350 = _tmp96 * sqrt_info(7, 6);
  const Scalar _tmp351 = -_tmp349 - _tmp350;
  const Scalar _tmp352 = _tmp118 * sqrt_info(8, 7);
  const Scalar _tmp353 = _tmp124 * sqrt_info(8, 8);
  const Scalar _tmp354 = _tmp96 * sqrt_info(8, 6);
  const Scalar _tmp355 = -_tmp352 - _tmp353 - _tmp354;
  const Scalar _tmp356 = _tmp84 * sqrt_info(3, 3);
  const Scalar _tmp357 = _tmp120 * sqrt_info(4, 4);
  const Scalar _tmp358 = _tmp84 * sqrt_info(4, 3);
  const Scalar _tmp359 = -_tmp357 - _tmp358;
  const Scalar _tmp360 = _tmp120 * sqrt_info(5, 4);
  const Scalar _tmp361 = _tmp84 * sqrt_info(5, 3);
  const Scalar _tmp362 = _tmp127 * sqrt_info(5, 5);
  const Scalar _tmp363 = -_tmp360 - _tmp361 - _tmp362;
  const Scalar _tmp364 = _tmp120 * sqrt_info(6, 4);
  const Scalar _tmp365 = _tmp84 * sqrt_info(6, 3);
  const Scalar _tmp366 = _tmp127 * sqrt_info(6, 5);
  const Scalar _tmp367 = -_tmp332 * dt - _tmp364 - _tmp365 - _tmp366;
  const Scalar _tmp368 = _tmp120 * sqrt_info(7, 4);
  const Scalar _tmp369 = _tmp84 * sqrt_info(7, 3);
  const Scalar _tmp370 = _tmp127 * sqrt_info(7, 5);
  const Scalar _tmp371 = -_tmp333 * dt - _tmp334 * dt - _tmp368 - _tmp369 - _tmp370;
  const Scalar _tmp372 = _tmp120 * sqrt_info(8, 4);
  const Scalar _tmp373 = _tmp84 * sqrt_info(8, 3);
  const Scalar _tmp374 = _tmp127 * sqrt_info(8, 5);
  const Scalar _tmp375 = -_tmp336 * dt - _tmp337 * dt - _tmp338 * dt - _tmp372 - _tmp373 - _tmp374;
  const Scalar _tmp376 = _tmp103 * sqrt_info(3, 3);
  const Scalar _tmp377 = _tmp103 * sqrt_info(4, 3);
  const Scalar _tmp378 = _tmp115 * sqrt_info(4, 4);
  const Scalar _tmp379 = -_tmp377 - _tmp378;
  const Scalar _tmp380 = _tmp126 * sqrt_info(5, 5);
  const Scalar _tmp381 = _tmp103 * sqrt_info(5, 3);
  const Scalar _tmp382 = _tmp115 * sqrt_info(5, 4);
  const Scalar _tmp383 = -_tmp380 - _tmp381 - _tmp382;
  const Scalar _tmp384 = _tmp126 * sqrt_info(6, 5);
  const Scalar _tmp385 = _tmp103 * sqrt_info(6, 3);
  const Scalar _tmp386 = _tmp115 * sqrt_info(6, 4);
  const Scalar _tmp387 = -_tmp340 * dt - _tmp384 - _tmp385 - _tmp386;
  const Scalar _tmp388 = _tmp126 * sqrt_info(7, 5);
  const Scalar _tmp389 = _tmp103 * sqrt_info(7, 3);
  const Scalar _tmp390 = _tmp115 * sqrt_info(7, 4);
  const Scalar _tmp391 = -_tmp341 * dt - _tmp342 * dt - _tmp388 - _tmp389 - _tmp390;
  const Scalar _tmp392 = _tmp126 * sqrt_info(8, 5);
  const Scalar _tmp393 = _tmp103 * sqrt_info(8, 3);
  const Scalar _tmp394 = _tmp115 * sqrt_info(8, 4);
  const Scalar _tmp395 = -_tmp344 * dt - _tmp345 * dt - _tmp346 * dt - _tmp392 - _tmp393 - _tmp394;
  const Scalar _tmp396 = _tmp96 * sqrt_info(3, 3);
  const Scalar _tmp397 = _tmp118 * sqrt_info(4, 4);
  const Scalar _tmp398 = _tmp96 * sqrt_info(4, 3);
  const Scalar _tmp399 = -_tmp397 - _tmp398;
  const Scalar _tmp400 = _tmp118 * sqrt_info(5, 4);
  const Scalar _tmp401 = _tmp124 * sqrt_info(5, 5);
  const Scalar _tmp402 = _tmp96 * sqrt_info(5, 3);
  const Scalar _tmp403 = -_tmp400 - _tmp401 - _tmp402;
  const Scalar _tmp404 = _tmp118 * sqrt_info(6, 4);
  const Scalar _tmp405 = _tmp124 * sqrt_info(6, 5);
  const Scalar _tmp406 = _tmp96 * sqrt_info(6, 3);
  const Scalar _tmp407 = -_tmp348 * dt - _tmp404 - _tmp405 - _tmp406;
  const Scalar _tmp408 = _tmp118 * sqrt_info(7, 4);
  const Scalar _tmp409 = _tmp124 * sqrt_info(7, 5);
  const Scalar _tmp410 = _tmp96 * sqrt_info(7, 3);
  const Scalar _tmp411 = -_tmp349 * dt - _tmp350 * dt - _tmp408 - _tmp409 - _tmp410;
  const Scalar _tmp412 = _tmp118 * sqrt_info(8, 4);
  const Scalar _tmp413 = _tmp124 * sqrt_info(8, 5);
  const Scalar _tmp414 = _tmp96 * sqrt_info(8, 3);
  const Scalar _tmp415 = -_tmp352 * dt - _tmp353 * dt - _tmp354 * dt - _tmp412 - _tmp413 - _tmp414;
  const Scalar _tmp416 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp417 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp418 = (Scalar(1) / Scalar(2)) * _tmp41;
  const Scalar _tmp419 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp420 = -_tmp416 - _tmp417 - _tmp418 + _tmp419;
  const Scalar _tmp421 = _tmp182 * _tmp420;
  const Scalar _tmp422 = _tmp186 * _tmp421;
  const Scalar _tmp423 = _tmp181 * _tmp421;
  const Scalar _tmp424 = -Scalar(1) / Scalar(2) * _tmp49 - Scalar(1) / Scalar(2) * _tmp50 -
                         Scalar(1) / Scalar(2) * _tmp51 + (Scalar(1) / Scalar(2)) * _tmp53;
  const Scalar _tmp425 = _tmp177 * _tmp424;
  const Scalar _tmp426 = _tmp188 * _tmp422 - _tmp423 * sqrt_info(0, 0) + _tmp425 * sqrt_info(0, 0);
  const Scalar _tmp427 = (Scalar(1) / Scalar(2)) * _tmp70;
  const Scalar _tmp428 = (Scalar(1) / Scalar(2)) * _tmp71;
  const Scalar _tmp429 = (Scalar(1) / Scalar(2)) * _tmp72;
  const Scalar _tmp430 = (Scalar(1) / Scalar(2)) * _tmp73;
  const Scalar _tmp431 = _tmp427 + _tmp428 - _tmp429 + _tmp430;
  const Scalar _tmp432 = _tmp177 * _tmp431;
  const Scalar _tmp433 = _tmp190 * _tmp422 - _tmp192 * _tmp421 - _tmp194 * _tmp421 +
                         _tmp195 * _tmp422 + _tmp425 * sqrt_info(1, 0) + _tmp432 * sqrt_info(1, 1);
  const Scalar _tmp434 = _tmp422 * _tmp67;
  const Scalar _tmp435 = _tmp422 * _tmp48;
  const Scalar _tmp436 = (Scalar(1) / Scalar(2)) * _tmp63;
  const Scalar _tmp437 = (Scalar(1) / Scalar(2)) * _tmp64;
  const Scalar _tmp438 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp439 = (Scalar(1) / Scalar(2)) * _tmp66;
  const Scalar _tmp440 = -_tmp436 + _tmp437 - _tmp438 - _tmp439;
  const Scalar _tmp441 = _tmp200 * _tmp420;
  const Scalar _tmp442 = _tmp441 * _tmp74;
  const Scalar _tmp443 = _tmp193 * _tmp421;
  const Scalar _tmp444 = _tmp199 * _tmp440 + _tmp204 * _tmp422 + _tmp272 * _tmp424 -
                         _tmp423 * sqrt_info(2, 0) + _tmp432 * sqrt_info(2, 1) +
                         _tmp434 * sqrt_info(2, 1) + _tmp435 * sqrt_info(2, 0) -
                         _tmp442 * sqrt_info(2, 2) - _tmp443 * sqrt_info(2, 1);
  const Scalar _tmp445 = _tmp177 * _tmp440;
  const Scalar _tmp446 = _tmp208 * _tmp422 - _tmp208 * _tmp441 + _tmp209 * _tmp422 -
                         _tmp209 * _tmp441 - _tmp210 * _tmp421 + _tmp278 * _tmp431 +
                         _tmp425 * sqrt_info(3, 0) + _tmp434 * sqrt_info(3, 1) +
                         _tmp445 * sqrt_info(3, 2);
  const Scalar _tmp447 = _tmp219 * _tmp421;
  const Scalar _tmp448 =
      -_tmp213 * _tmp421 + _tmp425 * sqrt_info(4, 0) + _tmp432 * sqrt_info(4, 1) +
      _tmp434 * sqrt_info(4, 1) + _tmp435 * sqrt_info(4, 0) - _tmp442 * sqrt_info(4, 2) -
      _tmp443 * sqrt_info(4, 1) + _tmp445 * sqrt_info(4, 2) + _tmp447 * sqrt_info(4, 2);
  const Scalar _tmp449 = _tmp223 * _tmp422 - _tmp233 * _tmp421 + _tmp234 * _tmp421 +
                         _tmp291 * _tmp424 - _tmp423 * sqrt_info(5, 0) + _tmp432 * sqrt_info(5, 1) +
                         _tmp435 * sqrt_info(5, 0) - _tmp442 * sqrt_info(5, 2) +
                         _tmp445 * sqrt_info(5, 2);
  const Scalar _tmp450 = _tmp237 * _tmp422 - _tmp238 * _tmp421 + _tmp239 * _tmp422 -
                         _tmp423 * sqrt_info(6, 0) + _tmp425 * sqrt_info(6, 0) +
                         _tmp432 * sqrt_info(6, 1) + _tmp434 * sqrt_info(6, 1) -
                         _tmp442 * sqrt_info(6, 2) + _tmp445 * sqrt_info(6, 2);
  const Scalar _tmp451 = _tmp241 * _tmp440 - _tmp243 * _tmp420 + _tmp245 * _tmp422 -
                         _tmp423 * sqrt_info(7, 0) + _tmp425 * sqrt_info(7, 0) +
                         _tmp432 * sqrt_info(7, 1) + _tmp434 * sqrt_info(7, 1) -
                         _tmp442 * sqrt_info(7, 2) + _tmp447 * sqrt_info(7, 2);
  const Scalar _tmp452 = _tmp142 * _tmp422 - _tmp142 * _tmp441 + _tmp248 * _tmp422 -
                         _tmp248 * _tmp441 + _tmp425 * sqrt_info(8, 0) + _tmp432 * sqrt_info(8, 1) +
                         _tmp434 * sqrt_info(8, 1) - _tmp443 * sqrt_info(8, 1) +
                         _tmp445 * sqrt_info(8, 2);
  const Scalar _tmp453 = _tmp182 * _tmp440;
  const Scalar _tmp454 = _tmp186 * _tmp453;
  const Scalar _tmp455 = _tmp181 * _tmp453;
  const Scalar _tmp456 = -_tmp427 - _tmp428 + _tmp429 - _tmp430;
  const Scalar _tmp457 = _tmp177 * _tmp456;
  const Scalar _tmp458 = _tmp188 * _tmp454 - _tmp455 * sqrt_info(0, 0) + _tmp457 * sqrt_info(0, 0);
  const Scalar _tmp459 = _tmp190 * _tmp454 - _tmp192 * _tmp453 - _tmp194 * _tmp453 +
                         _tmp195 * _tmp454 + _tmp425 * sqrt_info(1, 1) + _tmp457 * sqrt_info(1, 0);
  const Scalar _tmp460 = _tmp180 * _tmp453;
  const Scalar _tmp461 = _tmp460 * _tmp74;
  const Scalar _tmp462 = _tmp454 * _tmp67;
  const Scalar _tmp463 = _tmp193 * _tmp453;
  const Scalar _tmp464 = _tmp176 * (_tmp416 + _tmp417 + _tmp418 - _tmp419);
  const Scalar _tmp465 = _tmp204 * _tmp454 + _tmp205 * _tmp454 + _tmp425 * sqrt_info(2, 1) -
                         _tmp455 * sqrt_info(2, 0) + _tmp457 * sqrt_info(2, 0) -
                         _tmp461 * sqrt_info(2, 2) + _tmp462 * sqrt_info(2, 1) -
                         _tmp463 * sqrt_info(2, 1) + _tmp464 * _tmp75;
  const Scalar _tmp466 = _tmp464 * _tmp55;
  const Scalar _tmp467 = -_tmp208 * _tmp460 - _tmp209 * _tmp460 - _tmp210 * _tmp453 +
                         _tmp211 * _tmp453 + _tmp277 * _tmp453 + _tmp278 * _tmp424 +
                         _tmp457 * sqrt_info(3, 0) + _tmp462 * sqrt_info(3, 1) +
                         _tmp466 * sqrt_info(3, 2);
  const Scalar _tmp468 = -_tmp213 * _tmp453 + _tmp220 * _tmp453 + _tmp221 * _tmp454 +
                         _tmp286 * _tmp454 + _tmp425 * sqrt_info(4, 1) + _tmp457 * sqrt_info(4, 0) -
                         _tmp461 * sqrt_info(4, 2) - _tmp463 * sqrt_info(4, 1) +
                         _tmp466 * sqrt_info(4, 2);
  const Scalar _tmp469 = _tmp223 * _tmp454 + _tmp234 * _tmp453 + _tmp235 * _tmp454 +
                         _tmp425 * sqrt_info(5, 1) - _tmp455 * sqrt_info(5, 0) +
                         _tmp457 * sqrt_info(5, 0) - _tmp461 * sqrt_info(5, 2) -
                         _tmp463 * sqrt_info(5, 1) + _tmp466 * sqrt_info(5, 2);
  const Scalar _tmp470 = _tmp237 * _tmp454 - _tmp238 * _tmp453 + _tmp239 * _tmp454 +
                         _tmp293 * _tmp424 - _tmp455 * sqrt_info(6, 0) + _tmp457 * sqrt_info(6, 0) -
                         _tmp461 * sqrt_info(6, 2) + _tmp462 * sqrt_info(6, 1) +
                         _tmp466 * sqrt_info(6, 2);
  const Scalar _tmp471 = -_tmp243 * _tmp440 + _tmp244 * _tmp453 + _tmp245 * _tmp454 +
                         _tmp425 * sqrt_info(7, 1) - _tmp455 * sqrt_info(7, 0) +
                         _tmp457 * sqrt_info(7, 0) - _tmp461 * sqrt_info(7, 2) +
                         _tmp462 * sqrt_info(7, 1) + _tmp466 * sqrt_info(7, 2);
  const Scalar _tmp472 = _tmp142 * _tmp454 - _tmp142 * _tmp460 + _tmp248 * _tmp454 -
                         _tmp248 * _tmp460 + _tmp425 * sqrt_info(8, 1) + _tmp457 * sqrt_info(8, 0) +
                         _tmp462 * sqrt_info(8, 1) - _tmp463 * sqrt_info(8, 1) +
                         _tmp466 * sqrt_info(8, 2);
  const Scalar _tmp473 = _tmp177 * (_tmp436 - _tmp437 + _tmp438 + _tmp439);
  const Scalar _tmp474 = _tmp182 * _tmp456;
  const Scalar _tmp475 = _tmp181 * _tmp474;
  const Scalar _tmp476 = _tmp186 * _tmp474;
  const Scalar _tmp477 = _tmp188 * _tmp476 + _tmp473 * sqrt_info(0, 0) - _tmp475 * sqrt_info(0, 0);
  const Scalar _tmp478 = _tmp177 * _tmp420;
  const Scalar _tmp479 = _tmp190 * _tmp476 - _tmp192 * _tmp474 - _tmp194 * _tmp474 +
                         _tmp195 * _tmp476 + _tmp473 * sqrt_info(1, 0) + _tmp478 * sqrt_info(1, 1);
  const Scalar _tmp480 = _tmp476 * _tmp67;
  const Scalar _tmp481 = _tmp200 * _tmp456;
  const Scalar _tmp482 = _tmp476 * _tmp48;
  const Scalar _tmp483 = _tmp193 * _tmp474;
  const Scalar _tmp484 = _tmp199 * _tmp424 + _tmp204 * _tmp476 - _tmp204 * _tmp481 +
                         _tmp473 * sqrt_info(2, 0) - _tmp475 * sqrt_info(2, 0) +
                         _tmp478 * sqrt_info(2, 1) + _tmp480 * sqrt_info(2, 1) +
                         _tmp482 * sqrt_info(2, 0) - _tmp483 * sqrt_info(2, 1);
  const Scalar _tmp485 = -_tmp208 * _tmp481 - _tmp209 * _tmp481 - _tmp210 * _tmp474 +
                         _tmp211 * _tmp474 + _tmp277 * _tmp474 + _tmp278 * _tmp420 +
                         _tmp425 * sqrt_info(3, 2) + _tmp473 * sqrt_info(3, 0) +
                         _tmp480 * sqrt_info(3, 1);
  const Scalar _tmp486 = _tmp481 * _tmp74;
  const Scalar _tmp487 = -_tmp213 * _tmp474 + _tmp220 * _tmp474 + _tmp286 * _tmp476 +
                         _tmp425 * sqrt_info(4, 2) + _tmp473 * sqrt_info(4, 0) +
                         _tmp478 * sqrt_info(4, 1) + _tmp482 * sqrt_info(4, 0) -
                         _tmp483 * sqrt_info(4, 1) - _tmp486 * sqrt_info(4, 2);
  const Scalar _tmp488 = _tmp223 * _tmp476 - _tmp233 * _tmp474 + _tmp234 * _tmp474 +
                         _tmp425 * sqrt_info(5, 2) + _tmp473 * sqrt_info(5, 0) -
                         _tmp475 * sqrt_info(5, 0) + _tmp478 * sqrt_info(5, 1) +
                         _tmp482 * sqrt_info(5, 0) - _tmp486 * sqrt_info(5, 2);
  const Scalar _tmp489 = _tmp237 * _tmp476 - _tmp237 * _tmp481 - _tmp238 * _tmp474 +
                         _tmp239 * _tmp476 + _tmp425 * sqrt_info(6, 2) + _tmp473 * sqrt_info(6, 0) -
                         _tmp475 * sqrt_info(6, 0) + _tmp478 * sqrt_info(6, 1) +
                         _tmp480 * sqrt_info(6, 1);
  const Scalar _tmp490 = _tmp241 * _tmp424 - _tmp243 * _tmp456 + _tmp244 * _tmp474 +
                         _tmp245 * _tmp476 + _tmp473 * sqrt_info(7, 0) - _tmp475 * sqrt_info(7, 0) +
                         _tmp478 * sqrt_info(7, 1) + _tmp480 * sqrt_info(7, 1) -
                         _tmp486 * sqrt_info(7, 2);
  const Scalar _tmp491 = _tmp142 * _tmp476 - _tmp142 * _tmp481 + _tmp248 * _tmp476 -
                         _tmp248 * _tmp481 + _tmp425 * sqrt_info(8, 2) + _tmp473 * sqrt_info(8, 0) +
                         _tmp478 * sqrt_info(8, 1) + _tmp480 * sqrt_info(8, 1) -
                         _tmp483 * sqrt_info(8, 1);
  const Scalar _tmp492 = _tmp333 + _tmp334;
  const Scalar _tmp493 = _tmp336 + _tmp337 + _tmp338;
  const Scalar _tmp494 = _tmp341 + _tmp342;
  const Scalar _tmp495 = _tmp344 + _tmp345 + _tmp346;
  const Scalar _tmp496 = _tmp349 + _tmp350;
  const Scalar _tmp497 = _tmp352 + _tmp353 + _tmp354;
  const Scalar _tmp498 = _tmp357 + _tmp358;
  const Scalar _tmp499 = _tmp360 + _tmp361 + _tmp362;
  const Scalar _tmp500 = _tmp364 + _tmp365 + _tmp366;
  const Scalar _tmp501 = _tmp368 + _tmp369 + _tmp370;
  const Scalar _tmp502 = _tmp372 + _tmp373 + _tmp374;
  const Scalar _tmp503 = _tmp377 + _tmp378;
  const Scalar _tmp504 = _tmp380 + _tmp381 + _tmp382;
  const Scalar _tmp505 = _tmp384 + _tmp385 + _tmp386;
  const Scalar _tmp506 = _tmp388 + _tmp389 + _tmp390;
  const Scalar _tmp507 = _tmp392 + _tmp393 + _tmp394;
  const Scalar _tmp508 = _tmp397 + _tmp398;
  const Scalar _tmp509 = _tmp400 + _tmp401 + _tmp402;
  const Scalar _tmp510 = _tmp404 + _tmp405 + _tmp406;
  const Scalar _tmp511 = _tmp408 + _tmp409 + _tmp410;
  const Scalar _tmp512 = _tmp412 + _tmp413 + _tmp414;
  const Scalar _tmp513 = Dv_D_accel_bias(0, 0) * sqrt_info(3, 3);
  const Scalar _tmp514 =
      -Dv_D_accel_bias(0, 0) * sqrt_info(4, 3) - Dv_D_accel_bias(1, 0) * sqrt_info(4, 4);
  const Scalar _tmp515 = -Dv_D_accel_bias(0, 0) * sqrt_info(5, 3) -
                         Dv_D_accel_bias(1, 0) * sqrt_info(5, 4) -
                         Dv_D_accel_bias(2, 0) * sqrt_info(5, 5);
  const Scalar _tmp516 =
      -Dp_D_accel_bias(0, 0) * sqrt_info(6, 6) - Dv_D_accel_bias(0, 0) * sqrt_info(6, 3) -
      Dv_D_accel_bias(1, 0) * sqrt_info(6, 4) - Dv_D_accel_bias(2, 0) * sqrt_info(6, 5);
  const Scalar _tmp517 =
      -Dp_D_accel_bias(0, 0) * sqrt_info(7, 6) - Dp_D_accel_bias(1, 0) * sqrt_info(7, 7) -
      Dv_D_accel_bias(0, 0) * sqrt_info(7, 3) - Dv_D_accel_bias(1, 0) * sqrt_info(7, 4) -
      Dv_D_accel_bias(2, 0) * sqrt_info(7, 5);
  const Scalar _tmp518 =
      -Dp_D_accel_bias(0, 0) * sqrt_info(8, 6) - Dp_D_accel_bias(1, 0) * sqrt_info(8, 7) -
      Dp_D_accel_bias(2, 0) * sqrt_info(8, 8) - Dv_D_accel_bias(0, 0) * sqrt_info(8, 3) -
      Dv_D_accel_bias(1, 0) * sqrt_info(8, 4) - Dv_D_accel_bias(2, 0) * sqrt_info(8, 5);
  const Scalar _tmp519 = Dv_D_accel_bias(0, 1) * sqrt_info(3, 3);
  const Scalar _tmp520 =
      -Dv_D_accel_bias(0, 1) * sqrt_info(4, 3) - Dv_D_accel_bias(1, 1) * sqrt_info(4, 4);
  const Scalar _tmp521 = -Dv_D_accel_bias(0, 1) * sqrt_info(5, 3) -
                         Dv_D_accel_bias(1, 1) * sqrt_info(5, 4) -
                         Dv_D_accel_bias(2, 1) * sqrt_info(5, 5);
  const Scalar _tmp522 =
      -Dp_D_accel_bias(0, 1) * sqrt_info(6, 6) - Dv_D_accel_bias(0, 1) * sqrt_info(6, 3) -
      Dv_D_accel_bias(1, 1) * sqrt_info(6, 4) - Dv_D_accel_bias(2, 1) * sqrt_info(6, 5);
  const Scalar _tmp523 =
      -Dp_D_accel_bias(0, 1) * sqrt_info(7, 6) - Dp_D_accel_bias(1, 1) * sqrt_info(7, 7) -
      Dv_D_accel_bias(0, 1) * sqrt_info(7, 3) - Dv_D_accel_bias(1, 1) * sqrt_info(7, 4) -
      Dv_D_accel_bias(2, 1) * sqrt_info(7, 5);
  const Scalar _tmp524 =
      -Dp_D_accel_bias(0, 1) * sqrt_info(8, 6) - Dp_D_accel_bias(1, 1) * sqrt_info(8, 7) -
      Dp_D_accel_bias(2, 1) * sqrt_info(8, 8) - Dv_D_accel_bias(0, 1) * sqrt_info(8, 3) -
      Dv_D_accel_bias(1, 1) * sqrt_info(8, 4) - Dv_D_accel_bias(2, 1) * sqrt_info(8, 5);
  const Scalar _tmp525 = Dv_D_accel_bias(0, 2) * sqrt_info(3, 3);
  const Scalar _tmp526 =
      -Dv_D_accel_bias(0, 2) * sqrt_info(4, 3) - Dv_D_accel_bias(1, 2) * sqrt_info(4, 4);
  const Scalar _tmp527 = -Dv_D_accel_bias(0, 2) * sqrt_info(5, 3) -
                         Dv_D_accel_bias(1, 2) * sqrt_info(5, 4) -
                         Dv_D_accel_bias(2, 2) * sqrt_info(5, 5);
  const Scalar _tmp528 =
      -Dp_D_accel_bias(0, 2) * sqrt_info(6, 6) - Dv_D_accel_bias(0, 2) * sqrt_info(6, 3) -
      Dv_D_accel_bias(1, 2) * sqrt_info(6, 4) - Dv_D_accel_bias(2, 2) * sqrt_info(6, 5);
  const Scalar _tmp529 =
      -Dp_D_accel_bias(0, 2) * sqrt_info(7, 6) - Dp_D_accel_bias(1, 2) * sqrt_info(7, 7) -
      Dv_D_accel_bias(0, 2) * sqrt_info(7, 3) - Dv_D_accel_bias(1, 2) * sqrt_info(7, 4) -
      Dv_D_accel_bias(2, 2) * sqrt_info(7, 5);
  const Scalar _tmp530 =
      -Dp_D_accel_bias(0, 2) * sqrt_info(8, 6) - Dp_D_accel_bias(1, 2) * sqrt_info(8, 7) -
      Dp_D_accel_bias(2, 2) * sqrt_info(8, 8) - Dv_D_accel_bias(0, 2) * sqrt_info(8, 3) -
      Dv_D_accel_bias(1, 2) * sqrt_info(8, 4) - Dv_D_accel_bias(2, 2) * sqrt_info(8, 5);
  const Scalar _tmp531 = (Scalar(1) / Scalar(2)) * _tmp11 / (_tmp6 * std::sqrt(_tmp6));
  const Scalar _tmp532 = _tmp3 * _tmp531;
  const Scalar _tmp533 = 2 * _tmp5;
  const Scalar _tmp534 = 2 * _tmp4;
  const Scalar _tmp535 = 2 * _tmp3;
  const Scalar _tmp536 = DR_D_gyro_bias(0, 0) * _tmp534 + DR_D_gyro_bias(1, 0) * _tmp533 +
                         DR_D_gyro_bias(2, 0) * _tmp535;
  const Scalar _tmp537 = _DR[1] * _tmp536;
  const Scalar _tmp538 = (Scalar(1) / Scalar(4)) * _tmp536;
  const Scalar _tmp539 = Scalar(1.0) / (_tmp6);
  const Scalar _tmp540 = _tmp538 * _tmp539;
  const Scalar _tmp541 = _tmp22 * _tmp540;
  const Scalar _tmp542 = _tmp4 * _tmp540;
  const Scalar _tmp543 = _tmp4 * _tmp531;
  const Scalar _tmp544 = _DR[3] * _tmp536;
  const Scalar _tmp545 = _tmp5 * _tmp531;
  const Scalar _tmp546 = _DR[2] * _tmp536;
  const Scalar _tmp547 = _tmp18 * _tmp3;
  const Scalar _tmp548 = DR_D_gyro_bias(2, 0) * _tmp12;
  const Scalar _tmp549 = DR_D_gyro_bias(0, 0) * _tmp14 - DR_D_gyro_bias(1, 0) * _tmp13 +
                         _DR[1] * _tmp548 - _tmp19 * _tmp538 + _tmp25 * _tmp542 - _tmp5 * _tmp541 -
                         _tmp532 * _tmp537 + _tmp540 * _tmp547 - _tmp543 * _tmp544 +
                         _tmp545 * _tmp546;
  const Scalar _tmp550 = (Scalar(1) / Scalar(4)) * _tmp14;
  const Scalar _tmp551 = _tmp18 * _tmp5;
  const Scalar _tmp552 = _DR[0] * _tmp536;
  const Scalar _tmp553 = -DR_D_gyro_bias(0, 0) * _tmp19 - DR_D_gyro_bias(1, 0) * _tmp15 -
                         _DR[2] * _tmp548 - _tmp10 * _tmp542 - _tmp3 * _tmp541 + _tmp532 * _tmp546 -
                         _tmp536 * _tmp550 + _tmp537 * _tmp545 - _tmp540 * _tmp551 +
                         _tmp543 * _tmp552;
  const Scalar _tmp554 = _tmp25 * _tmp3;
  const Scalar _tmp555 = _tmp5 * _tmp540;
  const Scalar _tmp556 = -DR_D_gyro_bias(0, 0) * _tmp15 + DR_D_gyro_bias(1, 0) * _tmp19 +
                         _DR[3] * _tmp548 + _tmp10 * _tmp555 - _tmp13 * _tmp538 - _tmp18 * _tmp542 -
                         _tmp532 * _tmp544 + _tmp537 * _tmp543 + _tmp540 * _tmp554 -
                         _tmp545 * _tmp552;
  const Scalar _tmp557 = _tmp10 * _tmp3;
  const Scalar _tmp558 = DR_D_gyro_bias(0, 0) * _tmp13 + DR_D_gyro_bias(1, 0) * _tmp14 -
                         _DR[0] * _tmp548 - _tmp15 * _tmp538 + _tmp22 * _tmp542 + _tmp25 * _tmp555 +
                         _tmp532 * _tmp552 - _tmp540 * _tmp557 - _tmp543 * _tmp546 -
                         _tmp544 * _tmp545;
  const Scalar _tmp559 =
      -_pose_i[0] * _tmp553 - _pose_i[1] * _tmp556 + _pose_i[2] * _tmp558 - _pose_i[3] * _tmp549;
  const Scalar _tmp560 =
      _pose_i[0] * _tmp556 - _pose_i[1] * _tmp553 - _pose_i[2] * _tmp549 - _pose_i[3] * _tmp558;
  const Scalar _tmp561 =
      -_pose_i[0] * _tmp549 - _pose_i[1] * _tmp558 - _pose_i[2] * _tmp556 + _pose_i[3] * _tmp553;
  const Scalar _tmp562 =
      -_pose_i[0] * _tmp558 + _pose_i[1] * _tmp549 - _pose_i[2] * _tmp553 - _pose_i[3] * _tmp556;
  const Scalar _tmp563 = _tmp177 * (_pose_j[0] * _tmp561 - _pose_j[1] * _tmp562 +
                                    _pose_j[2] * _tmp560 + _pose_j[3] * _tmp559);
  const Scalar _tmp564 = (((_tmp52 + _tmp56) > 0) - ((_tmp52 + _tmp56) < 0));
  const Scalar _tmp565 = _tmp564 * (_pose_j[0] * _tmp559 + _pose_j[1] * _tmp560 +
                                    _pose_j[2] * _tmp562 - _pose_j[3] * _tmp561);
  const Scalar _tmp566 = _tmp180 * _tmp565;
  const Scalar _tmp567 = _tmp48 * _tmp566;
  const Scalar _tmp568 = _tmp186 * _tmp565;
  const Scalar _tmp569 = _tmp188 * _tmp568 + _tmp563 * sqrt_info(0, 0) - _tmp567 * sqrt_info(0, 0);
  const Scalar _tmp570 = _tmp177 * (_pose_j[0] * _tmp562 + _pose_j[1] * _tmp561 -
                                    _pose_j[2] * _tmp559 + _pose_j[3] * _tmp560);
  const Scalar _tmp571 = _tmp190 * _tmp568 - _tmp194 * _tmp565 + _tmp195 * _tmp568 +
                         _tmp563 * sqrt_info(1, 0) - _tmp567 * sqrt_info(1, 0) +
                         _tmp570 * sqrt_info(1, 1);
  const Scalar _tmp572 =
      -_pose_j[0] * _tmp560 + _pose_j[1] * _tmp559 + _pose_j[2] * _tmp561 + _pose_j[3] * _tmp562;
  const Scalar _tmp573 = _tmp193 * _tmp565;
  const Scalar _tmp574 = _tmp568 * _tmp67;
  const Scalar _tmp575 = _tmp566 * _tmp74;
  const Scalar _tmp576 = _tmp199 * _tmp572 + _tmp204 * _tmp568 + _tmp205 * _tmp568 +
                         _tmp563 * sqrt_info(2, 0) - _tmp567 * sqrt_info(2, 0) +
                         _tmp570 * sqrt_info(2, 1) - _tmp573 * sqrt_info(2, 1) +
                         _tmp574 * sqrt_info(2, 1) - _tmp575 * sqrt_info(2, 2);
  const Scalar _tmp577 = _tmp177 * _tmp572;
  const Scalar _tmp578 = -Dv_D_gyro_bias(0, 0) * sqrt_info(3, 3) - _tmp208 * _tmp566 +
                         _tmp208 * _tmp568 - _tmp209 * _tmp566 - _tmp210 * _tmp565 +
                         _tmp211 * _tmp565 + _tmp563 * sqrt_info(3, 0) + _tmp570 * sqrt_info(3, 1) +
                         _tmp574 * sqrt_info(3, 1) + _tmp577 * sqrt_info(3, 2);
  const Scalar _tmp579 =
      -Dv_D_gyro_bias(0, 0) * sqrt_info(4, 3) - Dv_D_gyro_bias(1, 0) * sqrt_info(4, 4) +
      _tmp220 * _tmp565 + _tmp221 * _tmp568 + _tmp286 * _tmp568 + _tmp563 * sqrt_info(4, 0) -
      _tmp567 * sqrt_info(4, 0) + _tmp570 * sqrt_info(4, 1) - _tmp573 * sqrt_info(4, 1) -
      _tmp575 * sqrt_info(4, 2) + _tmp577 * sqrt_info(4, 2);
  const Scalar _tmp580 =
      -Dv_D_gyro_bias(0, 0) * sqrt_info(5, 3) - Dv_D_gyro_bias(1, 0) * sqrt_info(5, 4) -
      Dv_D_gyro_bias(2, 0) * sqrt_info(5, 5) + _tmp223 * _tmp568 + _tmp234 * _tmp565 +
      _tmp235 * _tmp568 + _tmp563 * sqrt_info(5, 0) - _tmp567 * sqrt_info(5, 0) +
      _tmp570 * sqrt_info(5, 1) - _tmp573 * sqrt_info(5, 1) - _tmp575 * sqrt_info(5, 2) +
      _tmp577 * sqrt_info(5, 2);
  const Scalar _tmp581 =
      -Dp_D_gyro_bias(0, 0) * sqrt_info(6, 6) - Dv_D_gyro_bias(0, 0) * sqrt_info(6, 3) -
      Dv_D_gyro_bias(1, 0) * sqrt_info(6, 4) - Dv_D_gyro_bias(2, 0) * sqrt_info(6, 5) +
      _tmp237 * _tmp568 - _tmp238 * _tmp565 + _tmp239 * _tmp568 + _tmp563 * sqrt_info(6, 0) -
      _tmp567 * sqrt_info(6, 0) + _tmp570 * sqrt_info(6, 1) + _tmp574 * sqrt_info(6, 1) -
      _tmp575 * sqrt_info(6, 2) + _tmp577 * sqrt_info(6, 2);
  const Scalar _tmp582 =
      -Dp_D_gyro_bias(0, 0) * sqrt_info(7, 6) - Dp_D_gyro_bias(1, 0) * sqrt_info(7, 7) -
      Dv_D_gyro_bias(0, 0) * sqrt_info(7, 3) - Dv_D_gyro_bias(1, 0) * sqrt_info(7, 4) -
      Dv_D_gyro_bias(2, 0) * sqrt_info(7, 5) + _tmp241 * _tmp572 - _tmp242 * _tmp565 +
      _tmp244 * _tmp565 + _tmp245 * _tmp568 + _tmp563 * sqrt_info(7, 0) -
      _tmp567 * sqrt_info(7, 0) + _tmp570 * sqrt_info(7, 1) + _tmp574 * sqrt_info(7, 1) -
      _tmp575 * sqrt_info(7, 2);
  const Scalar _tmp583 =
      -Dp_D_gyro_bias(0, 0) * sqrt_info(8, 6) - Dp_D_gyro_bias(1, 0) * sqrt_info(8, 7) -
      Dp_D_gyro_bias(2, 0) * sqrt_info(8, 8) - Dv_D_gyro_bias(0, 0) * sqrt_info(8, 3) -
      Dv_D_gyro_bias(1, 0) * sqrt_info(8, 4) - Dv_D_gyro_bias(2, 0) * sqrt_info(8, 5) -
      _tmp142 * _tmp566 + _tmp142 * _tmp568 + _tmp248 * _tmp568 + _tmp563 * sqrt_info(8, 0) +
      _tmp570 * sqrt_info(8, 1) - _tmp573 * sqrt_info(8, 1) + _tmp574 * sqrt_info(8, 1) -
      _tmp575 * sqrt_info(8, 2) + _tmp577 * sqrt_info(8, 2);
  const Scalar _tmp584 = DR_D_gyro_bias(0, 1) * _tmp534 + DR_D_gyro_bias(1, 1) * _tmp533 +
                         DR_D_gyro_bias(2, 1) * _tmp535;
  const Scalar _tmp585 = _DR[1] * _tmp584;
  const Scalar _tmp586 = (Scalar(1) / Scalar(4)) * _tmp584;
  const Scalar _tmp587 = _tmp539 * _tmp586;
  const Scalar _tmp588 = _tmp22 * _tmp587;
  const Scalar _tmp589 = _DR[2] * _tmp584;
  const Scalar _tmp590 = _DR[0] * _tmp584;
  const Scalar _tmp591 = _tmp4 * _tmp587;
  const Scalar _tmp592 = DR_D_gyro_bias(2, 1) * _tmp12;
  const Scalar _tmp593 = -DR_D_gyro_bias(0, 1) * _tmp19 - DR_D_gyro_bias(1, 1) * _tmp15 -
                         _DR[2] * _tmp592 - _tmp10 * _tmp591 - _tmp14 * _tmp586 - _tmp3 * _tmp588 +
                         _tmp532 * _tmp589 + _tmp543 * _tmp590 + _tmp545 * _tmp585 -
                         _tmp551 * _tmp587;
  const Scalar _tmp594 = _DR[3] * _tmp584;
  const Scalar _tmp595 = DR_D_gyro_bias(0, 1) * _tmp14 - DR_D_gyro_bias(1, 1) * _tmp13 +
                         _DR[1] * _tmp592 - _tmp19 * _tmp586 + _tmp25 * _tmp591 - _tmp5 * _tmp588 -
                         _tmp532 * _tmp585 - _tmp543 * _tmp594 + _tmp545 * _tmp589 +
                         _tmp547 * _tmp587;
  const Scalar _tmp596 = _tmp25 * _tmp5;
  const Scalar _tmp597 = _tmp10 * _tmp587;
  const Scalar _tmp598 = DR_D_gyro_bias(0, 1) * _tmp13 + DR_D_gyro_bias(1, 1) * _tmp14 -
                         _DR[0] * _tmp592 - _tmp15 * _tmp586 + _tmp22 * _tmp591 - _tmp3 * _tmp597 +
                         _tmp532 * _tmp590 - _tmp543 * _tmp589 - _tmp545 * _tmp594 +
                         _tmp587 * _tmp596;
  const Scalar _tmp599 = -DR_D_gyro_bias(0, 1) * _tmp15 + DR_D_gyro_bias(1, 1) * _tmp19 +
                         _DR[3] * _tmp592 - _tmp13 * _tmp586 - _tmp18 * _tmp591 + _tmp5 * _tmp597 -
                         _tmp532 * _tmp594 + _tmp543 * _tmp585 - _tmp545 * _tmp590 +
                         _tmp554 * _tmp587;
  const Scalar _tmp600 =
      -_pose_i[0] * _tmp598 + _pose_i[1] * _tmp595 - _pose_i[2] * _tmp593 - _pose_i[3] * _tmp599;
  const Scalar _tmp601 =
      _pose_i[0] * _tmp599 - _pose_i[1] * _tmp593 - _pose_i[2] * _tmp595 - _pose_i[3] * _tmp598;
  const Scalar _tmp602 =
      -_pose_i[0] * _tmp593 - _pose_i[1] * _tmp599 + _pose_i[2] * _tmp598 - _pose_i[3] * _tmp595;
  const Scalar _tmp603 =
      -_pose_i[0] * _tmp595 - _pose_i[1] * _tmp598 - _pose_i[2] * _tmp599 + _pose_i[3] * _tmp593;
  const Scalar _tmp604 = _tmp564 * (_pose_j[0] * _tmp602 + _pose_j[1] * _tmp601 +
                                    _pose_j[2] * _tmp600 - _pose_j[3] * _tmp603);
  const Scalar _tmp605 = _tmp181 * _tmp604;
  const Scalar _tmp606 = _tmp177 * (_pose_j[0] * _tmp603 - _pose_j[1] * _tmp600 +
                                    _pose_j[2] * _tmp601 + _pose_j[3] * _tmp602);
  const Scalar _tmp607 = _tmp186 * _tmp604;
  const Scalar _tmp608 = _tmp188 * _tmp607 - _tmp605 * sqrt_info(0, 0) + _tmp606 * sqrt_info(0, 0);
  const Scalar _tmp609 = _tmp177 * (_pose_j[0] * _tmp600 + _pose_j[1] * _tmp603 -
                                    _pose_j[2] * _tmp602 + _pose_j[3] * _tmp601);
  const Scalar _tmp610 = _tmp190 * _tmp607 - _tmp194 * _tmp604 + _tmp195 * _tmp607 -
                         _tmp605 * sqrt_info(1, 0) + _tmp606 * sqrt_info(1, 0) +
                         _tmp609 * sqrt_info(1, 1);
  const Scalar _tmp611 =
      -_pose_j[0] * _tmp601 + _pose_j[1] * _tmp602 + _pose_j[2] * _tmp603 + _pose_j[3] * _tmp600;
  const Scalar _tmp612 = _tmp607 * _tmp67;
  const Scalar _tmp613 = _tmp180 * _tmp604;
  const Scalar _tmp614 = _tmp193 * _tmp604;
  const Scalar _tmp615 = _tmp199 * _tmp611 + _tmp204 * _tmp607 - _tmp204 * _tmp613 +
                         _tmp205 * _tmp607 - _tmp605 * sqrt_info(2, 0) + _tmp606 * sqrt_info(2, 0) +
                         _tmp609 * sqrt_info(2, 1) + _tmp612 * sqrt_info(2, 1) -
                         _tmp614 * sqrt_info(2, 1);
  const Scalar _tmp616 = _tmp177 * _tmp611;
  const Scalar _tmp617 = -Dv_D_gyro_bias(0, 1) * sqrt_info(3, 3) + _tmp208 * _tmp607 -
                         _tmp208 * _tmp613 - _tmp209 * _tmp613 - _tmp210 * _tmp604 +
                         _tmp211 * _tmp604 + _tmp606 * sqrt_info(3, 0) + _tmp609 * sqrt_info(3, 1) +
                         _tmp612 * sqrt_info(3, 1) + _tmp616 * sqrt_info(3, 2);
  const Scalar _tmp618 = _tmp613 * _tmp74;
  const Scalar _tmp619 =
      -Dv_D_gyro_bias(0, 1) * sqrt_info(4, 3) - Dv_D_gyro_bias(1, 1) * sqrt_info(4, 4) -
      _tmp213 * _tmp604 + _tmp220 * _tmp604 + _tmp221 * _tmp607 + _tmp286 * _tmp607 +
      _tmp606 * sqrt_info(4, 0) + _tmp609 * sqrt_info(4, 1) - _tmp614 * sqrt_info(4, 1) +
      _tmp616 * sqrt_info(4, 2) - _tmp618 * sqrt_info(4, 2);
  const Scalar _tmp620 =
      -Dv_D_gyro_bias(0, 1) * sqrt_info(5, 3) - Dv_D_gyro_bias(1, 1) * sqrt_info(5, 4) -
      Dv_D_gyro_bias(2, 1) * sqrt_info(5, 5) + _tmp223 * _tmp607 - _tmp233 * _tmp604 +
      _tmp234 * _tmp604 + _tmp235 * _tmp607 - _tmp605 * sqrt_info(5, 0) +
      _tmp606 * sqrt_info(5, 0) + _tmp609 * sqrt_info(5, 1) + _tmp616 * sqrt_info(5, 2) -
      _tmp618 * sqrt_info(5, 2);
  const Scalar _tmp621 =
      -Dp_D_gyro_bias(0, 1) * sqrt_info(6, 6) - Dv_D_gyro_bias(0, 1) * sqrt_info(6, 3) -
      Dv_D_gyro_bias(1, 1) * sqrt_info(6, 4) - Dv_D_gyro_bias(2, 1) * sqrt_info(6, 5) +
      _tmp237 * _tmp607 - _tmp237 * _tmp613 - _tmp238 * _tmp604 + _tmp239 * _tmp607 -
      _tmp605 * sqrt_info(6, 0) + _tmp606 * sqrt_info(6, 0) + _tmp609 * sqrt_info(6, 1) +
      _tmp612 * sqrt_info(6, 1) + _tmp616 * sqrt_info(6, 2);
  const Scalar _tmp622 =
      -Dp_D_gyro_bias(0, 1) * sqrt_info(7, 6) - Dp_D_gyro_bias(1, 1) * sqrt_info(7, 7) -
      Dv_D_gyro_bias(0, 1) * sqrt_info(7, 3) - Dv_D_gyro_bias(1, 1) * sqrt_info(7, 4) -
      Dv_D_gyro_bias(2, 1) * sqrt_info(7, 5) + _tmp241 * _tmp611 - _tmp242 * _tmp604 +
      _tmp244 * _tmp604 + _tmp245 * _tmp607 - _tmp605 * sqrt_info(7, 0) +
      _tmp606 * sqrt_info(7, 0) + _tmp609 * sqrt_info(7, 1) + _tmp612 * sqrt_info(7, 1) -
      _tmp618 * sqrt_info(7, 2);
  const Scalar _tmp623 =
      -Dp_D_gyro_bias(0, 1) * sqrt_info(8, 6) - Dp_D_gyro_bias(1, 1) * sqrt_info(8, 7) -
      Dp_D_gyro_bias(2, 1) * sqrt_info(8, 8) - Dv_D_gyro_bias(0, 1) * sqrt_info(8, 3) -
      Dv_D_gyro_bias(1, 1) * sqrt_info(8, 4) - Dv_D_gyro_bias(2, 1) * sqrt_info(8, 5) +
      _tmp142 * _tmp607 - _tmp142 * _tmp613 + _tmp248 * _tmp607 - _tmp248 * _tmp613 +
      _tmp606 * sqrt_info(8, 0) + _tmp609 * sqrt_info(8, 1) + _tmp612 * sqrt_info(8, 1) -
      _tmp614 * sqrt_info(8, 1) + _tmp616 * sqrt_info(8, 2);
  const Scalar _tmp624 = DR_D_gyro_bias(0, 2) * _tmp534 + DR_D_gyro_bias(1, 2) * _tmp533 +
                         DR_D_gyro_bias(2, 2) * _tmp535;
  const Scalar _tmp625 = (Scalar(1) / Scalar(4)) * _tmp624;
  const Scalar _tmp626 = _tmp539 * _tmp625;
  const Scalar _tmp627 = _tmp22 * _tmp626;
  const Scalar _tmp628 = _DR[1] * _tmp624;
  const Scalar _tmp629 = _DR[3] * _tmp624;
  const Scalar _tmp630 = _tmp4 * _tmp626;
  const Scalar _tmp631 = _DR[2] * _tmp624;
  const Scalar _tmp632 = _tmp531 * _tmp631;
  const Scalar _tmp633 = DR_D_gyro_bias(0, 2) * _tmp14 - DR_D_gyro_bias(1, 2) * _tmp13 +
                         DR_D_gyro_bias(2, 2) * _tmp15 - _tmp19 * _tmp625 + _tmp25 * _tmp630 -
                         _tmp5 * _tmp627 + _tmp5 * _tmp632 - _tmp532 * _tmp628 - _tmp543 * _tmp629 +
                         _tmp547 * _tmp626;
  const Scalar _tmp634 = _DR[0] * _tmp624;
  const Scalar _tmp635 = DR_D_gyro_bias(0, 2) * _tmp13 + DR_D_gyro_bias(1, 2) * _tmp14 -
                         DR_D_gyro_bias(2, 2) * _tmp19 - _tmp15 * _tmp625 + _tmp22 * _tmp630 -
                         _tmp4 * _tmp632 + _tmp532 * _tmp634 - _tmp545 * _tmp629 -
                         _tmp557 * _tmp626 + _tmp596 * _tmp626;
  const Scalar _tmp636 = -DR_D_gyro_bias(0, 2) * _tmp15 + DR_D_gyro_bias(1, 2) * _tmp19 +
                         DR_D_gyro_bias(2, 2) * _tmp14 + _tmp10 * _tmp5 * _tmp626 -
                         _tmp13 * _tmp625 - _tmp18 * _tmp630 - _tmp532 * _tmp629 +
                         _tmp543 * _tmp628 - _tmp545 * _tmp634 + _tmp554 * _tmp626;
  const Scalar _tmp637 = -DR_D_gyro_bias(0, 2) * _tmp19 - DR_D_gyro_bias(1, 2) * _tmp15 -
                         DR_D_gyro_bias(2, 2) * _tmp13 - _tmp10 * _tmp630 - _tmp3 * _tmp627 +
                         _tmp532 * _tmp631 + _tmp543 * _tmp634 + _tmp545 * _tmp628 -
                         _tmp550 * _tmp624 - _tmp551 * _tmp626;
  const Scalar _tmp638 =
      -_pose_i[0] * _tmp637 - _pose_i[1] * _tmp636 + _pose_i[2] * _tmp635 - _pose_i[3] * _tmp633;
  const Scalar _tmp639 =
      _pose_i[0] * _tmp636 - _pose_i[1] * _tmp637 - _pose_i[2] * _tmp633 - _pose_i[3] * _tmp635;
  const Scalar _tmp640 =
      -_pose_i[0] * _tmp635 + _pose_i[1] * _tmp633 - _pose_i[2] * _tmp637 - _pose_i[3] * _tmp636;
  const Scalar _tmp641 =
      -_pose_i[0] * _tmp633 - _pose_i[1] * _tmp635 - _pose_i[2] * _tmp636 + _pose_i[3] * _tmp637;
  const Scalar _tmp642 =
      _pose_j[0] * _tmp641 - _pose_j[1] * _tmp640 + _pose_j[2] * _tmp639 + _pose_j[3] * _tmp638;
  const Scalar _tmp643 = _tmp177 * _tmp642;
  const Scalar _tmp644 = _tmp564 * (_pose_j[0] * _tmp638 + _pose_j[1] * _tmp639 +
                                    _pose_j[2] * _tmp640 - _pose_j[3] * _tmp641);
  const Scalar _tmp645 = _tmp186 * _tmp644;
  const Scalar _tmp646 = _tmp181 * _tmp644;
  const Scalar _tmp647 = _tmp188 * _tmp645 + _tmp643 * sqrt_info(0, 0) - _tmp646 * sqrt_info(0, 0);
  const Scalar _tmp648 =
      _pose_j[0] * _tmp640 + _pose_j[1] * _tmp641 - _pose_j[2] * _tmp638 + _pose_j[3] * _tmp639;
  const Scalar _tmp649 = _tmp177 * _tmp648;
  const Scalar _tmp650 = _tmp190 * _tmp645 - _tmp192 * _tmp644 - _tmp194 * _tmp644 +
                         _tmp195 * _tmp645 + _tmp643 * sqrt_info(1, 0) + _tmp649 * sqrt_info(1, 1);
  const Scalar _tmp651 =
      -_pose_j[0] * _tmp639 + _pose_j[1] * _tmp638 + _pose_j[2] * _tmp641 + _pose_j[3] * _tmp640;
  const Scalar _tmp652 = _tmp180 * _tmp644;
  const Scalar _tmp653 = _tmp645 * _tmp67;
  const Scalar _tmp654 = _tmp193 * _tmp644;
  const Scalar _tmp655 = _tmp199 * _tmp651 + _tmp204 * _tmp645 - _tmp204 * _tmp652 +
                         _tmp205 * _tmp645 + _tmp272 * _tmp642 - _tmp646 * sqrt_info(2, 0) +
                         _tmp649 * sqrt_info(2, 1) + _tmp653 * sqrt_info(2, 1) -
                         _tmp654 * sqrt_info(2, 1);
  const Scalar _tmp656 = _tmp177 * _tmp651;
  const Scalar _tmp657 = -Dv_D_gyro_bias(0, 2) * sqrt_info(3, 3) + _tmp208 * _tmp645 -
                         _tmp208 * _tmp652 - _tmp209 * _tmp652 - _tmp210 * _tmp644 +
                         _tmp211 * _tmp644 + _tmp278 * _tmp648 + _tmp643 * sqrt_info(3, 0) +
                         _tmp653 * sqrt_info(3, 1) + _tmp656 * sqrt_info(3, 2);
  const Scalar _tmp658 = _tmp652 * _tmp74;
  const Scalar _tmp659 =
      -Dv_D_gyro_bias(0, 2) * sqrt_info(4, 3) - Dv_D_gyro_bias(1, 2) * sqrt_info(4, 4) -
      _tmp213 * _tmp644 + _tmp220 * _tmp644 + _tmp221 * _tmp645 + _tmp286 * _tmp645 +
      _tmp643 * sqrt_info(4, 0) + _tmp649 * sqrt_info(4, 1) - _tmp654 * sqrt_info(4, 1) +
      _tmp656 * sqrt_info(4, 2) - _tmp658 * sqrt_info(4, 2);
  const Scalar _tmp660 =
      -Dv_D_gyro_bias(0, 2) * sqrt_info(5, 3) - Dv_D_gyro_bias(1, 2) * sqrt_info(5, 4) -
      Dv_D_gyro_bias(2, 2) * sqrt_info(5, 5) + _tmp223 * _tmp645 + _tmp234 * _tmp644 +
      _tmp235 * _tmp645 + _tmp291 * _tmp642 - _tmp646 * sqrt_info(5, 0) +
      _tmp649 * sqrt_info(5, 1) - _tmp654 * sqrt_info(5, 1) + _tmp656 * sqrt_info(5, 2) -
      _tmp658 * sqrt_info(5, 2);
  const Scalar _tmp661 =
      -Dp_D_gyro_bias(0, 2) * sqrt_info(6, 6) - Dv_D_gyro_bias(0, 2) * sqrt_info(6, 3) -
      Dv_D_gyro_bias(1, 2) * sqrt_info(6, 4) - Dv_D_gyro_bias(2, 2) * sqrt_info(6, 5) +
      _tmp237 * _tmp645 - _tmp237 * _tmp652 + _tmp239 * _tmp645 + _tmp293 * _tmp648 +
      _tmp643 * sqrt_info(6, 0) - _tmp646 * sqrt_info(6, 0) + _tmp653 * sqrt_info(6, 1) -
      _tmp654 * sqrt_info(6, 1) + _tmp656 * sqrt_info(6, 2);
  const Scalar _tmp662 =
      -Dp_D_gyro_bias(0, 2) * sqrt_info(7, 6) - Dp_D_gyro_bias(1, 2) * sqrt_info(7, 7) -
      Dv_D_gyro_bias(0, 2) * sqrt_info(7, 3) - Dv_D_gyro_bias(1, 2) * sqrt_info(7, 4) -
      Dv_D_gyro_bias(2, 2) * sqrt_info(7, 5) + _tmp241 * _tmp651 - _tmp242 * _tmp644 +
      _tmp244 * _tmp644 + _tmp245 * _tmp645 + _tmp643 * sqrt_info(7, 0) -
      _tmp646 * sqrt_info(7, 0) + _tmp649 * sqrt_info(7, 1) + _tmp653 * sqrt_info(7, 1) -
      _tmp658 * sqrt_info(7, 2);
  const Scalar _tmp663 =
      -Dp_D_gyro_bias(0, 2) * sqrt_info(8, 6) - Dp_D_gyro_bias(1, 2) * sqrt_info(8, 7) -
      Dp_D_gyro_bias(2, 2) * sqrt_info(8, 8) - Dv_D_gyro_bias(0, 2) * sqrt_info(8, 3) -
      Dv_D_gyro_bias(1, 2) * sqrt_info(8, 4) - Dv_D_gyro_bias(2, 2) * sqrt_info(8, 5) +
      _tmp142 * _tmp645 - _tmp142 * _tmp652 + _tmp248 * _tmp645 - _tmp248 * _tmp652 +
      _tmp643 * sqrt_info(8, 0) + _tmp649 * sqrt_info(8, 1) + _tmp653 * sqrt_info(8, 1) -
      _tmp654 * sqrt_info(8, 1) + _tmp656 * sqrt_info(8, 2);
  const Scalar _tmp664 = -_tmp86 + _tmp87;
  const Scalar _tmp665 = _tmp664 * _tmp89;
  const Scalar _tmp666 = _gravity_direction[0] * _tmp85;
  const Scalar _tmp667 = _gravity_direction[2] * _tmp104;
  const Scalar _tmp668 = _tmp666 + _tmp667;
  const Scalar _tmp669 = _tmp103 * _tmp89;
  const Scalar _tmp670 =
      -std::pow(_gravity_direction[2], Scalar(2)) + std::pow(_gravity_direction[3], Scalar(2));
  const Scalar _tmp671 = _tmp670 + _tmp97 - _tmp98;
  const Scalar _tmp672 = _tmp671 * _tmp89;
  const Scalar _tmp673 = -_tmp665 * _tmp96 - _tmp668 * _tmp669 - _tmp672 * _tmp84;
  const Scalar _tmp674 = _tmp673 * sqrt_info(3, 3);
  const Scalar _tmp675 = _tmp115 * _tmp89;
  const Scalar _tmp676 = _tmp118 * _tmp89;
  const Scalar _tmp677 = -_tmp120 * _tmp672 - _tmp664 * _tmp676 - _tmp668 * _tmp675;
  const Scalar _tmp678 = _tmp673 * sqrt_info(4, 3) + _tmp677 * sqrt_info(4, 4);
  const Scalar _tmp679 = _tmp126 * _tmp89;
  const Scalar _tmp680 = -_tmp124 * _tmp665 - _tmp127 * _tmp672 - _tmp668 * _tmp679;
  const Scalar _tmp681 =
      _tmp673 * sqrt_info(5, 3) + _tmp677 * sqrt_info(5, 4) + _tmp680 * sqrt_info(5, 5);
  const Scalar _tmp682 = _tmp131 * _tmp96;
  const Scalar _tmp683 = _tmp131 * _tmp668;
  const Scalar _tmp684 = _tmp131 * _tmp671;
  const Scalar _tmp685 = -_tmp103 * _tmp683 - _tmp664 * _tmp682 - _tmp684 * _tmp84;
  const Scalar _tmp686 = _tmp673 * sqrt_info(6, 3) + _tmp677 * sqrt_info(6, 4) +
                         _tmp680 * sqrt_info(6, 5) + _tmp685 * sqrt_info(6, 6);
  const Scalar _tmp687 = _tmp115 * _tmp131;
  const Scalar _tmp688 = _tmp118 * _tmp131;
  const Scalar _tmp689 = -_tmp120 * _tmp684 - _tmp664 * _tmp688 - _tmp668 * _tmp687;
  const Scalar _tmp690 = _tmp673 * sqrt_info(7, 3) + _tmp677 * sqrt_info(7, 4) +
                         _tmp680 * sqrt_info(7, 5) + _tmp685 * sqrt_info(7, 6) +
                         _tmp689 * sqrt_info(7, 7);
  const Scalar _tmp691 = _tmp124 * _tmp131;
  const Scalar _tmp692 =
      _tmp673 * sqrt_info(8, 3) + _tmp677 * sqrt_info(8, 4) + _tmp680 * sqrt_info(8, 5) +
      _tmp685 * sqrt_info(8, 6) + _tmp689 * sqrt_info(8, 7) +
      sqrt_info(8, 8) * (-_tmp126 * _tmp683 - _tmp127 * _tmp684 - _tmp664 * _tmp691);
  const Scalar _tmp693 = _tmp666 - _tmp667;
  const Scalar _tmp694 = _tmp693 * _tmp89;
  const Scalar _tmp695 = _tmp670 - _tmp97 + _tmp98;
  const Scalar _tmp696 = _tmp105 + _tmp106;
  const Scalar _tmp697 = _tmp696 * _tmp89;
  const Scalar _tmp698 = -_tmp669 * _tmp695 - _tmp694 * _tmp84 - _tmp697 * _tmp96;
  const Scalar _tmp699 = _tmp698 * sqrt_info(3, 3);
  const Scalar _tmp700 = -_tmp120 * _tmp694 - _tmp675 * _tmp695 - _tmp676 * _tmp696;
  const Scalar _tmp701 = _tmp698 * sqrt_info(4, 3) + _tmp700 * sqrt_info(4, 4);
  const Scalar _tmp702 = -_tmp124 * _tmp697 - _tmp127 * _tmp694 - _tmp679 * _tmp695;
  const Scalar _tmp703 =
      _tmp698 * sqrt_info(5, 3) + _tmp700 * sqrt_info(5, 4) + _tmp702 * sqrt_info(5, 5);
  const Scalar _tmp704 = _tmp131 * _tmp693;
  const Scalar _tmp705 = _tmp131 * _tmp695;
  const Scalar _tmp706 = -_tmp103 * _tmp705 - _tmp682 * _tmp696 - _tmp704 * _tmp84;
  const Scalar _tmp707 = _tmp698 * sqrt_info(6, 3) + _tmp700 * sqrt_info(6, 4) +
                         _tmp702 * sqrt_info(6, 5) + _tmp706 * sqrt_info(6, 6);
  const Scalar _tmp708 = -_tmp120 * _tmp704 - _tmp687 * _tmp695 - _tmp688 * _tmp696;
  const Scalar _tmp709 = _tmp698 * sqrt_info(7, 3) + _tmp700 * sqrt_info(7, 4) +
                         _tmp702 * sqrt_info(7, 5) + _tmp706 * sqrt_info(7, 6) +
                         _tmp708 * sqrt_info(7, 7);
  const Scalar _tmp710 =
      _tmp698 * sqrt_info(8, 3) + _tmp700 * sqrt_info(8, 4) + _tmp702 * sqrt_info(8, 5) +
      _tmp706 * sqrt_info(8, 6) + _tmp708 * sqrt_info(8, 7) +
      sqrt_info(8, 8) * (-_tmp126 * _tmp705 - _tmp127 * _tmp704 - _tmp691 * _tmp696);
  const Scalar _tmp711 = _tmp240 * _tmp332;
  const Scalar _tmp712 = _tmp240 * _tmp340;
  const Scalar _tmp713 = _tmp240 * _tmp348;
  const Scalar _tmp714 = _tmp212 * _tmp356;
  const Scalar _tmp715 = _tmp212 * _tmp376;
  const Scalar _tmp716 = _tmp212 * _tmp396;
  const Scalar _tmp717 = _tmp295 * _tmp332;
  const Scalar _tmp718 = _tmp295 * _tmp340;
  const Scalar _tmp719 = _tmp295 * _tmp348;
  const Scalar _tmp720 = _tmp285 * _tmp356;
  const Scalar _tmp721 = _tmp285 * _tmp376;
  const Scalar _tmp722 = _tmp285 * _tmp396;
  const Scalar _tmp723 = _tmp328 * _tmp332;
  const Scalar _tmp724 = _tmp328 * _tmp340;
  const Scalar _tmp725 = _tmp328 * _tmp348;
  const Scalar _tmp726 = _tmp319 * _tmp356;
  const Scalar _tmp727 = _tmp319 * _tmp376;
  const Scalar _tmp728 = _tmp319 * _tmp396;
  const Scalar _tmp729 = std::pow(_tmp84, Scalar(2));
  const Scalar _tmp730 = std::pow(sqrt_info(6, 6), Scalar(2));
  const Scalar _tmp731 = _tmp729 * _tmp730;
  const Scalar _tmp732 = _tmp730 * _tmp84;
  const Scalar _tmp733 = _tmp103 * _tmp732;
  const Scalar _tmp734 = _tmp732 * _tmp96;
  const Scalar _tmp735 = _tmp332 * _tmp367;
  const Scalar _tmp736 = _tmp332 * _tmp387;
  const Scalar _tmp737 = _tmp332 * _tmp407;
  const Scalar _tmp738 = _tmp332 * _tmp450;
  const Scalar _tmp739 = _tmp332 * _tmp470;
  const Scalar _tmp740 = _tmp332 * _tmp489;
  const Scalar _tmp741 = -_tmp733;
  const Scalar _tmp742 = -_tmp734;
  const Scalar _tmp743 = _tmp332 * _tmp500;
  const Scalar _tmp744 = _tmp332 * _tmp505;
  const Scalar _tmp745 = _tmp332 * _tmp510;
  const Scalar _tmp746 = _tmp332 * _tmp516;
  const Scalar _tmp747 = _tmp332 * _tmp522;
  const Scalar _tmp748 = _tmp332 * _tmp528;
  const Scalar _tmp749 = _tmp332 * _tmp581;
  const Scalar _tmp750 = _tmp332 * _tmp621;
  const Scalar _tmp751 = _tmp332 * _tmp661;
  const Scalar _tmp752 = _tmp332 * _tmp686;
  const Scalar _tmp753 = _tmp332 * _tmp707;
  const Scalar _tmp754 = std::pow(_tmp103, Scalar(2));
  const Scalar _tmp755 = _tmp730 * _tmp754;
  const Scalar _tmp756 = _tmp103 * _tmp96;
  const Scalar _tmp757 = _tmp730 * _tmp756;
  const Scalar _tmp758 = _tmp340 * _tmp367;
  const Scalar _tmp759 = _tmp340 * _tmp387;
  const Scalar _tmp760 = _tmp340 * _tmp407;
  const Scalar _tmp761 = _tmp340 * _tmp450;
  const Scalar _tmp762 = _tmp340 * _tmp470;
  const Scalar _tmp763 = _tmp340 * _tmp489;
  const Scalar _tmp764 = -_tmp757;
  const Scalar _tmp765 = _tmp340 * _tmp500;
  const Scalar _tmp766 = _tmp340 * _tmp505;
  const Scalar _tmp767 = _tmp340 * _tmp510;
  const Scalar _tmp768 = _tmp340 * _tmp516;
  const Scalar _tmp769 = _tmp340 * _tmp522;
  const Scalar _tmp770 = _tmp340 * _tmp528;
  const Scalar _tmp771 = _tmp340 * _tmp581;
  const Scalar _tmp772 = _tmp340 * _tmp621;
  const Scalar _tmp773 = _tmp340 * _tmp661;
  const Scalar _tmp774 = _tmp340 * _tmp686;
  const Scalar _tmp775 = _tmp340 * _tmp707;
  const Scalar _tmp776 = std::pow(_tmp96, Scalar(2));
  const Scalar _tmp777 = _tmp730 * _tmp776;
  const Scalar _tmp778 = _tmp348 * _tmp367;
  const Scalar _tmp779 = _tmp348 * _tmp387;
  const Scalar _tmp780 = _tmp348 * _tmp407;
  const Scalar _tmp781 = _tmp348 * _tmp450;
  const Scalar _tmp782 = _tmp348 * _tmp470;
  const Scalar _tmp783 = _tmp348 * _tmp489;
  const Scalar _tmp784 = _tmp348 * _tmp500;
  const Scalar _tmp785 = _tmp348 * _tmp505;
  const Scalar _tmp786 = _tmp348 * _tmp510;
  const Scalar _tmp787 = _tmp348 * _tmp516;
  const Scalar _tmp788 = _tmp348 * _tmp522;
  const Scalar _tmp789 = _tmp348 * _tmp528;
  const Scalar _tmp790 = _tmp348 * _tmp581;
  const Scalar _tmp791 = _tmp348 * _tmp621;
  const Scalar _tmp792 = _tmp348 * _tmp661;
  const Scalar _tmp793 = _tmp348 * _tmp686;
  const Scalar _tmp794 = _tmp348 * _tmp707;
  const Scalar _tmp795 = std::pow(sqrt_info(3, 3), Scalar(2));
  const Scalar _tmp796 = _tmp729 * _tmp795;
  const Scalar _tmp797 = _tmp795 * _tmp84;
  const Scalar _tmp798 = _tmp103 * _tmp797;
  const Scalar _tmp799 = _tmp797 * _tmp96;
  const Scalar _tmp800 = _tmp356 * _tmp446;
  const Scalar _tmp801 = _tmp356 * _tmp467;
  const Scalar _tmp802 = _tmp356 * _tmp485;
  const Scalar _tmp803 = -_tmp798;
  const Scalar _tmp804 = -_tmp799;
  const Scalar _tmp805 = Dv_D_accel_bias(0, 0) * _tmp797;
  const Scalar _tmp806 = Dv_D_accel_bias(0, 1) * _tmp797;
  const Scalar _tmp807 = Dv_D_accel_bias(0, 2) * _tmp797;
  const Scalar _tmp808 = _tmp356 * _tmp578;
  const Scalar _tmp809 = _tmp356 * _tmp617;
  const Scalar _tmp810 = _tmp356 * _tmp657;
  const Scalar _tmp811 = _tmp673 * _tmp797;
  const Scalar _tmp812 = _tmp698 * _tmp795;
  const Scalar _tmp813 = _tmp812 * _tmp84;
  const Scalar _tmp814 = _tmp754 * _tmp795;
  const Scalar _tmp815 = _tmp756 * _tmp795;
  const Scalar _tmp816 = _tmp376 * _tmp446;
  const Scalar _tmp817 = _tmp376 * _tmp467;
  const Scalar _tmp818 = _tmp376 * _tmp485;
  const Scalar _tmp819 = -_tmp815;
  const Scalar _tmp820 = _tmp103 * _tmp795;
  const Scalar _tmp821 = Dv_D_accel_bias(0, 0) * _tmp820;
  const Scalar _tmp822 = Dv_D_accel_bias(0, 1) * _tmp820;
  const Scalar _tmp823 = Dv_D_accel_bias(0, 2) * _tmp820;
  const Scalar _tmp824 = _tmp376 * _tmp578;
  const Scalar _tmp825 = _tmp376 * _tmp617;
  const Scalar _tmp826 = _tmp376 * _tmp657;
  const Scalar _tmp827 = _tmp673 * _tmp795;
  const Scalar _tmp828 = _tmp103 * _tmp827;
  const Scalar _tmp829 = _tmp103 * _tmp812;
  const Scalar _tmp830 = _tmp776 * _tmp795;
  const Scalar _tmp831 = _tmp396 * _tmp446;
  const Scalar _tmp832 = _tmp396 * _tmp467;
  const Scalar _tmp833 = _tmp396 * _tmp485;
  const Scalar _tmp834 = Dv_D_accel_bias(0, 0) * _tmp795 * _tmp96;
  const Scalar _tmp835 = Dv_D_accel_bias(0, 1) * _tmp795;
  const Scalar _tmp836 = _tmp835 * _tmp96;
  const Scalar _tmp837 = Dv_D_accel_bias(0, 2) * _tmp795;
  const Scalar _tmp838 = _tmp837 * _tmp96;
  const Scalar _tmp839 = _tmp396 * _tmp578;
  const Scalar _tmp840 = _tmp396 * _tmp617;
  const Scalar _tmp841 = _tmp396 * _tmp657;
  const Scalar _tmp842 = _tmp827 * _tmp96;
  const Scalar _tmp843 = _tmp812 * _tmp96;
  const Scalar _tmp844 = _tmp137 * _tmp332;
  const Scalar _tmp845 = _tmp137 * _tmp340;
  const Scalar _tmp846 = _tmp137 * _tmp348;
  const Scalar _tmp847 = _tmp112 * _tmp356;
  const Scalar _tmp848 = _tmp112 * _tmp376;
  const Scalar _tmp849 = _tmp112 * _tmp396;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 9, 1>& _res = (*res);

    _res(0, 0) = _tmp62;
    _res(1, 0) = _tmp69;
    _res(2, 0) = _tmp76;
    _res(3, 0) = _tmp112;
    _res(4, 0) = _tmp123;
    _res(5, 0) = _tmp130;
    _res(6, 0) = _tmp137;
    _res(7, 0) = _tmp140;
    _res(8, 0) = _tmp143;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 9, 26>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp189;
    _jacobian(1, 0) = _tmp196;
    _jacobian(2, 0) = _tmp206;
    _jacobian(3, 0) = _tmp212;
    _jacobian(4, 0) = _tmp222;
    _jacobian(5, 0) = _tmp236;
    _jacobian(6, 0) = _tmp240;
    _jacobian(7, 0) = _tmp247;
    _jacobian(8, 0) = _tmp249;
    _jacobian(0, 1) = _tmp265;
    _jacobian(1, 1) = _tmp268;
    _jacobian(2, 1) = _tmp275;
    _jacobian(3, 1) = _tmp285;
    _jacobian(4, 1) = _tmp287;
    _jacobian(5, 1) = _tmp292;
    _jacobian(6, 1) = _tmp295;
    _jacobian(7, 1) = _tmp296;
    _jacobian(8, 1) = _tmp297;
    _jacobian(0, 2) = _tmp307;
    _jacobian(1, 2) = _tmp309;
    _jacobian(2, 2) = _tmp314;
    _jacobian(3, 2) = _tmp319;
    _jacobian(4, 2) = _tmp325;
    _jacobian(5, 2) = _tmp326;
    _jacobian(6, 2) = _tmp328;
    _jacobian(7, 2) = _tmp330;
    _jacobian(8, 2) = _tmp331;
    _jacobian(0, 3) = 0;
    _jacobian(1, 3) = 0;
    _jacobian(2, 3) = 0;
    _jacobian(3, 3) = 0;
    _jacobian(4, 3) = 0;
    _jacobian(5, 3) = 0;
    _jacobian(6, 3) = -_tmp332;
    _jacobian(7, 3) = _tmp335;
    _jacobian(8, 3) = _tmp339;
    _jacobian(0, 4) = 0;
    _jacobian(1, 4) = 0;
    _jacobian(2, 4) = 0;
    _jacobian(3, 4) = 0;
    _jacobian(4, 4) = 0;
    _jacobian(5, 4) = 0;
    _jacobian(6, 4) = -_tmp340;
    _jacobian(7, 4) = _tmp343;
    _jacobian(8, 4) = _tmp347;
    _jacobian(0, 5) = 0;
    _jacobian(1, 5) = 0;
    _jacobian(2, 5) = 0;
    _jacobian(3, 5) = 0;
    _jacobian(4, 5) = 0;
    _jacobian(5, 5) = 0;
    _jacobian(6, 5) = -_tmp348;
    _jacobian(7, 5) = _tmp351;
    _jacobian(8, 5) = _tmp355;
    _jacobian(0, 6) = 0;
    _jacobian(1, 6) = 0;
    _jacobian(2, 6) = 0;
    _jacobian(3, 6) = -_tmp356;
    _jacobian(4, 6) = _tmp359;
    _jacobian(5, 6) = _tmp363;
    _jacobian(6, 6) = _tmp367;
    _jacobian(7, 6) = _tmp371;
    _jacobian(8, 6) = _tmp375;
    _jacobian(0, 7) = 0;
    _jacobian(1, 7) = 0;
    _jacobian(2, 7) = 0;
    _jacobian(3, 7) = -_tmp376;
    _jacobian(4, 7) = _tmp379;
    _jacobian(5, 7) = _tmp383;
    _jacobian(6, 7) = _tmp387;
    _jacobian(7, 7) = _tmp391;
    _jacobian(8, 7) = _tmp395;
    _jacobian(0, 8) = 0;
    _jacobian(1, 8) = 0;
    _jacobian(2, 8) = 0;
    _jacobian(3, 8) = -_tmp396;
    _jacobian(4, 8) = _tmp399;
    _jacobian(5, 8) = _tmp403;
    _jacobian(6, 8) = _tmp407;
    _jacobian(7, 8) = _tmp411;
    _jacobian(8, 8) = _tmp415;
    _jacobian(0, 9) = _tmp426;
    _jacobian(1, 9) = _tmp433;
    _jacobian(2, 9) = _tmp444;
    _jacobian(3, 9) = _tmp446;
    _jacobian(4, 9) = _tmp448;
    _jacobian(5, 9) = _tmp449;
    _jacobian(6, 9) = _tmp450;
    _jacobian(7, 9) = _tmp451;
    _jacobian(8, 9) = _tmp452;
    _jacobian(0, 10) = _tmp458;
    _jacobian(1, 10) = _tmp459;
    _jacobian(2, 10) = _tmp465;
    _jacobian(3, 10) = _tmp467;
    _jacobian(4, 10) = _tmp468;
    _jacobian(5, 10) = _tmp469;
    _jacobian(6, 10) = _tmp470;
    _jacobian(7, 10) = _tmp471;
    _jacobian(8, 10) = _tmp472;
    _jacobian(0, 11) = _tmp477;
    _jacobian(1, 11) = _tmp479;
    _jacobian(2, 11) = _tmp484;
    _jacobian(3, 11) = _tmp485;
    _jacobian(4, 11) = _tmp487;
    _jacobian(5, 11) = _tmp488;
    _jacobian(6, 11) = _tmp489;
    _jacobian(7, 11) = _tmp490;
    _jacobian(8, 11) = _tmp491;
    _jacobian(0, 12) = 0;
    _jacobian(1, 12) = 0;
    _jacobian(2, 12) = 0;
    _jacobian(3, 12) = 0;
    _jacobian(4, 12) = 0;
    _jacobian(5, 12) = 0;
    _jacobian(6, 12) = _tmp332;
    _jacobian(7, 12) = _tmp492;
    _jacobian(8, 12) = _tmp493;
    _jacobian(0, 13) = 0;
    _jacobian(1, 13) = 0;
    _jacobian(2, 13) = 0;
    _jacobian(3, 13) = 0;
    _jacobian(4, 13) = 0;
    _jacobian(5, 13) = 0;
    _jacobian(6, 13) = _tmp340;
    _jacobian(7, 13) = _tmp494;
    _jacobian(8, 13) = _tmp495;
    _jacobian(0, 14) = 0;
    _jacobian(1, 14) = 0;
    _jacobian(2, 14) = 0;
    _jacobian(3, 14) = 0;
    _jacobian(4, 14) = 0;
    _jacobian(5, 14) = 0;
    _jacobian(6, 14) = _tmp348;
    _jacobian(7, 14) = _tmp496;
    _jacobian(8, 14) = _tmp497;
    _jacobian(0, 15) = 0;
    _jacobian(1, 15) = 0;
    _jacobian(2, 15) = 0;
    _jacobian(3, 15) = _tmp356;
    _jacobian(4, 15) = _tmp498;
    _jacobian(5, 15) = _tmp499;
    _jacobian(6, 15) = _tmp500;
    _jacobian(7, 15) = _tmp501;
    _jacobian(8, 15) = _tmp502;
    _jacobian(0, 16) = 0;
    _jacobian(1, 16) = 0;
    _jacobian(2, 16) = 0;
    _jacobian(3, 16) = _tmp376;
    _jacobian(4, 16) = _tmp503;
    _jacobian(5, 16) = _tmp504;
    _jacobian(6, 16) = _tmp505;
    _jacobian(7, 16) = _tmp506;
    _jacobian(8, 16) = _tmp507;
    _jacobian(0, 17) = 0;
    _jacobian(1, 17) = 0;
    _jacobian(2, 17) = 0;
    _jacobian(3, 17) = _tmp396;
    _jacobian(4, 17) = _tmp508;
    _jacobian(5, 17) = _tmp509;
    _jacobian(6, 17) = _tmp510;
    _jacobian(7, 17) = _tmp511;
    _jacobian(8, 17) = _tmp512;
    _jacobian(0, 18) = 0;
    _jacobian(1, 18) = 0;
    _jacobian(2, 18) = 0;
    _jacobian(3, 18) = -_tmp513;
    _jacobian(4, 18) = _tmp514;
    _jacobian(5, 18) = _tmp515;
    _jacobian(6, 18) = _tmp516;
    _jacobian(7, 18) = _tmp517;
    _jacobian(8, 18) = _tmp518;
    _jacobian(0, 19) = 0;
    _jacobian(1, 19) = 0;
    _jacobian(2, 19) = 0;
    _jacobian(3, 19) = -_tmp519;
    _jacobian(4, 19) = _tmp520;
    _jacobian(5, 19) = _tmp521;
    _jacobian(6, 19) = _tmp522;
    _jacobian(7, 19) = _tmp523;
    _jacobian(8, 19) = _tmp524;
    _jacobian(0, 20) = 0;
    _jacobian(1, 20) = 0;
    _jacobian(2, 20) = 0;
    _jacobian(3, 20) = -_tmp525;
    _jacobian(4, 20) = _tmp526;
    _jacobian(5, 20) = _tmp527;
    _jacobian(6, 20) = _tmp528;
    _jacobian(7, 20) = _tmp529;
    _jacobian(8, 20) = _tmp530;
    _jacobian(0, 21) = _tmp569;
    _jacobian(1, 21) = _tmp571;
    _jacobian(2, 21) = _tmp576;
    _jacobian(3, 21) = _tmp578;
    _jacobian(4, 21) = _tmp579;
    _jacobian(5, 21) = _tmp580;
    _jacobian(6, 21) = _tmp581;
    _jacobian(7, 21) = _tmp582;
    _jacobian(8, 21) = _tmp583;
    _jacobian(0, 22) = _tmp608;
    _jacobian(1, 22) = _tmp610;
    _jacobian(2, 22) = _tmp615;
    _jacobian(3, 22) = _tmp617;
    _jacobian(4, 22) = _tmp619;
    _jacobian(5, 22) = _tmp620;
    _jacobian(6, 22) = _tmp621;
    _jacobian(7, 22) = _tmp622;
    _jacobian(8, 22) = _tmp623;
    _jacobian(0, 23) = _tmp647;
    _jacobian(1, 23) = _tmp650;
    _jacobian(2, 23) = _tmp655;
    _jacobian(3, 23) = _tmp657;
    _jacobian(4, 23) = _tmp659;
    _jacobian(5, 23) = _tmp660;
    _jacobian(6, 23) = _tmp661;
    _jacobian(7, 23) = _tmp662;
    _jacobian(8, 23) = _tmp663;
    _jacobian(0, 24) = 0;
    _jacobian(1, 24) = 0;
    _jacobian(2, 24) = 0;
    _jacobian(3, 24) = _tmp674;
    _jacobian(4, 24) = _tmp678;
    _jacobian(5, 24) = _tmp681;
    _jacobian(6, 24) = _tmp686;
    _jacobian(7, 24) = _tmp690;
    _jacobian(8, 24) = _tmp692;
    _jacobian(0, 25) = 0;
    _jacobian(1, 25) = 0;
    _jacobian(2, 25) = 0;
    _jacobian(3, 25) = _tmp699;
    _jacobian(4, 25) = _tmp701;
    _jacobian(5, 25) = _tmp703;
    _jacobian(6, 25) = _tmp707;
    _jacobian(7, 25) = _tmp709;
    _jacobian(8, 25) = _tmp710;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 26, 26>& _hessian = (*hessian);

    _hessian(0, 0) =
        std::pow(_tmp189, Scalar(2)) + std::pow(_tmp196, Scalar(2)) + std::pow(_tmp206, Scalar(2)) +
        std::pow(_tmp212, Scalar(2)) + std::pow(_tmp222, Scalar(2)) + std::pow(_tmp236, Scalar(2)) +
        std::pow(_tmp240, Scalar(2)) + std::pow(_tmp247, Scalar(2)) + std::pow(_tmp249, Scalar(2));
    _hessian(1, 0) = _tmp189 * _tmp265 + _tmp196 * _tmp268 + _tmp206 * _tmp275 + _tmp212 * _tmp285 +
                     _tmp222 * _tmp287 + _tmp236 * _tmp292 + _tmp240 * _tmp295 + _tmp247 * _tmp296 +
                     _tmp249 * _tmp297;
    _hessian(2, 0) = _tmp189 * _tmp307 + _tmp196 * _tmp309 + _tmp206 * _tmp314 + _tmp212 * _tmp319 +
                     _tmp222 * _tmp325 + _tmp236 * _tmp326 + _tmp240 * _tmp328 + _tmp247 * _tmp330 +
                     _tmp249 * _tmp331;
    _hessian(3, 0) = _tmp247 * _tmp335 + _tmp249 * _tmp339 - _tmp711;
    _hessian(4, 0) = _tmp247 * _tmp343 + _tmp249 * _tmp347 - _tmp712;
    _hessian(5, 0) = _tmp247 * _tmp351 + _tmp249 * _tmp355 - _tmp713;
    _hessian(6, 0) = _tmp222 * _tmp359 + _tmp236 * _tmp363 + _tmp240 * _tmp367 + _tmp247 * _tmp371 +
                     _tmp249 * _tmp375 - _tmp714;
    _hessian(7, 0) = _tmp222 * _tmp379 + _tmp236 * _tmp383 + _tmp240 * _tmp387 + _tmp247 * _tmp391 +
                     _tmp249 * _tmp395 - _tmp715;
    _hessian(8, 0) = _tmp222 * _tmp399 + _tmp236 * _tmp403 + _tmp240 * _tmp407 + _tmp247 * _tmp411 +
                     _tmp249 * _tmp415 - _tmp716;
    _hessian(9, 0) = _tmp189 * _tmp426 + _tmp196 * _tmp433 + _tmp206 * _tmp444 + _tmp212 * _tmp446 +
                     _tmp222 * _tmp448 + _tmp236 * _tmp449 + _tmp240 * _tmp450 + _tmp247 * _tmp451 +
                     _tmp249 * _tmp452;
    _hessian(10, 0) = _tmp189 * _tmp458 + _tmp196 * _tmp459 + _tmp206 * _tmp465 +
                      _tmp212 * _tmp467 + _tmp222 * _tmp468 + _tmp236 * _tmp469 +
                      _tmp240 * _tmp470 + _tmp247 * _tmp471 + _tmp249 * _tmp472;
    _hessian(11, 0) = _tmp189 * _tmp477 + _tmp196 * _tmp479 + _tmp206 * _tmp484 +
                      _tmp212 * _tmp485 + _tmp222 * _tmp487 + _tmp236 * _tmp488 +
                      _tmp240 * _tmp489 + _tmp247 * _tmp490 + _tmp249 * _tmp491;
    _hessian(12, 0) = _tmp247 * _tmp492 + _tmp249 * _tmp493 + _tmp711;
    _hessian(13, 0) = _tmp247 * _tmp494 + _tmp249 * _tmp495 + _tmp712;
    _hessian(14, 0) = _tmp247 * _tmp496 + _tmp249 * _tmp497 + _tmp713;
    _hessian(15, 0) = _tmp222 * _tmp498 + _tmp236 * _tmp499 + _tmp240 * _tmp500 +
                      _tmp247 * _tmp501 + _tmp249 * _tmp502 + _tmp714;
    _hessian(16, 0) = _tmp222 * _tmp503 + _tmp236 * _tmp504 + _tmp240 * _tmp505 +
                      _tmp247 * _tmp506 + _tmp249 * _tmp507 + _tmp715;
    _hessian(17, 0) = _tmp222 * _tmp508 + _tmp236 * _tmp509 + _tmp240 * _tmp510 +
                      _tmp247 * _tmp511 + _tmp249 * _tmp512 + _tmp716;
    _hessian(18, 0) = -_tmp212 * _tmp513 + _tmp222 * _tmp514 + _tmp236 * _tmp515 +
                      _tmp240 * _tmp516 + _tmp247 * _tmp517 + _tmp249 * _tmp518;
    _hessian(19, 0) = -_tmp212 * _tmp519 + _tmp222 * _tmp520 + _tmp236 * _tmp521 +
                      _tmp240 * _tmp522 + _tmp247 * _tmp523 + _tmp249 * _tmp524;
    _hessian(20, 0) = -_tmp212 * _tmp525 + _tmp222 * _tmp526 + _tmp236 * _tmp527 +
                      _tmp240 * _tmp528 + _tmp247 * _tmp529 + _tmp249 * _tmp530;
    _hessian(21, 0) = _tmp189 * _tmp569 + _tmp196 * _tmp571 + _tmp206 * _tmp576 +
                      _tmp212 * _tmp578 + _tmp222 * _tmp579 + _tmp236 * _tmp580 +
                      _tmp240 * _tmp581 + _tmp247 * _tmp582 + _tmp249 * _tmp583;
    _hessian(22, 0) = _tmp189 * _tmp608 + _tmp196 * _tmp610 + _tmp206 * _tmp615 +
                      _tmp212 * _tmp617 + _tmp222 * _tmp619 + _tmp236 * _tmp620 +
                      _tmp240 * _tmp621 + _tmp247 * _tmp622 + _tmp249 * _tmp623;
    _hessian(23, 0) = _tmp189 * _tmp647 + _tmp196 * _tmp650 + _tmp206 * _tmp655 +
                      _tmp212 * _tmp657 + _tmp222 * _tmp659 + _tmp236 * _tmp660 +
                      _tmp240 * _tmp661 + _tmp247 * _tmp662 + _tmp249 * _tmp663;
    _hessian(24, 0) = _tmp212 * _tmp674 + _tmp222 * _tmp678 + _tmp236 * _tmp681 +
                      _tmp240 * _tmp686 + _tmp247 * _tmp690 + _tmp249 * _tmp692;
    _hessian(25, 0) = _tmp212 * _tmp699 + _tmp222 * _tmp701 + _tmp236 * _tmp703 +
                      _tmp240 * _tmp707 + _tmp247 * _tmp709 + _tmp249 * _tmp710;
    _hessian(0, 1) = 0;
    _hessian(1, 1) =
        std::pow(_tmp265, Scalar(2)) + std::pow(_tmp268, Scalar(2)) + std::pow(_tmp275, Scalar(2)) +
        std::pow(_tmp285, Scalar(2)) + std::pow(_tmp287, Scalar(2)) + std::pow(_tmp292, Scalar(2)) +
        std::pow(_tmp295, Scalar(2)) + std::pow(_tmp296, Scalar(2)) + std::pow(_tmp297, Scalar(2));
    _hessian(2, 1) = _tmp265 * _tmp307 + _tmp268 * _tmp309 + _tmp275 * _tmp314 + _tmp285 * _tmp319 +
                     _tmp287 * _tmp325 + _tmp292 * _tmp326 + _tmp295 * _tmp328 + _tmp296 * _tmp330 +
                     _tmp297 * _tmp331;
    _hessian(3, 1) = _tmp296 * _tmp335 + _tmp297 * _tmp339 - _tmp717;
    _hessian(4, 1) = _tmp296 * _tmp343 + _tmp297 * _tmp347 - _tmp718;
    _hessian(5, 1) = _tmp296 * _tmp351 + _tmp297 * _tmp355 - _tmp719;
    _hessian(6, 1) = _tmp287 * _tmp359 + _tmp292 * _tmp363 + _tmp295 * _tmp367 + _tmp296 * _tmp371 +
                     _tmp297 * _tmp375 - _tmp720;
    _hessian(7, 1) = _tmp287 * _tmp379 + _tmp292 * _tmp383 + _tmp295 * _tmp387 + _tmp296 * _tmp391 +
                     _tmp297 * _tmp395 - _tmp721;
    _hessian(8, 1) = _tmp287 * _tmp399 + _tmp292 * _tmp403 + _tmp295 * _tmp407 + _tmp296 * _tmp411 +
                     _tmp297 * _tmp415 - _tmp722;
    _hessian(9, 1) = _tmp265 * _tmp426 + _tmp268 * _tmp433 + _tmp275 * _tmp444 + _tmp285 * _tmp446 +
                     _tmp287 * _tmp448 + _tmp292 * _tmp449 + _tmp295 * _tmp450 + _tmp296 * _tmp451 +
                     _tmp297 * _tmp452;
    _hessian(10, 1) = _tmp265 * _tmp458 + _tmp268 * _tmp459 + _tmp275 * _tmp465 +
                      _tmp285 * _tmp467 + _tmp287 * _tmp468 + _tmp292 * _tmp469 +
                      _tmp295 * _tmp470 + _tmp296 * _tmp471 + _tmp297 * _tmp472;
    _hessian(11, 1) = _tmp265 * _tmp477 + _tmp268 * _tmp479 + _tmp275 * _tmp484 +
                      _tmp285 * _tmp485 + _tmp287 * _tmp487 + _tmp292 * _tmp488 +
                      _tmp295 * _tmp489 + _tmp296 * _tmp490 + _tmp297 * _tmp491;
    _hessian(12, 1) = _tmp296 * _tmp492 + _tmp297 * _tmp493 + _tmp717;
    _hessian(13, 1) = _tmp296 * _tmp494 + _tmp297 * _tmp495 + _tmp718;
    _hessian(14, 1) = _tmp296 * _tmp496 + _tmp297 * _tmp497 + _tmp719;
    _hessian(15, 1) = _tmp287 * _tmp498 + _tmp292 * _tmp499 + _tmp295 * _tmp500 +
                      _tmp296 * _tmp501 + _tmp297 * _tmp502 + _tmp720;
    _hessian(16, 1) = _tmp287 * _tmp503 + _tmp292 * _tmp504 + _tmp295 * _tmp505 +
                      _tmp296 * _tmp506 + _tmp297 * _tmp507 + _tmp721;
    _hessian(17, 1) = _tmp287 * _tmp508 + _tmp292 * _tmp509 + _tmp295 * _tmp510 +
                      _tmp296 * _tmp511 + _tmp297 * _tmp512 + _tmp722;
    _hessian(18, 1) = -_tmp285 * _tmp513 + _tmp287 * _tmp514 + _tmp292 * _tmp515 +
                      _tmp295 * _tmp516 + _tmp296 * _tmp517 + _tmp297 * _tmp518;
    _hessian(19, 1) = -_tmp285 * _tmp519 + _tmp287 * _tmp520 + _tmp292 * _tmp521 +
                      _tmp295 * _tmp522 + _tmp296 * _tmp523 + _tmp297 * _tmp524;
    _hessian(20, 1) = -_tmp285 * _tmp525 + _tmp287 * _tmp526 + _tmp292 * _tmp527 +
                      _tmp295 * _tmp528 + _tmp296 * _tmp529 + _tmp297 * _tmp530;
    _hessian(21, 1) = _tmp265 * _tmp569 + _tmp268 * _tmp571 + _tmp275 * _tmp576 +
                      _tmp285 * _tmp578 + _tmp287 * _tmp579 + _tmp292 * _tmp580 +
                      _tmp295 * _tmp581 + _tmp296 * _tmp582 + _tmp297 * _tmp583;
    _hessian(22, 1) = _tmp265 * _tmp608 + _tmp268 * _tmp610 + _tmp275 * _tmp615 +
                      _tmp285 * _tmp617 + _tmp287 * _tmp619 + _tmp292 * _tmp620 +
                      _tmp295 * _tmp621 + _tmp296 * _tmp622 + _tmp297 * _tmp623;
    _hessian(23, 1) = _tmp265 * _tmp647 + _tmp268 * _tmp650 + _tmp275 * _tmp655 +
                      _tmp285 * _tmp657 + _tmp287 * _tmp659 + _tmp292 * _tmp660 +
                      _tmp295 * _tmp661 + _tmp296 * _tmp662 + _tmp297 * _tmp663;
    _hessian(24, 1) = _tmp285 * _tmp674 + _tmp287 * _tmp678 + _tmp292 * _tmp681 +
                      _tmp295 * _tmp686 + _tmp296 * _tmp690 + _tmp297 * _tmp692;
    _hessian(25, 1) = _tmp285 * _tmp699 + _tmp287 * _tmp701 + _tmp292 * _tmp703 +
                      _tmp295 * _tmp707 + _tmp296 * _tmp709 + _tmp297 * _tmp710;
    _hessian(0, 2) = 0;
    _hessian(1, 2) = 0;
    _hessian(2, 2) =
        std::pow(_tmp307, Scalar(2)) + std::pow(_tmp309, Scalar(2)) + std::pow(_tmp314, Scalar(2)) +
        std::pow(_tmp319, Scalar(2)) + std::pow(_tmp325, Scalar(2)) + std::pow(_tmp326, Scalar(2)) +
        std::pow(_tmp328, Scalar(2)) + std::pow(_tmp330, Scalar(2)) + std::pow(_tmp331, Scalar(2));
    _hessian(3, 2) = _tmp330 * _tmp335 + _tmp331 * _tmp339 - _tmp723;
    _hessian(4, 2) = _tmp330 * _tmp343 + _tmp331 * _tmp347 - _tmp724;
    _hessian(5, 2) = _tmp330 * _tmp351 + _tmp331 * _tmp355 - _tmp725;
    _hessian(6, 2) = _tmp325 * _tmp359 + _tmp326 * _tmp363 + _tmp328 * _tmp367 + _tmp330 * _tmp371 +
                     _tmp331 * _tmp375 - _tmp726;
    _hessian(7, 2) = _tmp325 * _tmp379 + _tmp326 * _tmp383 + _tmp328 * _tmp387 + _tmp330 * _tmp391 +
                     _tmp331 * _tmp395 - _tmp727;
    _hessian(8, 2) = _tmp325 * _tmp399 + _tmp326 * _tmp403 + _tmp328 * _tmp407 + _tmp330 * _tmp411 +
                     _tmp331 * _tmp415 - _tmp728;
    _hessian(9, 2) = _tmp307 * _tmp426 + _tmp309 * _tmp433 + _tmp314 * _tmp444 + _tmp319 * _tmp446 +
                     _tmp325 * _tmp448 + _tmp326 * _tmp449 + _tmp328 * _tmp450 + _tmp330 * _tmp451 +
                     _tmp331 * _tmp452;
    _hessian(10, 2) = _tmp307 * _tmp458 + _tmp309 * _tmp459 + _tmp314 * _tmp465 +
                      _tmp319 * _tmp467 + _tmp325 * _tmp468 + _tmp326 * _tmp469 +
                      _tmp328 * _tmp470 + _tmp330 * _tmp471 + _tmp331 * _tmp472;
    _hessian(11, 2) = _tmp307 * _tmp477 + _tmp309 * _tmp479 + _tmp314 * _tmp484 +
                      _tmp319 * _tmp485 + _tmp325 * _tmp487 + _tmp326 * _tmp488 +
                      _tmp328 * _tmp489 + _tmp330 * _tmp490 + _tmp331 * _tmp491;
    _hessian(12, 2) = _tmp330 * _tmp492 + _tmp331 * _tmp493 + _tmp723;
    _hessian(13, 2) = _tmp330 * _tmp494 + _tmp331 * _tmp495 + _tmp724;
    _hessian(14, 2) = _tmp330 * _tmp496 + _tmp331 * _tmp497 + _tmp725;
    _hessian(15, 2) = _tmp325 * _tmp498 + _tmp326 * _tmp499 + _tmp328 * _tmp500 +
                      _tmp330 * _tmp501 + _tmp331 * _tmp502 + _tmp726;
    _hessian(16, 2) = _tmp325 * _tmp503 + _tmp326 * _tmp504 + _tmp328 * _tmp505 +
                      _tmp330 * _tmp506 + _tmp331 * _tmp507 + _tmp727;
    _hessian(17, 2) = _tmp325 * _tmp508 + _tmp326 * _tmp509 + _tmp328 * _tmp510 +
                      _tmp330 * _tmp511 + _tmp331 * _tmp512 + _tmp728;
    _hessian(18, 2) = -_tmp319 * _tmp513 + _tmp325 * _tmp514 + _tmp326 * _tmp515 +
                      _tmp328 * _tmp516 + _tmp330 * _tmp517 + _tmp331 * _tmp518;
    _hessian(19, 2) = -_tmp319 * _tmp519 + _tmp325 * _tmp520 + _tmp326 * _tmp521 +
                      _tmp328 * _tmp522 + _tmp330 * _tmp523 + _tmp331 * _tmp524;
    _hessian(20, 2) = -_tmp319 * _tmp525 + _tmp325 * _tmp526 + _tmp326 * _tmp527 +
                      _tmp328 * _tmp528 + _tmp330 * _tmp529 + _tmp331 * _tmp530;
    _hessian(21, 2) = _tmp307 * _tmp569 + _tmp309 * _tmp571 + _tmp314 * _tmp576 +
                      _tmp319 * _tmp578 + _tmp325 * _tmp579 + _tmp326 * _tmp580 +
                      _tmp328 * _tmp581 + _tmp330 * _tmp582 + _tmp331 * _tmp583;
    _hessian(22, 2) = _tmp307 * _tmp608 + _tmp309 * _tmp610 + _tmp314 * _tmp615 +
                      _tmp319 * _tmp617 + _tmp325 * _tmp619 + _tmp326 * _tmp620 +
                      _tmp328 * _tmp621 + _tmp330 * _tmp622 + _tmp331 * _tmp623;
    _hessian(23, 2) = _tmp307 * _tmp647 + _tmp309 * _tmp650 + _tmp314 * _tmp655 +
                      _tmp319 * _tmp657 + _tmp325 * _tmp659 + _tmp326 * _tmp660 +
                      _tmp328 * _tmp661 + _tmp330 * _tmp662 + _tmp331 * _tmp663;
    _hessian(24, 2) = _tmp319 * _tmp674 + _tmp325 * _tmp678 + _tmp326 * _tmp681 +
                      _tmp328 * _tmp686 + _tmp330 * _tmp690 + _tmp331 * _tmp692;
    _hessian(25, 2) = _tmp319 * _tmp699 + _tmp325 * _tmp701 + _tmp326 * _tmp703 +
                      _tmp328 * _tmp707 + _tmp330 * _tmp709 + _tmp331 * _tmp710;
    _hessian(0, 3) = 0;
    _hessian(1, 3) = 0;
    _hessian(2, 3) = 0;
    _hessian(3, 3) = std::pow(_tmp335, Scalar(2)) + std::pow(_tmp339, Scalar(2)) + _tmp731;
    _hessian(4, 3) = _tmp335 * _tmp343 + _tmp339 * _tmp347 + _tmp733;
    _hessian(5, 3) = _tmp335 * _tmp351 + _tmp339 * _tmp355 + _tmp734;
    _hessian(6, 3) = _tmp335 * _tmp371 + _tmp339 * _tmp375 - _tmp735;
    _hessian(7, 3) = _tmp335 * _tmp391 + _tmp339 * _tmp395 - _tmp736;
    _hessian(8, 3) = _tmp335 * _tmp411 + _tmp339 * _tmp415 - _tmp737;
    _hessian(9, 3) = _tmp335 * _tmp451 + _tmp339 * _tmp452 - _tmp738;
    _hessian(10, 3) = _tmp335 * _tmp471 + _tmp339 * _tmp472 - _tmp739;
    _hessian(11, 3) = _tmp335 * _tmp490 + _tmp339 * _tmp491 - _tmp740;
    _hessian(12, 3) = _tmp335 * _tmp492 + _tmp339 * _tmp493 - _tmp731;
    _hessian(13, 3) = _tmp335 * _tmp494 + _tmp339 * _tmp495 + _tmp741;
    _hessian(14, 3) = _tmp335 * _tmp496 + _tmp339 * _tmp497 + _tmp742;
    _hessian(15, 3) = _tmp335 * _tmp501 + _tmp339 * _tmp502 - _tmp743;
    _hessian(16, 3) = _tmp335 * _tmp506 + _tmp339 * _tmp507 - _tmp744;
    _hessian(17, 3) = _tmp335 * _tmp511 + _tmp339 * _tmp512 - _tmp745;
    _hessian(18, 3) = _tmp335 * _tmp517 + _tmp339 * _tmp518 - _tmp746;
    _hessian(19, 3) = _tmp335 * _tmp523 + _tmp339 * _tmp524 - _tmp747;
    _hessian(20, 3) = _tmp335 * _tmp529 + _tmp339 * _tmp530 - _tmp748;
    _hessian(21, 3) = _tmp335 * _tmp582 + _tmp339 * _tmp583 - _tmp749;
    _hessian(22, 3) = _tmp335 * _tmp622 + _tmp339 * _tmp623 - _tmp750;
    _hessian(23, 3) = _tmp335 * _tmp662 + _tmp339 * _tmp663 - _tmp751;
    _hessian(24, 3) = _tmp335 * _tmp690 + _tmp339 * _tmp692 - _tmp752;
    _hessian(25, 3) = _tmp335 * _tmp709 + _tmp339 * _tmp710 - _tmp753;
    _hessian(0, 4) = 0;
    _hessian(1, 4) = 0;
    _hessian(2, 4) = 0;
    _hessian(3, 4) = 0;
    _hessian(4, 4) = std::pow(_tmp343, Scalar(2)) + std::pow(_tmp347, Scalar(2)) + _tmp755;
    _hessian(5, 4) = _tmp343 * _tmp351 + _tmp347 * _tmp355 + _tmp757;
    _hessian(6, 4) = _tmp343 * _tmp371 + _tmp347 * _tmp375 - _tmp758;
    _hessian(7, 4) = _tmp343 * _tmp391 + _tmp347 * _tmp395 - _tmp759;
    _hessian(8, 4) = _tmp343 * _tmp411 + _tmp347 * _tmp415 - _tmp760;
    _hessian(9, 4) = _tmp343 * _tmp451 + _tmp347 * _tmp452 - _tmp761;
    _hessian(10, 4) = _tmp343 * _tmp471 + _tmp347 * _tmp472 - _tmp762;
    _hessian(11, 4) = _tmp343 * _tmp490 + _tmp347 * _tmp491 - _tmp763;
    _hessian(12, 4) = _tmp343 * _tmp492 + _tmp347 * _tmp493 + _tmp741;
    _hessian(13, 4) = _tmp343 * _tmp494 + _tmp347 * _tmp495 - _tmp755;
    _hessian(14, 4) = _tmp343 * _tmp496 + _tmp347 * _tmp497 + _tmp764;
    _hessian(15, 4) = _tmp343 * _tmp501 + _tmp347 * _tmp502 - _tmp765;
    _hessian(16, 4) = _tmp343 * _tmp506 + _tmp347 * _tmp507 - _tmp766;
    _hessian(17, 4) = _tmp343 * _tmp511 + _tmp347 * _tmp512 - _tmp767;
    _hessian(18, 4) = _tmp343 * _tmp517 + _tmp347 * _tmp518 - _tmp768;
    _hessian(19, 4) = _tmp343 * _tmp523 + _tmp347 * _tmp524 - _tmp769;
    _hessian(20, 4) = _tmp343 * _tmp529 + _tmp347 * _tmp530 - _tmp770;
    _hessian(21, 4) = _tmp343 * _tmp582 + _tmp347 * _tmp583 - _tmp771;
    _hessian(22, 4) = _tmp343 * _tmp622 + _tmp347 * _tmp623 - _tmp772;
    _hessian(23, 4) = _tmp343 * _tmp662 + _tmp347 * _tmp663 - _tmp773;
    _hessian(24, 4) = _tmp343 * _tmp690 + _tmp347 * _tmp692 - _tmp774;
    _hessian(25, 4) = _tmp343 * _tmp709 + _tmp347 * _tmp710 - _tmp775;
    _hessian(0, 5) = 0;
    _hessian(1, 5) = 0;
    _hessian(2, 5) = 0;
    _hessian(3, 5) = 0;
    _hessian(4, 5) = 0;
    _hessian(5, 5) = std::pow(_tmp351, Scalar(2)) + std::pow(_tmp355, Scalar(2)) + _tmp777;
    _hessian(6, 5) = _tmp351 * _tmp371 + _tmp355 * _tmp375 - _tmp778;
    _hessian(7, 5) = _tmp351 * _tmp391 + _tmp355 * _tmp395 - _tmp779;
    _hessian(8, 5) = _tmp351 * _tmp411 + _tmp355 * _tmp415 - _tmp780;
    _hessian(9, 5) = _tmp351 * _tmp451 + _tmp355 * _tmp452 - _tmp781;
    _hessian(10, 5) = _tmp351 * _tmp471 + _tmp355 * _tmp472 - _tmp782;
    _hessian(11, 5) = _tmp351 * _tmp490 + _tmp355 * _tmp491 - _tmp783;
    _hessian(12, 5) = _tmp351 * _tmp492 + _tmp355 * _tmp493 + _tmp742;
    _hessian(13, 5) = _tmp351 * _tmp494 + _tmp355 * _tmp495 + _tmp764;
    _hessian(14, 5) = _tmp351 * _tmp496 + _tmp355 * _tmp497 - _tmp777;
    _hessian(15, 5) = _tmp351 * _tmp501 + _tmp355 * _tmp502 - _tmp784;
    _hessian(16, 5) = _tmp351 * _tmp506 + _tmp355 * _tmp507 - _tmp785;
    _hessian(17, 5) = _tmp351 * _tmp511 + _tmp355 * _tmp512 - _tmp786;
    _hessian(18, 5) = _tmp351 * _tmp517 + _tmp355 * _tmp518 - _tmp787;
    _hessian(19, 5) = _tmp351 * _tmp523 + _tmp355 * _tmp524 - _tmp788;
    _hessian(20, 5) = _tmp351 * _tmp529 + _tmp355 * _tmp530 - _tmp789;
    _hessian(21, 5) = _tmp351 * _tmp582 + _tmp355 * _tmp583 - _tmp790;
    _hessian(22, 5) = _tmp351 * _tmp622 + _tmp355 * _tmp623 - _tmp791;
    _hessian(23, 5) = _tmp351 * _tmp662 + _tmp355 * _tmp663 - _tmp792;
    _hessian(24, 5) = _tmp351 * _tmp690 + _tmp355 * _tmp692 - _tmp793;
    _hessian(25, 5) = _tmp351 * _tmp709 + _tmp355 * _tmp710 - _tmp794;
    _hessian(0, 6) = 0;
    _hessian(1, 6) = 0;
    _hessian(2, 6) = 0;
    _hessian(3, 6) = 0;
    _hessian(4, 6) = 0;
    _hessian(5, 6) = 0;
    _hessian(6, 6) = std::pow(_tmp359, Scalar(2)) + std::pow(_tmp363, Scalar(2)) +
                     std::pow(_tmp367, Scalar(2)) + std::pow(_tmp371, Scalar(2)) +
                     std::pow(_tmp375, Scalar(2)) + _tmp796;
    _hessian(7, 6) = _tmp359 * _tmp379 + _tmp363 * _tmp383 + _tmp367 * _tmp387 + _tmp371 * _tmp391 +
                     _tmp375 * _tmp395 + _tmp798;
    _hessian(8, 6) = _tmp359 * _tmp399 + _tmp363 * _tmp403 + _tmp367 * _tmp407 + _tmp371 * _tmp411 +
                     _tmp375 * _tmp415 + _tmp799;
    _hessian(9, 6) = _tmp359 * _tmp448 + _tmp363 * _tmp449 + _tmp367 * _tmp450 + _tmp371 * _tmp451 +
                     _tmp375 * _tmp452 - _tmp800;
    _hessian(10, 6) = _tmp359 * _tmp468 + _tmp363 * _tmp469 + _tmp367 * _tmp470 +
                      _tmp371 * _tmp471 + _tmp375 * _tmp472 - _tmp801;
    _hessian(11, 6) = _tmp359 * _tmp487 + _tmp363 * _tmp488 + _tmp367 * _tmp489 +
                      _tmp371 * _tmp490 + _tmp375 * _tmp491 - _tmp802;
    _hessian(12, 6) = _tmp371 * _tmp492 + _tmp375 * _tmp493 + _tmp735;
    _hessian(13, 6) = _tmp371 * _tmp494 + _tmp375 * _tmp495 + _tmp758;
    _hessian(14, 6) = _tmp371 * _tmp496 + _tmp375 * _tmp497 + _tmp778;
    _hessian(15, 6) = _tmp359 * _tmp498 + _tmp363 * _tmp499 + _tmp367 * _tmp500 +
                      _tmp371 * _tmp501 + _tmp375 * _tmp502 - _tmp796;
    _hessian(16, 6) = _tmp359 * _tmp503 + _tmp363 * _tmp504 + _tmp367 * _tmp505 +
                      _tmp371 * _tmp506 + _tmp375 * _tmp507 + _tmp803;
    _hessian(17, 6) = _tmp359 * _tmp508 + _tmp363 * _tmp509 + _tmp367 * _tmp510 +
                      _tmp371 * _tmp511 + _tmp375 * _tmp512 + _tmp804;
    _hessian(18, 6) = _tmp359 * _tmp514 + _tmp363 * _tmp515 + _tmp367 * _tmp516 +
                      _tmp371 * _tmp517 + _tmp375 * _tmp518 + _tmp805;
    _hessian(19, 6) = _tmp359 * _tmp520 + _tmp363 * _tmp521 + _tmp367 * _tmp522 +
                      _tmp371 * _tmp523 + _tmp375 * _tmp524 + _tmp806;
    _hessian(20, 6) = _tmp359 * _tmp526 + _tmp363 * _tmp527 + _tmp367 * _tmp528 +
                      _tmp371 * _tmp529 + _tmp375 * _tmp530 + _tmp807;
    _hessian(21, 6) = _tmp359 * _tmp579 + _tmp363 * _tmp580 + _tmp367 * _tmp581 +
                      _tmp371 * _tmp582 + _tmp375 * _tmp583 - _tmp808;
    _hessian(22, 6) = _tmp359 * _tmp619 + _tmp363 * _tmp620 + _tmp367 * _tmp621 +
                      _tmp371 * _tmp622 + _tmp375 * _tmp623 - _tmp809;
    _hessian(23, 6) = _tmp359 * _tmp659 + _tmp363 * _tmp660 + _tmp367 * _tmp661 +
                      _tmp371 * _tmp662 + _tmp375 * _tmp663 - _tmp810;
    _hessian(24, 6) = _tmp359 * _tmp678 + _tmp363 * _tmp681 + _tmp367 * _tmp686 +
                      _tmp371 * _tmp690 + _tmp375 * _tmp692 - _tmp811;
    _hessian(25, 6) = _tmp359 * _tmp701 + _tmp363 * _tmp703 + _tmp367 * _tmp707 +
                      _tmp371 * _tmp709 + _tmp375 * _tmp710 - _tmp813;
    _hessian(0, 7) = 0;
    _hessian(1, 7) = 0;
    _hessian(2, 7) = 0;
    _hessian(3, 7) = 0;
    _hessian(4, 7) = 0;
    _hessian(5, 7) = 0;
    _hessian(6, 7) = 0;
    _hessian(7, 7) = std::pow(_tmp379, Scalar(2)) + std::pow(_tmp383, Scalar(2)) +
                     std::pow(_tmp387, Scalar(2)) + std::pow(_tmp391, Scalar(2)) +
                     std::pow(_tmp395, Scalar(2)) + _tmp814;
    _hessian(8, 7) = _tmp379 * _tmp399 + _tmp383 * _tmp403 + _tmp387 * _tmp407 + _tmp391 * _tmp411 +
                     _tmp395 * _tmp415 + _tmp815;
    _hessian(9, 7) = _tmp379 * _tmp448 + _tmp383 * _tmp449 + _tmp387 * _tmp450 + _tmp391 * _tmp451 +
                     _tmp395 * _tmp452 - _tmp816;
    _hessian(10, 7) = _tmp379 * _tmp468 + _tmp383 * _tmp469 + _tmp387 * _tmp470 +
                      _tmp391 * _tmp471 + _tmp395 * _tmp472 - _tmp817;
    _hessian(11, 7) = _tmp379 * _tmp487 + _tmp383 * _tmp488 + _tmp387 * _tmp489 +
                      _tmp391 * _tmp490 + _tmp395 * _tmp491 - _tmp818;
    _hessian(12, 7) = _tmp391 * _tmp492 + _tmp395 * _tmp493 + _tmp736;
    _hessian(13, 7) = _tmp391 * _tmp494 + _tmp395 * _tmp495 + _tmp759;
    _hessian(14, 7) = _tmp391 * _tmp496 + _tmp395 * _tmp497 + _tmp779;
    _hessian(15, 7) = _tmp379 * _tmp498 + _tmp383 * _tmp499 + _tmp387 * _tmp500 +
                      _tmp391 * _tmp501 + _tmp395 * _tmp502 + _tmp803;
    _hessian(16, 7) = _tmp379 * _tmp503 + _tmp383 * _tmp504 + _tmp387 * _tmp505 +
                      _tmp391 * _tmp506 + _tmp395 * _tmp507 - _tmp814;
    _hessian(17, 7) = _tmp379 * _tmp508 + _tmp383 * _tmp509 + _tmp387 * _tmp510 +
                      _tmp391 * _tmp511 + _tmp395 * _tmp512 + _tmp819;
    _hessian(18, 7) = _tmp379 * _tmp514 + _tmp383 * _tmp515 + _tmp387 * _tmp516 +
                      _tmp391 * _tmp517 + _tmp395 * _tmp518 + _tmp821;
    _hessian(19, 7) = _tmp379 * _tmp520 + _tmp383 * _tmp521 + _tmp387 * _tmp522 +
                      _tmp391 * _tmp523 + _tmp395 * _tmp524 + _tmp822;
    _hessian(20, 7) = _tmp379 * _tmp526 + _tmp383 * _tmp527 + _tmp387 * _tmp528 +
                      _tmp391 * _tmp529 + _tmp395 * _tmp530 + _tmp823;
    _hessian(21, 7) = _tmp379 * _tmp579 + _tmp383 * _tmp580 + _tmp387 * _tmp581 +
                      _tmp391 * _tmp582 + _tmp395 * _tmp583 - _tmp824;
    _hessian(22, 7) = _tmp379 * _tmp619 + _tmp383 * _tmp620 + _tmp387 * _tmp621 +
                      _tmp391 * _tmp622 + _tmp395 * _tmp623 - _tmp825;
    _hessian(23, 7) = _tmp379 * _tmp659 + _tmp383 * _tmp660 + _tmp387 * _tmp661 +
                      _tmp391 * _tmp662 + _tmp395 * _tmp663 - _tmp826;
    _hessian(24, 7) = _tmp379 * _tmp678 + _tmp383 * _tmp681 + _tmp387 * _tmp686 +
                      _tmp391 * _tmp690 + _tmp395 * _tmp692 - _tmp828;
    _hessian(25, 7) = _tmp379 * _tmp701 + _tmp383 * _tmp703 + _tmp387 * _tmp707 +
                      _tmp391 * _tmp709 + _tmp395 * _tmp710 - _tmp829;
    _hessian(0, 8) = 0;
    _hessian(1, 8) = 0;
    _hessian(2, 8) = 0;
    _hessian(3, 8) = 0;
    _hessian(4, 8) = 0;
    _hessian(5, 8) = 0;
    _hessian(6, 8) = 0;
    _hessian(7, 8) = 0;
    _hessian(8, 8) = std::pow(_tmp399, Scalar(2)) + std::pow(_tmp403, Scalar(2)) +
                     std::pow(_tmp407, Scalar(2)) + std::pow(_tmp411, Scalar(2)) +
                     std::pow(_tmp415, Scalar(2)) + _tmp830;
    _hessian(9, 8) = _tmp399 * _tmp448 + _tmp403 * _tmp449 + _tmp407 * _tmp450 + _tmp411 * _tmp451 +
                     _tmp415 * _tmp452 - _tmp831;
    _hessian(10, 8) = _tmp399 * _tmp468 + _tmp403 * _tmp469 + _tmp407 * _tmp470 +
                      _tmp411 * _tmp471 + _tmp415 * _tmp472 - _tmp832;
    _hessian(11, 8) = _tmp399 * _tmp487 + _tmp403 * _tmp488 + _tmp407 * _tmp489 +
                      _tmp411 * _tmp490 + _tmp415 * _tmp491 - _tmp833;
    _hessian(12, 8) = _tmp411 * _tmp492 + _tmp415 * _tmp493 + _tmp737;
    _hessian(13, 8) = _tmp411 * _tmp494 + _tmp415 * _tmp495 + _tmp760;
    _hessian(14, 8) = _tmp411 * _tmp496 + _tmp415 * _tmp497 + _tmp780;
    _hessian(15, 8) = _tmp399 * _tmp498 + _tmp403 * _tmp499 + _tmp407 * _tmp500 +
                      _tmp411 * _tmp501 + _tmp415 * _tmp502 + _tmp804;
    _hessian(16, 8) = _tmp399 * _tmp503 + _tmp403 * _tmp504 + _tmp407 * _tmp505 +
                      _tmp411 * _tmp506 + _tmp415 * _tmp507 + _tmp819;
    _hessian(17, 8) = _tmp399 * _tmp508 + _tmp403 * _tmp509 + _tmp407 * _tmp510 +
                      _tmp411 * _tmp511 + _tmp415 * _tmp512 - _tmp830;
    _hessian(18, 8) = _tmp399 * _tmp514 + _tmp403 * _tmp515 + _tmp407 * _tmp516 +
                      _tmp411 * _tmp517 + _tmp415 * _tmp518 + _tmp834;
    _hessian(19, 8) = _tmp399 * _tmp520 + _tmp403 * _tmp521 + _tmp407 * _tmp522 +
                      _tmp411 * _tmp523 + _tmp415 * _tmp524 + _tmp836;
    _hessian(20, 8) = _tmp399 * _tmp526 + _tmp403 * _tmp527 + _tmp407 * _tmp528 +
                      _tmp411 * _tmp529 + _tmp415 * _tmp530 + _tmp838;
    _hessian(21, 8) = _tmp399 * _tmp579 + _tmp403 * _tmp580 + _tmp407 * _tmp581 +
                      _tmp411 * _tmp582 + _tmp415 * _tmp583 - _tmp839;
    _hessian(22, 8) = _tmp399 * _tmp619 + _tmp403 * _tmp620 + _tmp407 * _tmp621 +
                      _tmp411 * _tmp622 + _tmp415 * _tmp623 - _tmp840;
    _hessian(23, 8) = _tmp399 * _tmp659 + _tmp403 * _tmp660 + _tmp407 * _tmp661 +
                      _tmp411 * _tmp662 + _tmp415 * _tmp663 - _tmp841;
    _hessian(24, 8) = _tmp399 * _tmp678 + _tmp403 * _tmp681 + _tmp407 * _tmp686 +
                      _tmp411 * _tmp690 + _tmp415 * _tmp692 - _tmp842;
    _hessian(25, 8) = _tmp399 * _tmp701 + _tmp403 * _tmp703 + _tmp407 * _tmp707 +
                      _tmp411 * _tmp709 + _tmp415 * _tmp710 - _tmp843;
    _hessian(0, 9) = 0;
    _hessian(1, 9) = 0;
    _hessian(2, 9) = 0;
    _hessian(3, 9) = 0;
    _hessian(4, 9) = 0;
    _hessian(5, 9) = 0;
    _hessian(6, 9) = 0;
    _hessian(7, 9) = 0;
    _hessian(8, 9) = 0;
    _hessian(9, 9) =
        std::pow(_tmp426, Scalar(2)) + std::pow(_tmp433, Scalar(2)) + std::pow(_tmp444, Scalar(2)) +
        std::pow(_tmp446, Scalar(2)) + std::pow(_tmp448, Scalar(2)) + std::pow(_tmp449, Scalar(2)) +
        std::pow(_tmp450, Scalar(2)) + std::pow(_tmp451, Scalar(2)) + std::pow(_tmp452, Scalar(2));
    _hessian(10, 9) = _tmp426 * _tmp458 + _tmp433 * _tmp459 + _tmp444 * _tmp465 +
                      _tmp446 * _tmp467 + _tmp448 * _tmp468 + _tmp449 * _tmp469 +
                      _tmp450 * _tmp470 + _tmp451 * _tmp471 + _tmp452 * _tmp472;
    _hessian(11, 9) = _tmp426 * _tmp477 + _tmp433 * _tmp479 + _tmp444 * _tmp484 +
                      _tmp446 * _tmp485 + _tmp448 * _tmp487 + _tmp449 * _tmp488 +
                      _tmp450 * _tmp489 + _tmp451 * _tmp490 + _tmp452 * _tmp491;
    _hessian(12, 9) = _tmp451 * _tmp492 + _tmp452 * _tmp493 + _tmp738;
    _hessian(13, 9) = _tmp451 * _tmp494 + _tmp452 * _tmp495 + _tmp761;
    _hessian(14, 9) = _tmp451 * _tmp496 + _tmp452 * _tmp497 + _tmp781;
    _hessian(15, 9) = _tmp448 * _tmp498 + _tmp449 * _tmp499 + _tmp450 * _tmp500 +
                      _tmp451 * _tmp501 + _tmp452 * _tmp502 + _tmp800;
    _hessian(16, 9) = _tmp448 * _tmp503 + _tmp449 * _tmp504 + _tmp450 * _tmp505 +
                      _tmp451 * _tmp506 + _tmp452 * _tmp507 + _tmp816;
    _hessian(17, 9) = _tmp448 * _tmp508 + _tmp449 * _tmp509 + _tmp450 * _tmp510 +
                      _tmp451 * _tmp511 + _tmp452 * _tmp512 + _tmp831;
    _hessian(18, 9) = -_tmp446 * _tmp513 + _tmp448 * _tmp514 + _tmp449 * _tmp515 +
                      _tmp450 * _tmp516 + _tmp451 * _tmp517 + _tmp452 * _tmp518;
    _hessian(19, 9) = -_tmp446 * _tmp519 + _tmp448 * _tmp520 + _tmp449 * _tmp521 +
                      _tmp450 * _tmp522 + _tmp451 * _tmp523 + _tmp452 * _tmp524;
    _hessian(20, 9) = -_tmp446 * _tmp525 + _tmp448 * _tmp526 + _tmp449 * _tmp527 +
                      _tmp450 * _tmp528 + _tmp451 * _tmp529 + _tmp452 * _tmp530;
    _hessian(21, 9) = _tmp426 * _tmp569 + _tmp433 * _tmp571 + _tmp444 * _tmp576 +
                      _tmp446 * _tmp578 + _tmp448 * _tmp579 + _tmp449 * _tmp580 +
                      _tmp450 * _tmp581 + _tmp451 * _tmp582 + _tmp452 * _tmp583;
    _hessian(22, 9) = _tmp426 * _tmp608 + _tmp433 * _tmp610 + _tmp444 * _tmp615 +
                      _tmp446 * _tmp617 + _tmp448 * _tmp619 + _tmp449 * _tmp620 +
                      _tmp450 * _tmp621 + _tmp451 * _tmp622 + _tmp452 * _tmp623;
    _hessian(23, 9) = _tmp426 * _tmp647 + _tmp433 * _tmp650 + _tmp444 * _tmp655 +
                      _tmp446 * _tmp657 + _tmp448 * _tmp659 + _tmp449 * _tmp660 +
                      _tmp450 * _tmp661 + _tmp451 * _tmp662 + _tmp452 * _tmp663;
    _hessian(24, 9) = _tmp446 * _tmp674 + _tmp448 * _tmp678 + _tmp449 * _tmp681 +
                      _tmp450 * _tmp686 + _tmp451 * _tmp690 + _tmp452 * _tmp692;
    _hessian(25, 9) = _tmp446 * _tmp699 + _tmp448 * _tmp701 + _tmp449 * _tmp703 +
                      _tmp450 * _tmp707 + _tmp451 * _tmp709 + _tmp452 * _tmp710;
    _hessian(0, 10) = 0;
    _hessian(1, 10) = 0;
    _hessian(2, 10) = 0;
    _hessian(3, 10) = 0;
    _hessian(4, 10) = 0;
    _hessian(5, 10) = 0;
    _hessian(6, 10) = 0;
    _hessian(7, 10) = 0;
    _hessian(8, 10) = 0;
    _hessian(9, 10) = 0;
    _hessian(10, 10) =
        std::pow(_tmp458, Scalar(2)) + std::pow(_tmp459, Scalar(2)) + std::pow(_tmp465, Scalar(2)) +
        std::pow(_tmp467, Scalar(2)) + std::pow(_tmp468, Scalar(2)) + std::pow(_tmp469, Scalar(2)) +
        std::pow(_tmp470, Scalar(2)) + std::pow(_tmp471, Scalar(2)) + std::pow(_tmp472, Scalar(2));
    _hessian(11, 10) = _tmp458 * _tmp477 + _tmp459 * _tmp479 + _tmp465 * _tmp484 +
                       _tmp467 * _tmp485 + _tmp468 * _tmp487 + _tmp469 * _tmp488 +
                       _tmp470 * _tmp489 + _tmp471 * _tmp490 + _tmp472 * _tmp491;
    _hessian(12, 10) = _tmp471 * _tmp492 + _tmp472 * _tmp493 + _tmp739;
    _hessian(13, 10) = _tmp471 * _tmp494 + _tmp472 * _tmp495 + _tmp762;
    _hessian(14, 10) = _tmp471 * _tmp496 + _tmp472 * _tmp497 + _tmp782;
    _hessian(15, 10) = _tmp468 * _tmp498 + _tmp469 * _tmp499 + _tmp470 * _tmp500 +
                       _tmp471 * _tmp501 + _tmp472 * _tmp502 + _tmp801;
    _hessian(16, 10) = _tmp468 * _tmp503 + _tmp469 * _tmp504 + _tmp470 * _tmp505 +
                       _tmp471 * _tmp506 + _tmp472 * _tmp507 + _tmp817;
    _hessian(17, 10) = _tmp468 * _tmp508 + _tmp469 * _tmp509 + _tmp470 * _tmp510 +
                       _tmp471 * _tmp511 + _tmp472 * _tmp512 + _tmp832;
    _hessian(18, 10) = -_tmp467 * _tmp513 + _tmp468 * _tmp514 + _tmp469 * _tmp515 +
                       _tmp470 * _tmp516 + _tmp471 * _tmp517 + _tmp472 * _tmp518;
    _hessian(19, 10) = -_tmp467 * _tmp519 + _tmp468 * _tmp520 + _tmp469 * _tmp521 +
                       _tmp470 * _tmp522 + _tmp471 * _tmp523 + _tmp472 * _tmp524;
    _hessian(20, 10) = -_tmp467 * _tmp525 + _tmp468 * _tmp526 + _tmp469 * _tmp527 +
                       _tmp470 * _tmp528 + _tmp471 * _tmp529 + _tmp472 * _tmp530;
    _hessian(21, 10) = _tmp458 * _tmp569 + _tmp459 * _tmp571 + _tmp465 * _tmp576 +
                       _tmp467 * _tmp578 + _tmp468 * _tmp579 + _tmp469 * _tmp580 +
                       _tmp470 * _tmp581 + _tmp471 * _tmp582 + _tmp472 * _tmp583;
    _hessian(22, 10) = _tmp458 * _tmp608 + _tmp459 * _tmp610 + _tmp465 * _tmp615 +
                       _tmp467 * _tmp617 + _tmp468 * _tmp619 + _tmp469 * _tmp620 +
                       _tmp470 * _tmp621 + _tmp471 * _tmp622 + _tmp472 * _tmp623;
    _hessian(23, 10) = _tmp458 * _tmp647 + _tmp459 * _tmp650 + _tmp465 * _tmp655 +
                       _tmp467 * _tmp657 + _tmp468 * _tmp659 + _tmp469 * _tmp660 +
                       _tmp470 * _tmp661 + _tmp471 * _tmp662 + _tmp472 * _tmp663;
    _hessian(24, 10) = _tmp467 * _tmp674 + _tmp468 * _tmp678 + _tmp469 * _tmp681 +
                       _tmp470 * _tmp686 + _tmp471 * _tmp690 + _tmp472 * _tmp692;
    _hessian(25, 10) = _tmp467 * _tmp699 + _tmp468 * _tmp701 + _tmp469 * _tmp703 +
                       _tmp470 * _tmp707 + _tmp471 * _tmp709 + _tmp472 * _tmp710;
    _hessian(0, 11) = 0;
    _hessian(1, 11) = 0;
    _hessian(2, 11) = 0;
    _hessian(3, 11) = 0;
    _hessian(4, 11) = 0;
    _hessian(5, 11) = 0;
    _hessian(6, 11) = 0;
    _hessian(7, 11) = 0;
    _hessian(8, 11) = 0;
    _hessian(9, 11) = 0;
    _hessian(10, 11) = 0;
    _hessian(11, 11) =
        std::pow(_tmp477, Scalar(2)) + std::pow(_tmp479, Scalar(2)) + std::pow(_tmp484, Scalar(2)) +
        std::pow(_tmp485, Scalar(2)) + std::pow(_tmp487, Scalar(2)) + std::pow(_tmp488, Scalar(2)) +
        std::pow(_tmp489, Scalar(2)) + std::pow(_tmp490, Scalar(2)) + std::pow(_tmp491, Scalar(2));
    _hessian(12, 11) = _tmp490 * _tmp492 + _tmp491 * _tmp493 + _tmp740;
    _hessian(13, 11) = _tmp490 * _tmp494 + _tmp491 * _tmp495 + _tmp763;
    _hessian(14, 11) = _tmp490 * _tmp496 + _tmp491 * _tmp497 + _tmp783;
    _hessian(15, 11) = _tmp487 * _tmp498 + _tmp488 * _tmp499 + _tmp489 * _tmp500 +
                       _tmp490 * _tmp501 + _tmp491 * _tmp502 + _tmp802;
    _hessian(16, 11) = _tmp487 * _tmp503 + _tmp488 * _tmp504 + _tmp489 * _tmp505 +
                       _tmp490 * _tmp506 + _tmp491 * _tmp507 + _tmp818;
    _hessian(17, 11) = _tmp487 * _tmp508 + _tmp488 * _tmp509 + _tmp489 * _tmp510 +
                       _tmp490 * _tmp511 + _tmp491 * _tmp512 + _tmp833;
    _hessian(18, 11) = -_tmp485 * _tmp513 + _tmp487 * _tmp514 + _tmp488 * _tmp515 +
                       _tmp489 * _tmp516 + _tmp490 * _tmp517 + _tmp491 * _tmp518;
    _hessian(19, 11) = -_tmp485 * _tmp519 + _tmp487 * _tmp520 + _tmp488 * _tmp521 +
                       _tmp489 * _tmp522 + _tmp490 * _tmp523 + _tmp491 * _tmp524;
    _hessian(20, 11) = -_tmp485 * _tmp525 + _tmp487 * _tmp526 + _tmp488 * _tmp527 +
                       _tmp489 * _tmp528 + _tmp490 * _tmp529 + _tmp491 * _tmp530;
    _hessian(21, 11) = _tmp477 * _tmp569 + _tmp479 * _tmp571 + _tmp484 * _tmp576 +
                       _tmp485 * _tmp578 + _tmp487 * _tmp579 + _tmp488 * _tmp580 +
                       _tmp489 * _tmp581 + _tmp490 * _tmp582 + _tmp491 * _tmp583;
    _hessian(22, 11) = _tmp477 * _tmp608 + _tmp479 * _tmp610 + _tmp484 * _tmp615 +
                       _tmp485 * _tmp617 + _tmp487 * _tmp619 + _tmp488 * _tmp620 +
                       _tmp489 * _tmp621 + _tmp490 * _tmp622 + _tmp491 * _tmp623;
    _hessian(23, 11) = _tmp477 * _tmp647 + _tmp479 * _tmp650 + _tmp484 * _tmp655 +
                       _tmp485 * _tmp657 + _tmp487 * _tmp659 + _tmp488 * _tmp660 +
                       _tmp489 * _tmp661 + _tmp490 * _tmp662 + _tmp491 * _tmp663;
    _hessian(24, 11) = _tmp485 * _tmp674 + _tmp487 * _tmp678 + _tmp488 * _tmp681 +
                       _tmp489 * _tmp686 + _tmp490 * _tmp690 + _tmp491 * _tmp692;
    _hessian(25, 11) = _tmp485 * _tmp699 + _tmp487 * _tmp701 + _tmp488 * _tmp703 +
                       _tmp489 * _tmp707 + _tmp490 * _tmp709 + _tmp491 * _tmp710;
    _hessian(0, 12) = 0;
    _hessian(1, 12) = 0;
    _hessian(2, 12) = 0;
    _hessian(3, 12) = 0;
    _hessian(4, 12) = 0;
    _hessian(5, 12) = 0;
    _hessian(6, 12) = 0;
    _hessian(7, 12) = 0;
    _hessian(8, 12) = 0;
    _hessian(9, 12) = 0;
    _hessian(10, 12) = 0;
    _hessian(11, 12) = 0;
    _hessian(12, 12) = std::pow(_tmp492, Scalar(2)) + std::pow(_tmp493, Scalar(2)) + _tmp731;
    _hessian(13, 12) = _tmp492 * _tmp494 + _tmp493 * _tmp495 + _tmp733;
    _hessian(14, 12) = _tmp492 * _tmp496 + _tmp493 * _tmp497 + _tmp734;
    _hessian(15, 12) = _tmp492 * _tmp501 + _tmp493 * _tmp502 + _tmp743;
    _hessian(16, 12) = _tmp492 * _tmp506 + _tmp493 * _tmp507 + _tmp744;
    _hessian(17, 12) = _tmp492 * _tmp511 + _tmp493 * _tmp512 + _tmp745;
    _hessian(18, 12) = _tmp492 * _tmp517 + _tmp493 * _tmp518 + _tmp746;
    _hessian(19, 12) = _tmp492 * _tmp523 + _tmp493 * _tmp524 + _tmp747;
    _hessian(20, 12) = _tmp492 * _tmp529 + _tmp493 * _tmp530 + _tmp748;
    _hessian(21, 12) = _tmp492 * _tmp582 + _tmp493 * _tmp583 + _tmp749;
    _hessian(22, 12) = _tmp492 * _tmp622 + _tmp493 * _tmp623 + _tmp750;
    _hessian(23, 12) = _tmp492 * _tmp662 + _tmp493 * _tmp663 + _tmp751;
    _hessian(24, 12) = _tmp492 * _tmp690 + _tmp493 * _tmp692 + _tmp752;
    _hessian(25, 12) = _tmp492 * _tmp709 + _tmp493 * _tmp710 + _tmp753;
    _hessian(0, 13) = 0;
    _hessian(1, 13) = 0;
    _hessian(2, 13) = 0;
    _hessian(3, 13) = 0;
    _hessian(4, 13) = 0;
    _hessian(5, 13) = 0;
    _hessian(6, 13) = 0;
    _hessian(7, 13) = 0;
    _hessian(8, 13) = 0;
    _hessian(9, 13) = 0;
    _hessian(10, 13) = 0;
    _hessian(11, 13) = 0;
    _hessian(12, 13) = 0;
    _hessian(13, 13) = std::pow(_tmp494, Scalar(2)) + std::pow(_tmp495, Scalar(2)) + _tmp755;
    _hessian(14, 13) = _tmp494 * _tmp496 + _tmp495 * _tmp497 + _tmp757;
    _hessian(15, 13) = _tmp494 * _tmp501 + _tmp495 * _tmp502 + _tmp765;
    _hessian(16, 13) = _tmp494 * _tmp506 + _tmp495 * _tmp507 + _tmp766;
    _hessian(17, 13) = _tmp494 * _tmp511 + _tmp495 * _tmp512 + _tmp767;
    _hessian(18, 13) = _tmp494 * _tmp517 + _tmp495 * _tmp518 + _tmp768;
    _hessian(19, 13) = _tmp494 * _tmp523 + _tmp495 * _tmp524 + _tmp769;
    _hessian(20, 13) = _tmp494 * _tmp529 + _tmp495 * _tmp530 + _tmp770;
    _hessian(21, 13) = _tmp494 * _tmp582 + _tmp495 * _tmp583 + _tmp771;
    _hessian(22, 13) = _tmp494 * _tmp622 + _tmp495 * _tmp623 + _tmp772;
    _hessian(23, 13) = _tmp494 * _tmp662 + _tmp495 * _tmp663 + _tmp773;
    _hessian(24, 13) = _tmp494 * _tmp690 + _tmp495 * _tmp692 + _tmp774;
    _hessian(25, 13) = _tmp494 * _tmp709 + _tmp495 * _tmp710 + _tmp775;
    _hessian(0, 14) = 0;
    _hessian(1, 14) = 0;
    _hessian(2, 14) = 0;
    _hessian(3, 14) = 0;
    _hessian(4, 14) = 0;
    _hessian(5, 14) = 0;
    _hessian(6, 14) = 0;
    _hessian(7, 14) = 0;
    _hessian(8, 14) = 0;
    _hessian(9, 14) = 0;
    _hessian(10, 14) = 0;
    _hessian(11, 14) = 0;
    _hessian(12, 14) = 0;
    _hessian(13, 14) = 0;
    _hessian(14, 14) = std::pow(_tmp496, Scalar(2)) + std::pow(_tmp497, Scalar(2)) + _tmp777;
    _hessian(15, 14) = _tmp496 * _tmp501 + _tmp497 * _tmp502 + _tmp784;
    _hessian(16, 14) = _tmp496 * _tmp506 + _tmp497 * _tmp507 + _tmp785;
    _hessian(17, 14) = _tmp496 * _tmp511 + _tmp497 * _tmp512 + _tmp786;
    _hessian(18, 14) = _tmp496 * _tmp517 + _tmp497 * _tmp518 + _tmp787;
    _hessian(19, 14) = _tmp496 * _tmp523 + _tmp497 * _tmp524 + _tmp788;
    _hessian(20, 14) = _tmp496 * _tmp529 + _tmp497 * _tmp530 + _tmp789;
    _hessian(21, 14) = _tmp496 * _tmp582 + _tmp497 * _tmp583 + _tmp790;
    _hessian(22, 14) = _tmp496 * _tmp622 + _tmp497 * _tmp623 + _tmp791;
    _hessian(23, 14) = _tmp496 * _tmp662 + _tmp497 * _tmp663 + _tmp792;
    _hessian(24, 14) = _tmp496 * _tmp690 + _tmp497 * _tmp692 + _tmp793;
    _hessian(25, 14) = _tmp496 * _tmp709 + _tmp497 * _tmp710 + _tmp794;
    _hessian(0, 15) = 0;
    _hessian(1, 15) = 0;
    _hessian(2, 15) = 0;
    _hessian(3, 15) = 0;
    _hessian(4, 15) = 0;
    _hessian(5, 15) = 0;
    _hessian(6, 15) = 0;
    _hessian(7, 15) = 0;
    _hessian(8, 15) = 0;
    _hessian(9, 15) = 0;
    _hessian(10, 15) = 0;
    _hessian(11, 15) = 0;
    _hessian(12, 15) = 0;
    _hessian(13, 15) = 0;
    _hessian(14, 15) = 0;
    _hessian(15, 15) = std::pow(_tmp498, Scalar(2)) + std::pow(_tmp499, Scalar(2)) +
                       std::pow(_tmp500, Scalar(2)) + std::pow(_tmp501, Scalar(2)) +
                       std::pow(_tmp502, Scalar(2)) + _tmp796;
    _hessian(16, 15) = _tmp498 * _tmp503 + _tmp499 * _tmp504 + _tmp500 * _tmp505 +
                       _tmp501 * _tmp506 + _tmp502 * _tmp507 + _tmp798;
    _hessian(17, 15) = _tmp498 * _tmp508 + _tmp499 * _tmp509 + _tmp500 * _tmp510 +
                       _tmp501 * _tmp511 + _tmp502 * _tmp512 + _tmp799;
    _hessian(18, 15) = _tmp498 * _tmp514 + _tmp499 * _tmp515 + _tmp500 * _tmp516 +
                       _tmp501 * _tmp517 + _tmp502 * _tmp518 - _tmp805;
    _hessian(19, 15) = _tmp498 * _tmp520 + _tmp499 * _tmp521 + _tmp500 * _tmp522 +
                       _tmp501 * _tmp523 + _tmp502 * _tmp524 - _tmp806;
    _hessian(20, 15) = _tmp498 * _tmp526 + _tmp499 * _tmp527 + _tmp500 * _tmp528 +
                       _tmp501 * _tmp529 + _tmp502 * _tmp530 - _tmp807;
    _hessian(21, 15) = _tmp498 * _tmp579 + _tmp499 * _tmp580 + _tmp500 * _tmp581 +
                       _tmp501 * _tmp582 + _tmp502 * _tmp583 + _tmp808;
    _hessian(22, 15) = _tmp498 * _tmp619 + _tmp499 * _tmp620 + _tmp500 * _tmp621 +
                       _tmp501 * _tmp622 + _tmp502 * _tmp623 + _tmp809;
    _hessian(23, 15) = _tmp498 * _tmp659 + _tmp499 * _tmp660 + _tmp500 * _tmp661 +
                       _tmp501 * _tmp662 + _tmp502 * _tmp663 + _tmp810;
    _hessian(24, 15) = _tmp498 * _tmp678 + _tmp499 * _tmp681 + _tmp500 * _tmp686 +
                       _tmp501 * _tmp690 + _tmp502 * _tmp692 + _tmp811;
    _hessian(25, 15) = _tmp498 * _tmp701 + _tmp499 * _tmp703 + _tmp500 * _tmp707 +
                       _tmp501 * _tmp709 + _tmp502 * _tmp710 + _tmp813;
    _hessian(0, 16) = 0;
    _hessian(1, 16) = 0;
    _hessian(2, 16) = 0;
    _hessian(3, 16) = 0;
    _hessian(4, 16) = 0;
    _hessian(5, 16) = 0;
    _hessian(6, 16) = 0;
    _hessian(7, 16) = 0;
    _hessian(8, 16) = 0;
    _hessian(9, 16) = 0;
    _hessian(10, 16) = 0;
    _hessian(11, 16) = 0;
    _hessian(12, 16) = 0;
    _hessian(13, 16) = 0;
    _hessian(14, 16) = 0;
    _hessian(15, 16) = 0;
    _hessian(16, 16) = std::pow(_tmp503, Scalar(2)) + std::pow(_tmp504, Scalar(2)) +
                       std::pow(_tmp505, Scalar(2)) + std::pow(_tmp506, Scalar(2)) +
                       std::pow(_tmp507, Scalar(2)) + _tmp814;
    _hessian(17, 16) = _tmp503 * _tmp508 + _tmp504 * _tmp509 + _tmp505 * _tmp510 +
                       _tmp506 * _tmp511 + _tmp507 * _tmp512 + _tmp815;
    _hessian(18, 16) = _tmp503 * _tmp514 + _tmp504 * _tmp515 + _tmp505 * _tmp516 +
                       _tmp506 * _tmp517 + _tmp507 * _tmp518 - _tmp821;
    _hessian(19, 16) = _tmp503 * _tmp520 + _tmp504 * _tmp521 + _tmp505 * _tmp522 +
                       _tmp506 * _tmp523 + _tmp507 * _tmp524 - _tmp822;
    _hessian(20, 16) = _tmp503 * _tmp526 + _tmp504 * _tmp527 + _tmp505 * _tmp528 +
                       _tmp506 * _tmp529 + _tmp507 * _tmp530 - _tmp823;
    _hessian(21, 16) = _tmp503 * _tmp579 + _tmp504 * _tmp580 + _tmp505 * _tmp581 +
                       _tmp506 * _tmp582 + _tmp507 * _tmp583 + _tmp824;
    _hessian(22, 16) = _tmp503 * _tmp619 + _tmp504 * _tmp620 + _tmp505 * _tmp621 +
                       _tmp506 * _tmp622 + _tmp507 * _tmp623 + _tmp825;
    _hessian(23, 16) = _tmp503 * _tmp659 + _tmp504 * _tmp660 + _tmp505 * _tmp661 +
                       _tmp506 * _tmp662 + _tmp507 * _tmp663 + _tmp826;
    _hessian(24, 16) = _tmp503 * _tmp678 + _tmp504 * _tmp681 + _tmp505 * _tmp686 +
                       _tmp506 * _tmp690 + _tmp507 * _tmp692 + _tmp828;
    _hessian(25, 16) = _tmp503 * _tmp701 + _tmp504 * _tmp703 + _tmp505 * _tmp707 +
                       _tmp506 * _tmp709 + _tmp507 * _tmp710 + _tmp829;
    _hessian(0, 17) = 0;
    _hessian(1, 17) = 0;
    _hessian(2, 17) = 0;
    _hessian(3, 17) = 0;
    _hessian(4, 17) = 0;
    _hessian(5, 17) = 0;
    _hessian(6, 17) = 0;
    _hessian(7, 17) = 0;
    _hessian(8, 17) = 0;
    _hessian(9, 17) = 0;
    _hessian(10, 17) = 0;
    _hessian(11, 17) = 0;
    _hessian(12, 17) = 0;
    _hessian(13, 17) = 0;
    _hessian(14, 17) = 0;
    _hessian(15, 17) = 0;
    _hessian(16, 17) = 0;
    _hessian(17, 17) = std::pow(_tmp508, Scalar(2)) + std::pow(_tmp509, Scalar(2)) +
                       std::pow(_tmp510, Scalar(2)) + std::pow(_tmp511, Scalar(2)) +
                       std::pow(_tmp512, Scalar(2)) + _tmp830;
    _hessian(18, 17) = _tmp508 * _tmp514 + _tmp509 * _tmp515 + _tmp510 * _tmp516 +
                       _tmp511 * _tmp517 + _tmp512 * _tmp518 - _tmp834;
    _hessian(19, 17) = _tmp508 * _tmp520 + _tmp509 * _tmp521 + _tmp510 * _tmp522 +
                       _tmp511 * _tmp523 + _tmp512 * _tmp524 - _tmp836;
    _hessian(20, 17) = _tmp508 * _tmp526 + _tmp509 * _tmp527 + _tmp510 * _tmp528 +
                       _tmp511 * _tmp529 + _tmp512 * _tmp530 - _tmp838;
    _hessian(21, 17) = _tmp508 * _tmp579 + _tmp509 * _tmp580 + _tmp510 * _tmp581 +
                       _tmp511 * _tmp582 + _tmp512 * _tmp583 + _tmp839;
    _hessian(22, 17) = _tmp508 * _tmp619 + _tmp509 * _tmp620 + _tmp510 * _tmp621 +
                       _tmp511 * _tmp622 + _tmp512 * _tmp623 + _tmp840;
    _hessian(23, 17) = _tmp508 * _tmp659 + _tmp509 * _tmp660 + _tmp510 * _tmp661 +
                       _tmp511 * _tmp662 + _tmp512 * _tmp663 + _tmp841;
    _hessian(24, 17) = _tmp508 * _tmp678 + _tmp509 * _tmp681 + _tmp510 * _tmp686 +
                       _tmp511 * _tmp690 + _tmp512 * _tmp692 + _tmp842;
    _hessian(25, 17) = _tmp508 * _tmp701 + _tmp509 * _tmp703 + _tmp510 * _tmp707 +
                       _tmp511 * _tmp709 + _tmp512 * _tmp710 + _tmp843;
    _hessian(0, 18) = 0;
    _hessian(1, 18) = 0;
    _hessian(2, 18) = 0;
    _hessian(3, 18) = 0;
    _hessian(4, 18) = 0;
    _hessian(5, 18) = 0;
    _hessian(6, 18) = 0;
    _hessian(7, 18) = 0;
    _hessian(8, 18) = 0;
    _hessian(9, 18) = 0;
    _hessian(10, 18) = 0;
    _hessian(11, 18) = 0;
    _hessian(12, 18) = 0;
    _hessian(13, 18) = 0;
    _hessian(14, 18) = 0;
    _hessian(15, 18) = 0;
    _hessian(16, 18) = 0;
    _hessian(17, 18) = 0;
    _hessian(18, 18) = std::pow(Dv_D_accel_bias(0, 0), Scalar(2)) * _tmp795 +
                       std::pow(_tmp514, Scalar(2)) + std::pow(_tmp515, Scalar(2)) +
                       std::pow(_tmp516, Scalar(2)) + std::pow(_tmp517, Scalar(2)) +
                       std::pow(_tmp518, Scalar(2));
    _hessian(19, 18) = Dv_D_accel_bias(0, 0) * _tmp835 + _tmp514 * _tmp520 + _tmp515 * _tmp521 +
                       _tmp516 * _tmp522 + _tmp517 * _tmp523 + _tmp518 * _tmp524;
    _hessian(20, 18) = Dv_D_accel_bias(0, 0) * _tmp837 + _tmp514 * _tmp526 + _tmp515 * _tmp527 +
                       _tmp516 * _tmp528 + _tmp517 * _tmp529 + _tmp518 * _tmp530;
    _hessian(21, 18) = -_tmp513 * _tmp578 + _tmp514 * _tmp579 + _tmp515 * _tmp580 +
                       _tmp516 * _tmp581 + _tmp517 * _tmp582 + _tmp518 * _tmp583;
    _hessian(22, 18) = -_tmp513 * _tmp617 + _tmp514 * _tmp619 + _tmp515 * _tmp620 +
                       _tmp516 * _tmp621 + _tmp517 * _tmp622 + _tmp518 * _tmp623;
    _hessian(23, 18) = -_tmp513 * _tmp657 + _tmp514 * _tmp659 + _tmp515 * _tmp660 +
                       _tmp516 * _tmp661 + _tmp517 * _tmp662 + _tmp518 * _tmp663;
    _hessian(24, 18) = -Dv_D_accel_bias(0, 0) * _tmp827 + _tmp514 * _tmp678 + _tmp515 * _tmp681 +
                       _tmp516 * _tmp686 + _tmp517 * _tmp690 + _tmp518 * _tmp692;
    _hessian(25, 18) = -Dv_D_accel_bias(0, 0) * _tmp812 + _tmp514 * _tmp701 + _tmp515 * _tmp703 +
                       _tmp516 * _tmp707 + _tmp517 * _tmp709 + _tmp518 * _tmp710;
    _hessian(0, 19) = 0;
    _hessian(1, 19) = 0;
    _hessian(2, 19) = 0;
    _hessian(3, 19) = 0;
    _hessian(4, 19) = 0;
    _hessian(5, 19) = 0;
    _hessian(6, 19) = 0;
    _hessian(7, 19) = 0;
    _hessian(8, 19) = 0;
    _hessian(9, 19) = 0;
    _hessian(10, 19) = 0;
    _hessian(11, 19) = 0;
    _hessian(12, 19) = 0;
    _hessian(13, 19) = 0;
    _hessian(14, 19) = 0;
    _hessian(15, 19) = 0;
    _hessian(16, 19) = 0;
    _hessian(17, 19) = 0;
    _hessian(18, 19) = 0;
    _hessian(19, 19) = std::pow(Dv_D_accel_bias(0, 1), Scalar(2)) * _tmp795 +
                       std::pow(_tmp520, Scalar(2)) + std::pow(_tmp521, Scalar(2)) +
                       std::pow(_tmp522, Scalar(2)) + std::pow(_tmp523, Scalar(2)) +
                       std::pow(_tmp524, Scalar(2));
    _hessian(20, 19) = Dv_D_accel_bias(0, 2) * _tmp835 + _tmp520 * _tmp526 + _tmp521 * _tmp527 +
                       _tmp522 * _tmp528 + _tmp523 * _tmp529 + _tmp524 * _tmp530;
    _hessian(21, 19) = -_tmp519 * _tmp578 + _tmp520 * _tmp579 + _tmp521 * _tmp580 +
                       _tmp522 * _tmp581 + _tmp523 * _tmp582 + _tmp524 * _tmp583;
    _hessian(22, 19) = -_tmp519 * _tmp617 + _tmp520 * _tmp619 + _tmp521 * _tmp620 +
                       _tmp522 * _tmp621 + _tmp523 * _tmp622 + _tmp524 * _tmp623;
    _hessian(23, 19) = -_tmp519 * _tmp657 + _tmp520 * _tmp659 + _tmp521 * _tmp660 +
                       _tmp522 * _tmp661 + _tmp523 * _tmp662 + _tmp524 * _tmp663;
    _hessian(24, 19) = -Dv_D_accel_bias(0, 1) * _tmp827 + _tmp520 * _tmp678 + _tmp521 * _tmp681 +
                       _tmp522 * _tmp686 + _tmp523 * _tmp690 + _tmp524 * _tmp692;
    _hessian(25, 19) = -Dv_D_accel_bias(0, 1) * _tmp812 + _tmp520 * _tmp701 + _tmp521 * _tmp703 +
                       _tmp522 * _tmp707 + _tmp523 * _tmp709 + _tmp524 * _tmp710;
    _hessian(0, 20) = 0;
    _hessian(1, 20) = 0;
    _hessian(2, 20) = 0;
    _hessian(3, 20) = 0;
    _hessian(4, 20) = 0;
    _hessian(5, 20) = 0;
    _hessian(6, 20) = 0;
    _hessian(7, 20) = 0;
    _hessian(8, 20) = 0;
    _hessian(9, 20) = 0;
    _hessian(10, 20) = 0;
    _hessian(11, 20) = 0;
    _hessian(12, 20) = 0;
    _hessian(13, 20) = 0;
    _hessian(14, 20) = 0;
    _hessian(15, 20) = 0;
    _hessian(16, 20) = 0;
    _hessian(17, 20) = 0;
    _hessian(18, 20) = 0;
    _hessian(19, 20) = 0;
    _hessian(20, 20) = std::pow(Dv_D_accel_bias(0, 2), Scalar(2)) * _tmp795 +
                       std::pow(_tmp526, Scalar(2)) + std::pow(_tmp527, Scalar(2)) +
                       std::pow(_tmp528, Scalar(2)) + std::pow(_tmp529, Scalar(2)) +
                       std::pow(_tmp530, Scalar(2));
    _hessian(21, 20) = -_tmp525 * _tmp578 + _tmp526 * _tmp579 + _tmp527 * _tmp580 +
                       _tmp528 * _tmp581 + _tmp529 * _tmp582 + _tmp530 * _tmp583;
    _hessian(22, 20) = -_tmp525 * _tmp617 + _tmp526 * _tmp619 + _tmp527 * _tmp620 +
                       _tmp528 * _tmp621 + _tmp529 * _tmp622 + _tmp530 * _tmp623;
    _hessian(23, 20) = -_tmp525 * _tmp657 + _tmp526 * _tmp659 + _tmp527 * _tmp660 +
                       _tmp528 * _tmp661 + _tmp529 * _tmp662 + _tmp530 * _tmp663;
    _hessian(24, 20) = -Dv_D_accel_bias(0, 2) * _tmp827 + _tmp526 * _tmp678 + _tmp527 * _tmp681 +
                       _tmp528 * _tmp686 + _tmp529 * _tmp690 + _tmp530 * _tmp692;
    _hessian(25, 20) = -Dv_D_accel_bias(0, 2) * _tmp812 + _tmp526 * _tmp701 + _tmp527 * _tmp703 +
                       _tmp528 * _tmp707 + _tmp529 * _tmp709 + _tmp530 * _tmp710;
    _hessian(0, 21) = 0;
    _hessian(1, 21) = 0;
    _hessian(2, 21) = 0;
    _hessian(3, 21) = 0;
    _hessian(4, 21) = 0;
    _hessian(5, 21) = 0;
    _hessian(6, 21) = 0;
    _hessian(7, 21) = 0;
    _hessian(8, 21) = 0;
    _hessian(9, 21) = 0;
    _hessian(10, 21) = 0;
    _hessian(11, 21) = 0;
    _hessian(12, 21) = 0;
    _hessian(13, 21) = 0;
    _hessian(14, 21) = 0;
    _hessian(15, 21) = 0;
    _hessian(16, 21) = 0;
    _hessian(17, 21) = 0;
    _hessian(18, 21) = 0;
    _hessian(19, 21) = 0;
    _hessian(20, 21) = 0;
    _hessian(21, 21) =
        std::pow(_tmp569, Scalar(2)) + std::pow(_tmp571, Scalar(2)) + std::pow(_tmp576, Scalar(2)) +
        std::pow(_tmp578, Scalar(2)) + std::pow(_tmp579, Scalar(2)) + std::pow(_tmp580, Scalar(2)) +
        std::pow(_tmp581, Scalar(2)) + std::pow(_tmp582, Scalar(2)) + std::pow(_tmp583, Scalar(2));
    _hessian(22, 21) = _tmp569 * _tmp608 + _tmp571 * _tmp610 + _tmp576 * _tmp615 +
                       _tmp578 * _tmp617 + _tmp579 * _tmp619 + _tmp580 * _tmp620 +
                       _tmp581 * _tmp621 + _tmp582 * _tmp622 + _tmp583 * _tmp623;
    _hessian(23, 21) = _tmp569 * _tmp647 + _tmp571 * _tmp650 + _tmp576 * _tmp655 +
                       _tmp578 * _tmp657 + _tmp579 * _tmp659 + _tmp580 * _tmp660 +
                       _tmp581 * _tmp661 + _tmp582 * _tmp662 + _tmp583 * _tmp663;
    _hessian(24, 21) = _tmp578 * _tmp674 + _tmp579 * _tmp678 + _tmp580 * _tmp681 +
                       _tmp581 * _tmp686 + _tmp582 * _tmp690 + _tmp583 * _tmp692;
    _hessian(25, 21) = _tmp578 * _tmp699 + _tmp579 * _tmp701 + _tmp580 * _tmp703 +
                       _tmp581 * _tmp707 + _tmp582 * _tmp709 + _tmp583 * _tmp710;
    _hessian(0, 22) = 0;
    _hessian(1, 22) = 0;
    _hessian(2, 22) = 0;
    _hessian(3, 22) = 0;
    _hessian(4, 22) = 0;
    _hessian(5, 22) = 0;
    _hessian(6, 22) = 0;
    _hessian(7, 22) = 0;
    _hessian(8, 22) = 0;
    _hessian(9, 22) = 0;
    _hessian(10, 22) = 0;
    _hessian(11, 22) = 0;
    _hessian(12, 22) = 0;
    _hessian(13, 22) = 0;
    _hessian(14, 22) = 0;
    _hessian(15, 22) = 0;
    _hessian(16, 22) = 0;
    _hessian(17, 22) = 0;
    _hessian(18, 22) = 0;
    _hessian(19, 22) = 0;
    _hessian(20, 22) = 0;
    _hessian(21, 22) = 0;
    _hessian(22, 22) =
        std::pow(_tmp608, Scalar(2)) + std::pow(_tmp610, Scalar(2)) + std::pow(_tmp615, Scalar(2)) +
        std::pow(_tmp617, Scalar(2)) + std::pow(_tmp619, Scalar(2)) + std::pow(_tmp620, Scalar(2)) +
        std::pow(_tmp621, Scalar(2)) + std::pow(_tmp622, Scalar(2)) + std::pow(_tmp623, Scalar(2));
    _hessian(23, 22) = _tmp608 * _tmp647 + _tmp610 * _tmp650 + _tmp615 * _tmp655 +
                       _tmp617 * _tmp657 + _tmp619 * _tmp659 + _tmp620 * _tmp660 +
                       _tmp621 * _tmp661 + _tmp622 * _tmp662 + _tmp623 * _tmp663;
    _hessian(24, 22) = _tmp617 * _tmp674 + _tmp619 * _tmp678 + _tmp620 * _tmp681 +
                       _tmp621 * _tmp686 + _tmp622 * _tmp690 + _tmp623 * _tmp692;
    _hessian(25, 22) = _tmp617 * _tmp699 + _tmp619 * _tmp701 + _tmp620 * _tmp703 +
                       _tmp621 * _tmp707 + _tmp622 * _tmp709 + _tmp623 * _tmp710;
    _hessian(0, 23) = 0;
    _hessian(1, 23) = 0;
    _hessian(2, 23) = 0;
    _hessian(3, 23) = 0;
    _hessian(4, 23) = 0;
    _hessian(5, 23) = 0;
    _hessian(6, 23) = 0;
    _hessian(7, 23) = 0;
    _hessian(8, 23) = 0;
    _hessian(9, 23) = 0;
    _hessian(10, 23) = 0;
    _hessian(11, 23) = 0;
    _hessian(12, 23) = 0;
    _hessian(13, 23) = 0;
    _hessian(14, 23) = 0;
    _hessian(15, 23) = 0;
    _hessian(16, 23) = 0;
    _hessian(17, 23) = 0;
    _hessian(18, 23) = 0;
    _hessian(19, 23) = 0;
    _hessian(20, 23) = 0;
    _hessian(21, 23) = 0;
    _hessian(22, 23) = 0;
    _hessian(23, 23) =
        std::pow(_tmp647, Scalar(2)) + std::pow(_tmp650, Scalar(2)) + std::pow(_tmp655, Scalar(2)) +
        std::pow(_tmp657, Scalar(2)) + std::pow(_tmp659, Scalar(2)) + std::pow(_tmp660, Scalar(2)) +
        std::pow(_tmp661, Scalar(2)) + std::pow(_tmp662, Scalar(2)) + std::pow(_tmp663, Scalar(2));
    _hessian(24, 23) = _tmp657 * _tmp674 + _tmp659 * _tmp678 + _tmp660 * _tmp681 +
                       _tmp661 * _tmp686 + _tmp662 * _tmp690 + _tmp663 * _tmp692;
    _hessian(25, 23) = _tmp657 * _tmp699 + _tmp659 * _tmp701 + _tmp660 * _tmp703 +
                       _tmp661 * _tmp707 + _tmp662 * _tmp709 + _tmp663 * _tmp710;
    _hessian(0, 24) = 0;
    _hessian(1, 24) = 0;
    _hessian(2, 24) = 0;
    _hessian(3, 24) = 0;
    _hessian(4, 24) = 0;
    _hessian(5, 24) = 0;
    _hessian(6, 24) = 0;
    _hessian(7, 24) = 0;
    _hessian(8, 24) = 0;
    _hessian(9, 24) = 0;
    _hessian(10, 24) = 0;
    _hessian(11, 24) = 0;
    _hessian(12, 24) = 0;
    _hessian(13, 24) = 0;
    _hessian(14, 24) = 0;
    _hessian(15, 24) = 0;
    _hessian(16, 24) = 0;
    _hessian(17, 24) = 0;
    _hessian(18, 24) = 0;
    _hessian(19, 24) = 0;
    _hessian(20, 24) = 0;
    _hessian(21, 24) = 0;
    _hessian(22, 24) = 0;
    _hessian(23, 24) = 0;
    _hessian(24, 24) = std::pow(_tmp673, Scalar(2)) * _tmp795 + std::pow(_tmp678, Scalar(2)) +
                       std::pow(_tmp681, Scalar(2)) + std::pow(_tmp686, Scalar(2)) +
                       std::pow(_tmp690, Scalar(2)) + std::pow(_tmp692, Scalar(2));
    _hessian(25, 24) = _tmp673 * _tmp812 + _tmp678 * _tmp701 + _tmp681 * _tmp703 +
                       _tmp686 * _tmp707 + _tmp690 * _tmp709 + _tmp692 * _tmp710;
    _hessian(0, 25) = 0;
    _hessian(1, 25) = 0;
    _hessian(2, 25) = 0;
    _hessian(3, 25) = 0;
    _hessian(4, 25) = 0;
    _hessian(5, 25) = 0;
    _hessian(6, 25) = 0;
    _hessian(7, 25) = 0;
    _hessian(8, 25) = 0;
    _hessian(9, 25) = 0;
    _hessian(10, 25) = 0;
    _hessian(11, 25) = 0;
    _hessian(12, 25) = 0;
    _hessian(13, 25) = 0;
    _hessian(14, 25) = 0;
    _hessian(15, 25) = 0;
    _hessian(16, 25) = 0;
    _hessian(17, 25) = 0;
    _hessian(18, 25) = 0;
    _hessian(19, 25) = 0;
    _hessian(20, 25) = 0;
    _hessian(21, 25) = 0;
    _hessian(22, 25) = 0;
    _hessian(23, 25) = 0;
    _hessian(24, 25) = 0;
    _hessian(25, 25) = std::pow(_tmp698, Scalar(2)) * _tmp795 + std::pow(_tmp701, Scalar(2)) +
                       std::pow(_tmp703, Scalar(2)) + std::pow(_tmp707, Scalar(2)) +
                       std::pow(_tmp709, Scalar(2)) + std::pow(_tmp710, Scalar(2));
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp112 * _tmp212 + _tmp123 * _tmp222 + _tmp130 * _tmp236 + _tmp137 * _tmp240 +
                 _tmp140 * _tmp247 + _tmp143 * _tmp249 + _tmp189 * _tmp62 + _tmp196 * _tmp69 +
                 _tmp206 * _tmp76;
    _rhs(1, 0) = _tmp112 * _tmp285 + _tmp123 * _tmp287 + _tmp130 * _tmp292 + _tmp137 * _tmp295 +
                 _tmp140 * _tmp296 + _tmp143 * _tmp297 + _tmp265 * _tmp62 + _tmp268 * _tmp69 +
                 _tmp275 * _tmp76;
    _rhs(2, 0) = _tmp112 * _tmp319 + _tmp123 * _tmp325 + _tmp130 * _tmp326 + _tmp137 * _tmp328 +
                 _tmp140 * _tmp330 + _tmp143 * _tmp331 + _tmp307 * _tmp62 + _tmp309 * _tmp69 +
                 _tmp314 * _tmp76;
    _rhs(3, 0) = _tmp140 * _tmp335 + _tmp143 * _tmp339 - _tmp844;
    _rhs(4, 0) = _tmp140 * _tmp343 + _tmp143 * _tmp347 - _tmp845;
    _rhs(5, 0) = _tmp140 * _tmp351 + _tmp143 * _tmp355 - _tmp846;
    _rhs(6, 0) = _tmp123 * _tmp359 + _tmp130 * _tmp363 + _tmp137 * _tmp367 + _tmp140 * _tmp371 +
                 _tmp143 * _tmp375 - _tmp847;
    _rhs(7, 0) = _tmp123 * _tmp379 + _tmp130 * _tmp383 + _tmp137 * _tmp387 + _tmp140 * _tmp391 +
                 _tmp143 * _tmp395 - _tmp848;
    _rhs(8, 0) = _tmp123 * _tmp399 + _tmp130 * _tmp403 + _tmp137 * _tmp407 + _tmp140 * _tmp411 +
                 _tmp143 * _tmp415 - _tmp849;
    _rhs(9, 0) = _tmp112 * _tmp446 + _tmp123 * _tmp448 + _tmp130 * _tmp449 + _tmp137 * _tmp450 +
                 _tmp140 * _tmp451 + _tmp143 * _tmp452 + _tmp426 * _tmp62 + _tmp433 * _tmp69 +
                 _tmp444 * _tmp76;
    _rhs(10, 0) = _tmp112 * _tmp467 + _tmp123 * _tmp468 + _tmp130 * _tmp469 + _tmp137 * _tmp470 +
                  _tmp140 * _tmp471 + _tmp143 * _tmp472 + _tmp458 * _tmp62 + _tmp459 * _tmp69 +
                  _tmp465 * _tmp76;
    _rhs(11, 0) = _tmp112 * _tmp485 + _tmp123 * _tmp487 + _tmp130 * _tmp488 + _tmp137 * _tmp489 +
                  _tmp140 * _tmp490 + _tmp143 * _tmp491 + _tmp477 * _tmp62 + _tmp479 * _tmp69 +
                  _tmp484 * _tmp76;
    _rhs(12, 0) = _tmp140 * _tmp492 + _tmp143 * _tmp493 + _tmp844;
    _rhs(13, 0) = _tmp140 * _tmp494 + _tmp143 * _tmp495 + _tmp845;
    _rhs(14, 0) = _tmp140 * _tmp496 + _tmp143 * _tmp497 + _tmp846;
    _rhs(15, 0) = _tmp123 * _tmp498 + _tmp130 * _tmp499 + _tmp137 * _tmp500 + _tmp140 * _tmp501 +
                  _tmp143 * _tmp502 + _tmp847;
    _rhs(16, 0) = _tmp123 * _tmp503 + _tmp130 * _tmp504 + _tmp137 * _tmp505 + _tmp140 * _tmp506 +
                  _tmp143 * _tmp507 + _tmp848;
    _rhs(17, 0) = _tmp123 * _tmp508 + _tmp130 * _tmp509 + _tmp137 * _tmp510 + _tmp140 * _tmp511 +
                  _tmp143 * _tmp512 + _tmp849;
    _rhs(18, 0) = -_tmp112 * _tmp513 + _tmp123 * _tmp514 + _tmp130 * _tmp515 + _tmp137 * _tmp516 +
                  _tmp140 * _tmp517 + _tmp143 * _tmp518;
    _rhs(19, 0) = -_tmp112 * _tmp519 + _tmp123 * _tmp520 + _tmp130 * _tmp521 + _tmp137 * _tmp522 +
                  _tmp140 * _tmp523 + _tmp143 * _tmp524;
    _rhs(20, 0) = -_tmp112 * _tmp525 + _tmp123 * _tmp526 + _tmp130 * _tmp527 + _tmp137 * _tmp528 +
                  _tmp140 * _tmp529 + _tmp143 * _tmp530;
    _rhs(21, 0) = _tmp112 * _tmp578 + _tmp123 * _tmp579 + _tmp130 * _tmp580 + _tmp137 * _tmp581 +
                  _tmp140 * _tmp582 + _tmp143 * _tmp583 + _tmp569 * _tmp62 + _tmp571 * _tmp69 +
                  _tmp576 * _tmp76;
    _rhs(22, 0) = _tmp112 * _tmp617 + _tmp123 * _tmp619 + _tmp130 * _tmp620 + _tmp137 * _tmp621 +
                  _tmp140 * _tmp622 + _tmp143 * _tmp623 + _tmp608 * _tmp62 + _tmp610 * _tmp69 +
                  _tmp615 * _tmp76;
    _rhs(23, 0) = _tmp112 * _tmp657 + _tmp123 * _tmp659 + _tmp130 * _tmp660 + _tmp137 * _tmp661 +
                  _tmp140 * _tmp662 + _tmp143 * _tmp663 + _tmp62 * _tmp647 + _tmp650 * _tmp69 +
                  _tmp655 * _tmp76;
    _rhs(24, 0) = _tmp112 * _tmp674 + _tmp123 * _tmp678 + _tmp130 * _tmp681 + _tmp137 * _tmp686 +
                  _tmp140 * _tmp690 + _tmp143 * _tmp692;
    _rhs(25, 0) = _tmp112 * _tmp699 + _tmp123 * _tmp701 + _tmp130 * _tmp703 + _tmp137 * _tmp707 +
                  _tmp140 * _tmp709 + _tmp143 * _tmp710;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
