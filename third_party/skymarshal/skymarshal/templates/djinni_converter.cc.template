// DO NOT MODIFY THIS FILE
// This file was autogenerated by skymarshal
{% if enum_type.source_file %}
// Source File: {{ enum_type.source_file }}
{% endif %}
#include <{{enum_type.filename_h}}>

#include "util/error_reporter/error_reporter.h"

{{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} LcmToDjinni(const {{enum_type.lcm_package}}::{{enum_type.lcm_name}}& lcm_enum) {
  switch (lcm_enum.value) {
{% for enum_case in enum_type.cases %}
    case {{enum_type.lcm_package}}::{{enum_type.lcm_name}}::{{enum_case.lcm_name}}:
      return {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{{enum_case.djinni_name}};
{% endfor %}
    default:
      REPORT_WARNING("Unhandled {{enum_type.lcm_package}}::{{enum_type.lcm_name}}::{}", lcm_enum.value);
      return {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{{enum_type.default_case.djinni_name}};
  }
}

{{enum_type.lcm_package}}::{{enum_type.lcm_name}} DjinniToLcm({{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} djinni_enum) {
  switch (djinni_enum) {
{% for enum_case in enum_type.cases %}
    case {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{{enum_case.djinni_name}}:
      return {{enum_type.lcm_package}}::{{enum_type.lcm_name}}::{{enum_case.lcm_name}};
{% endfor %}
    default:
      REPORT_WARNING("Unhandled {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{}", static_cast<int>(djinni_enum));
      return {{enum_type.lcm_package}}::{{enum_type.lcm_name}}::{{enum_type.default_case.lcm_name}};
  }
}

{% if enum_type.is_protobuf %}
{{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} PbToDjinni({{enum_type.proto_typename}} proto_enum) {
  switch (proto_enum) {
{% for enum_case in enum_type.cases %}
    case {{enum_type.proto_container_typename}}::{{enum_case.proto_name}}:
      return {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{{enum_case.djinni_name}};
{% endfor %}
    default:
      REPORT_WARNING("Unhandled {{enum_type.proto_container_typename}}::{}", static_cast<int>(proto_enum));
      return {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{{enum_type.default_case.djinni_name}};
  }
}

{{enum_type.proto_typename}} DjinniToPb({{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} djinni_enum) {
  switch (djinni_enum) {
{% for enum_case in enum_type.cases %}
    case {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{{enum_case.djinni_name}}:
      return {{enum_type.proto_container_typename}}::{{enum_case.proto_name}};
{% endfor %}
    default:
      REPORT_WARNING("Unhandled {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{}", static_cast<int>(djinni_enum));
      return {{enum_type.proto_container_typename}}::{{enum_type.default_case.proto_name}};
  }
}

{% endif %}
namespace {{enum_type.djinni_namespace}} {

std::ostream& operator <<(std::ostream& s, {{enum_type.djinni_name}} djinni_enum) {
  switch (djinni_enum) {
{% for enum_case in enum_type.cases %}
    case {{enum_type.djinni_name}}::{{enum_case.djinni_name}}:
      return s << "{{enum_case.lcm_name}}";
{% endfor %}
    default:
      REPORT_WARNING("Unhandled {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{}", static_cast<int>(djinni_enum));
      return s << FmtStr("{{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}::{}", static_cast<int>(djinni_enum));
  }
}

}  // namespace {{enum_type.djinni_namespace}}
