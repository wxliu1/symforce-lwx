// DO NOT MODIFY THIS FILE
// This file was autogenerated by skymarshal
{% if enum_type.source_file %}
// Source File: {{ enum_type.source_file }}
{% endif %}
#pragma once

#include <ostream>

#include <{{enum_type.djinni_header}}>
#include <{{enum_type.lcm_header}}>
{% if enum_type.is_protobuf %}
#include <{{enum_type.proto_header}}>
{% endif %}

// Convert {{enum_type.lcm_package}}::{{enum_type.lcm_name}} to {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}
{{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} LcmToDjinni(const {{enum_type.lcm_package}}::{{enum_type.lcm_name}}& lcm_enum);

// Convert {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} to {{enum_type.lcm_package}}::{{enum_type.lcm_name}}
{{enum_type.lcm_package}}::{{enum_type.lcm_name}} DjinniToLcm({{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} djinni_enum);

{% if enum_type.is_protobuf %}
// Convert {{enum_type.proto_typename}} to {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}}
{{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} PbToDjinni({{enum_type.proto_typename}} proto_enum);

// Convert {{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} to {{enum_type.proto_typename}}
{{enum_type.proto_typename}} DjinniToPb({{enum_type.djinni_namespace}}::{{enum_type.djinni_name}} djinni_enum);

{% endif %}
namespace {{enum_type.djinni_namespace}} {

// Support stringification of {{enum_type.djinni_name}}
std::ostream& operator <<(std::ostream& s, {{enum_type.djinni_name}} djinni_enum);

}  // namespace {{enum_type.djinni_namespace}}
